{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACV;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,mBAAmB,6CAAW;AAC9F;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,mBAAmB,6CAAW;AAC9F;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,mBAAmB,6CAAW;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,kCAAkC,6CAAW;AAC7G;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,6BAA6B,uDAAqB,GAAG,6CAAW,oBAAoB,6CAAW;AAC/F;AACA,yBAAyB,6CAAW;AACpC,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW,qBAAqB,6CAAW;AACpE;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qEAA8B;AACtF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iEAA4B;AACpF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,6DAA0B;AAClF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2CAA2C,qDAAmB,kBAAkB,uDAAqB;AACrG;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,qBAAqB,6CAAW,yBAAyB,6CAAW;AACpE;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACO;AACP;AACA,qBAAqB,6CAAW,iCAAiC,6CAAW;AAC5E;AACA;AACA,6BAA6B,uDAAqB;AAClD,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC;AACA;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAW;AAC1C,4BAA4B,6CAAW;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA,qBAAqB,6CAAW,uCAAuC,6CAAW;AAClF;AACA;AACA,6BAA6B,uDAAqB;AAClD,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,CAAC,2DAAe;AAClE,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAW;AAC1C,4BAA4B,6CAAW;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,2CAA2C,6CAAW,qCAAqC,6CAAW,qCAAqC,6CAAW;AACtN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E,2CAA2C,qDAAmB,kBAAkB,uDAAqB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA,sBAAsB,qDAAmB;AACzC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF,yBAAyB,6CAAW,iBAAiB,6CAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA,2CAA2C,qDAAmB,kBAAkB,uDAAqB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW,4BAA4B,6CAAW;AACnE,iBAAiB,6CAAW,0BAA0B,6CAAW;AACjE,iBAAiB,6CAAW,8BAA8B,6CAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA,uCAAuC,qDAAmB;AAC1D,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW,4BAA4B,6CAAW;AACnE,iBAAiB,6CAAW,0BAA0B,6CAAW;AACjE,iBAAiB,6CAAW,8BAA8B,6CAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oCAAoC;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,uDAAqB;AAClD,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,yBAAyB,6CAAW,6BAA6B,6CAAW;AAC5E,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,aAAa,6CAAW;AACxB,aAAa,6CAAW;AACxB,aAAa,6CAAW;AACxB,aAAa,6CAAW;AACxB;AACA,sCAAsC,6CAAW;AACjD,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,sBAAsB,qDAAmB;AACzC,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,uDAAuB;AAC/E,6BAA6B,wDAAsB;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,YAAY,+CAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qEAA8B,aAAa;AACnG;AACA,sBAAsB,qDAAmB;AACzC;AACA,6BAA6B,uDAAqB;AAClD;AACA,sBAAsB,qDAAmB;AACzC;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,qDAAsB;AAC9E;AACA;AACA,6BAA6B,uDAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB,GAAG,6CAAW,gDAAgD,6CAAW,kDAAkD,6CAAW;AACxL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,iBAAiB,6CAAW;AAC5B,iBAAiB,6CAAW;AAC5B,iBAAioDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AACxJ,2CAA2C,qDAAmB,kBAAkB,wDAAsB;AACtG;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA,gEAAgE,qDAAmB;AACnF,gEAAgE,qDAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAW;AAChB,KAAK,6CAAW;AAChB;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD,wDAAsB,wCAAwC,6CAAW;AAC3H,kEAAkE,qDAAmB,cAAc,6CAAW;AAC9G,kEAAkE,qDAAmB,cAAc,6CAAW;AAC9G,2CAA2C,qDAAmB,cAAc,6CAAW,iDAAiD,uDAAqB;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD,wDAAsB,wCAAwC,6CAAW;AAC3H,2CAA2C,qDAAmB,cAAc,6CAAW,8CAA8C,uDAAqB;AAC1J;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD,wDAAsB,wCAAwC,6CAAW;AAC3H,kFAAkF,qDAAmB,cAAc,6CAAW;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD,wDAAsB,wCAAwC,6CAAW,4CAA4C,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAC1N,mDAAmD,qDAAmB,cAAc,6CAAW;AAC/F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,8CAA8C,6CAAW,gDAAgD,wDAAsB;AAC/H,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc,kDAAkD,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB,kCAAkC,uDAAqB;AACxc;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kDAAkD,wDAAsB,wCAAwC,6CAAW;AAC3H,2CAA2C,qDAAmB,cAAc,6CAAW;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC,6BAA6B,uDAAqB;AAClD,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,2DAAyB;AACjF;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,wDAAsB;AACnD,6BAA6B,uDAAqB,GAAG,6CAAW,iCAAiC,6CAAW,oCAAoC,6CAAW,oCAAoC,6CAAW,wCAAwC,6CAAW,kCAAkC,6CAAW,sCAAsC,6CAAW,kCAAkC,6CAAW,yCAAyC,6CAAW;AAC5b;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,iDAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA,sBAAsB,qDAAmB;AACzC,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E,yBAAyB,6CAAW;AACpC;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA,wBAAwB,6CAAW;AACnC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,YAAY,+CAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,mDAAqB;AAC7E;AACA;AACA;AACA,sBAAsB,qDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,yDAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6BAA6B,wDAAsB;AACnD,yBAAyB,6CAAW;AACpC,6BAA6B,oDAAkB,CAAC,mBAAO,CAAC,+DAA2B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6CAAW;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,YAAY,+CAAa;AACzB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/1GwC;AACxC;AACA;AACO;AACP;AACA;AACA,2FAA2F;AAC3F,uEAAuE;AACvE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+FAA+F;AAC/F,yEAAyE;AACzE;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iGAAiG;AACjG,iGAAiG;AACjG,2EAA2E,6DAA6D;AACxI;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG,iGAAiG;AACjG,iGAAiG;AACjG,2EAA2E,6DAA6D,6DAA6D;AACrM;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,uEAAuE,2DAA2D,0DAA0D;AAC5L;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG,iGAAiG;AACjG,iGAAiG;AACjG,2EAA2E,6DAA6D,6DAA6D;AACrM;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,mEAAmE,uDAAuD,sDAAsD;AAChL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+FAA+F;AAC/F,yEAAyE;AACzE;AACA;AACA;AACO;AACP;AACA;AACA;AACA,uDAAuD;AACvD,+FAA+F;AAC/F;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,+FAA+F;AAC/F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,uDAAuD,+BAA+B;AACtF;AACA,sDAAsD;AACtD,KAAK;AACL,4FAA4F;AAC5F,KAAK;AACL,8CAA8C;AAC9C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,MAAM;AACN,mGAAmG;AACnG;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACO;AACP;AACA,qFAAqF;AACrF,oEAAoE,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,mCAAmC,eAAe,GAAG;AACjmC;AACA;AACA,+DAA+D,mQAAmQ;AAClU,kEAAkE,yOAAyO;AAC3S,2DAA2D,qCAAqC;AAChG,wEAAwE,gBAAgB,SAAS,SAAS,4BAA4B,4BAA4B,KAAK,GAAG;AAC1K;AACA,iFAAiF;AACjF;AACA;AACA;AACA,yDAAyD;AACzD,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACO;AACP;AACA,+EAA+E;AAC/E;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+FAA+F;AAC/F,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+FAA+F;AAC/F,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,uDAAuD;AACvD,+FAA+F;AAC/F;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,+FAA+F;AAC/F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,6DAA6D;AAC7D,MAAM;AACN,mGAAmG;AACnG;AACA,0CAA0C;AAC1C;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,2EAA2E,6DAA6D;AACxI;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,mEAAmE,wDAAwD;AAC3H;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,2EAA2E,6DAA6D;AACxI;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA,iGAAiG;AACjG;AACA,mEAAmE,wDAAwD;AAC3H;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F,gHAAgH;AAChH;AACA,uEAAuE,iCAAiC;AACxG;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2FAA2F;AAC3F,gHAAgH;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,0EAA0E,gBAAgB,4CAA4C,uFAAuF,0BAA0B,4CAA4C,GAAG;AACtS;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iGAAiG;AACjG,gGAAgG;AAChG;AACA,+CAA+C;AAC/C,sDAAsD,8BAA8B;AACpF,uDAAuD,+BAA+B;AACtF,sDAAsD;AACtD,2EAA2E;AAC3E,uBAAuB,yBAAyB;AAChD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gIAAgI;AAChI,6JAA6J;AAC7J,qGAAqG;AACrG,wIAAwI;AACxI,8IAA8I;AAC9I;AACA,oDAAoD;AACpD,gEAAgE;AAChE,uBAAuB,kEAAkE,GAAG;AAC5F,mBAAmB,kEAAkE,GAAG;AACxF,YAAY;AACZ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,6CAA6C;AAC7C,gGAAgG;AAChG,iEAAiE;AACjE,0BAA0B;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uIAAuI;AACvI,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,mEAAmE,0BAA0B,iBAAiB,iCAAiC,kCAAkC,oBAAoB,GAAG;AACxM;AACA,mEAAmE,eAAe,iCAAiC,sBAAsB,mDAAmD,qBAAqB,GAAG;AACpN;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA,yDAAyD,iDAAiD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2DAA2D;AAC3D,yDAAyD;AACzD,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iEAAiE;AACjE,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACO;AACP,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4DAA4D;AAC5D,oEAAoE;AACpE,sEAAsE;AACtE,yDAAyD;AACzD,2EAA2E;AAC3E,8CAA8C;AAC9C;AACA,gEAAgE,uDAAuD,gCAAgC,+CAA+C,8BAA8B,wCAAwC,iCAAiC,GAAG;AAChT;AACA,sDAAsD,kCAAkC,+BAA+B,uBAAuB,6BAA6B,4BAA4B,wBAAwB,4BAA4B,yBAAyB,sBAAsB,GAAG;AAC7S;AACA,kEAAkE,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,GAAG;AACpY;AACA,oGAAoG,cAAc,gDAAgD,kCAAkC,eAAe,uBAAuB,GAAG;AAC7O;AACA,8FAA8F,6BAA6B,uBAAuB,iBAAiB,gCAAgC,sBAAsB,eAAe,4CAA4C,sBAAsB,kCAAkC,0BAA0B,+CAA+C,iDAAiD,yCAAyC,yBAAyB,uBAAuB,uBAAuB,uBAAuB,2BAA2B,WAAW,GAAG;AACtnB;AACA,oFAAoF,qBAAqB,oCAAoC,sBAAsB,yBAAyB,iCAAiC,2BAA2B,qBAAqB,GAAG;AAChR;AACA,4FAA4F,yBAAyB,oCAAoC,sBAAsB,yBAAyB,iCAAiC,4BAA4B,oBAAoB,oBAAoB,4BAA4B,GAAG;AAC5U;AACA,4EAA4E,kBAAkB,oCAAoC,mBAAmB,mBAAmB,yBAAyB,WAAW,4BAA4B,YAAY,GAAG;AACvP;AACA,6EAA6E,+BAA+B,uBAAuB,oCAAoC,mBAAmB,8BAA8B,yBAAyB,sBAAsB,oCAAoC,mBAAmB,yBAAyB,iCAAiC,8BAA8B,oBAAoB,oBAAoB,qBAAqB,oGAAoG,YAAY,GAAG;AACtkB;AACA,qEAAqE,qDAAqD,gCAAgC,qBAAqB,GAAG;AAClL;AACA,gEAAgE,uCAAuC,+CAA+C,kBAAkB,GAAG;AAC3K;AACA,gEAAgE,uCAAuC,+CAA+C,8BAA8B,wCAAwC,iCAAiC,kBAAkB,GAAG;AAClR;AACA,oDAAoD;AACpD,wCAAwC;AACxC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,2DAA2D;AAC3D,uEAAuE;AACvE,0GAA0G;AAC1G,sGAAsG;AACtG;AACA,0DAA0D,oBAAoB,6CAA6C,uBAAuB,+CAA+C,eAAe;AAChN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,yEAAyE;AACzE,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,yEAAyE;AACzE,uDAAuD;AACvD,4FAA4F;AAC5F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,yEAAyE;AACzE,uDAAuD,2BAA2B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,yEAAyE;AACzE,uDAAuD,2BAA2B;AAClF,4FAA4F;AAC5F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uFAAuF,cAAc;AACrG,kEAAkE,aAAa,SAAS,QAAQ,IAAI,SAAS,EAAE,aAAa,aAAa,oBAAoB,KAAK,EAAE;AACpK,sEAAsE,aAAa,QAAQ;AAC3F;AACA;AACA;AACO;AACP;AACA;AACA,yBAAyB,aAAa,GAAG,oBAAoB;AAC7D;AACA;AACA;AACO;AACP;AACA;AACA;AACA,yBAAyB,aAAa,GAAG,oBAAoB,GAAG,UAAU,EAAE;AAC5E;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,WAAW,qBAAqB,aAAa,GAAG;AAC/G,eAAe,aAAa;AAC5B,YAAY;AACZ,yDAAyD,aAAa,GAAG,oBAAoB,GAAG,WAAW,EAAE;AAC7G;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACO;AACP;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA,qFAAqF,yBAAyB,0BAA0B,4BAA4B,GAAG;AACvK;AACA,+FAA+F,uBAAuB,6BAA6B,mDAAmD,uCAAuC,kCAAkC,0BAA0B,uDAAuD,+BAA+B,oBAAoB,yCAAyC,0BAA0B,4BAA4B,GAAG;AACrf;AACA,6EAA6E;AAC7E;AACA,oDAAoD,qBAAqB,YAAY;AACrF;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6KAA6K;AAC7K,oGAAoG;AACpG;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gFAAgF;AAChF,8EAA8E,mCAAmC,IAAI,SAAS,iEAAiE,YAAY,GAAG;AAC9M,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iEAAiE;AACjE,mDAAmD;AACnD,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4CAA4C;AAC5C,gDAAgD;AAChD;AACA,UAAU;AACV;AACA,YAAY;AACZ;AACA,qCAAqC;AACrC,8CAA8C;AAC9C;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,gBAAgB;AAChB,qBAAqB;AACrB;AACA,qCAAqC;AACrC,8CAA8C;AAC9C;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,gBAAgB;AAChB,qBAAqB;AACrB;AACA,qCAAqC;AACrC,8CAA8C;AAC9C;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,gBAAgB;AAChB,qBAAqB;AACrB;AACA,qCAAqC;AACrC,8CAA8C;AAC9C;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,sCAAsC;AACtC,gBAAgB;AAChB;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,gBAAgB;AAChB,qBAAqB;AACrB;AACA,wBAAwB;AACxB,oCAAoC;AACpC,qBAAqB;AACrB;AACA,wBAAwB;AACxB,oCAAoC;AACpC,qBAAqB;AACrB;AACA,wBAAwB;AACxB,qBAAqB;AACrB;AACA,wBAAwB;AACxB,qBAAqB;AACrB;AACA,+CAA+C;AAC/C;AACA,gBAAgB;AAChB,0BAA0B;AAC1B,gBAAgB;AAChB,qBAAqB;AACrB,YAAY;AACZ,UAAU;AACV,mBAAmB;AACnB,QAAQ;AACR,wDAAwD;AACxD,sDAAsD;AACtD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA,kHAAkH;AAClH,iDAAiD;AACjD,6CAA6C;AAC7C,4CAA4C;AAC5C;AACA,UAAU;AACV,uDAAuD;AACvD,UAAU;AACV;AACA,UAAU;AACV,iDAAiD;AACjD,UAAU;AACV;AACA,sFAAsF;AACtF;AACO;AACP;AACA,eAAe,KAAK;AACpB;AACO;AACP,qbAAqb;AACrb,2GAA2G,sBAAsB,qCAAqC,qCAAqC,qCAAqC,qCAAqC,qCAAqC,0CAA0C,qCAAqC,qCAAqC,6BAA6B,sBAAsB,4CAA4C,0DAA0D,sBAAsB,mCAAmC,8BAA8B,iDAAiD,sCAAsC,cAAc,MAAM,qCAAqC,oCAAoC,gCAAgC,8BAA8B,yCAAyC,uCAAuC,oCAAoC,sCAAsC,gCAAgC,mCAAmC,mCAAmC,kCAAkC,oCAAoC,sCAAsC,yBAAyB,0DAA0D,2BAA2B,6CAA6C,8BAA8B,oCAAoC,+BAA+B,YAAY,wBAAwB,yBAAyB,4DAA4D,4DAA4D,4BAA4B,yCAAyC,uBAAuB,OAAO,QAAQ,2FAA2F,0EAA0E,6CAA6C,8BAA8B,iCAAiC,2CAA2C,cAAc,yBAAyB,OAAO,SAAS,kDAAkD,0DAA0D,8BAA8B,kCAAkC,6BAA6B,wBAAwB,uCAAuC,uCAAuC,kDAAkD,eAAe,aAAa,0BAA0B,sCAAsC,8CAA8C,iCAAiC,UAAU,QAAQ,MAAM,qBAAqB,+DAA+D,IAAI,4BAA4B,qBAAqB,yCAAyC,wCAAwC,mBAAmB,IAAI,8BAA8B,qBAAqB,yCAAyC,wCAAwC,wCAAwC,yCAAyC,mBAAmB,IAAI;AAC5oG,qDAAqD,yBAAyB,+BAA+B,wBAAwB,2BAA2B,kCAAkC;AAClM;AACA;AACA;AACO;AACP;AACA;AACA;AACA,4DAA4D,8BAA8B,mCAAmC,4BAA4B,sCAAsC,6BAA6B,uCAAuC,0CAA0C,gBAAgB,QAAQ;AACrU;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAAsI;AACtI,uHAAuH;AACvH,+IAA+I;AAC/I;AACA;AACA,uJAAuJ;AACvJ,wDAAwD;AACxD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oGAAoG;AACpG,iEAAiE;AACjE;AACA;AACA;AACA;AACO;AACP;AACA,uCAAuC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA,0DAA0D;AAC1D,mEAAmE;AACnE,0CAA0C;AAC1C,qDAAqD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACO;AACP;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,uDAAuD;AACvD,uGAAuG;AACvG,0CAA0C;AAC1C;AACA,4CAA4C,kBAAkB,mCAAmC,kBAAkB;AACnH,MAAM;AACN,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI;AAChI,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,qIAAqI;AACrI;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uCAAuC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oEAAoE;AACpE,gDAAgD,yBAAyB;AACzE,wDAAwD;AACxD,oFAAoF,YAAY,gBAAgB,SAAS,QAAQ,6BAA6B,cAAc,GAAG,2BAA2B,uBAAuB,4BAA4B,wBAAwB,2BAA2B,wBAAwB,GAAG;AAC3U,8EAA8E,YAAY,0BAA0B,yBAAyB,gBAAgB,YAAY,QAAQ,6BAA6B,cAAc,GAAG,6BAA6B,uBAAuB,6BAA6B,uBAAuB,4BAA4B,wBAAwB,GAAG;AAC9X,iFAAiF,gBAAgB,QAAQ,OAAO,wBAAwB,QAAQ,GAAG,uBAAuB,GAAG,GAAG;AAChL,oEAAoE,gBAAgB,eAAe,KAAK,uBAAuB,GAAG,GAAG;AACrI;AACA,gDAAgD,iBAAiB,SAAS,QAAQ,wBAAwB,GAAG,aAAa,wBAAwB,cAAc,yBAAyB,cAAc,yBAAyB,cAAc,yBAAyB,cAAc,wBAAwB,cAAc,0BAA0B,cAAc,yBAAyB,cAAc;AAC1Y;AACA,uCAAuC,aAAa,2BAA2B,aAAa,wBAAwB,yBAAyB,YAAY,2BAA2B,yBAAyB,yBAAyB,YAAY,aAAa;AAC/P;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iIAAiI;AACjI;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,sFAAsF;AACtF;AACA,2CAA2C;AAC3C,4CAA4C;AAC5C,wCAAwC;AACxC,4CAA4C;AAC5C,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,sFAAsF;AACtF;AACA,sEAAsE;AACtE,2CAA2C;AAC3C;AACA;AACA;AACO;AACP;AACA,oDAAoD;AACpD;AACA;AACA;AACO;AACP;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,gDAAgD;AAChD,qDAAqD;AACrD,kCAAkC;AAClC,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA,EAAE;AACF;AACO;AACP;AACA;AACA;AACA,4EAA4E;AAC5E,sFAAsF;AACtF;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,EAAE;AACF;AACA;AACO;AACP,uEAAuE;AACvE,wEAAwE;AACxE,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA,mCAAmC,IAAI,GAAG,IAAI,EAAE;AAChD;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,IAAI,GAAG,IAAI,EAAE;AAC9C;AACA;AACA;AACA;AACO;AACP,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF,wDAAwD;AACxD,6DAA6D;AAC7D,uCAAuC;AACvC,wCAAwC;AACxC,oCAAoC;AACpC,wCAAwC;AACxC,oCAAoC;AACpC,wCAAwC;AACxC,oCAAoC;AACpC,wCAAwC;AACxC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,kFAAkF;AAClF,0DAA0D;AAC1D,oDAAoD;AACpD,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qEAAqE,oBAAoB;AACzF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oGAAoG,oBAAoB;AACxH;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oGAAoG,oBAAoB;AACxH;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gGAAgG,oBAAoB;AACpH;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6HAA6H,oBAAoB;AACjJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6HAA6H,oBAAoB;AACjJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAqI,oBAAoB;AACzJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAqI,oBAAoB;AACzJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,mDAAmD,gCAAgC,oBAAoB;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B,yBAAyB,gCAAgC,gCAAgC,gCAAgC,gCAAgC,oBAAoB,aAAa;AACvQ;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F,mFAAmF;AACnF,sCAAsC;AACtC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+FAA+F;AAC/F,mCAAmC;AACnC;AACA;AACO;AACP;AACA;AACA,iEAAiE;AACjE;AACA;AACO;AACP;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACO;AACP;AACA;AACA,+DAA+D;AAC/D,0DAA0D;AAC1D;AACA,0BAA0B,KAAK;AAC/B,cAAc;AACd,qDAAqD;AACrD,4BAA4B,MAAM;AAClC,gBAAgB;AAChB;AACA,sDAAsD;AACtD,8CAA8C;AAC9C,kBAAkB;AAClB,cAAc;AACd,mCAAmC;AACnC;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB,OAAO;AAC3B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sCAAsC;AACtC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,sDAAsD;AACtD;AACA,sBAAsB,KAAK;AAC3B,UAAU;AACV;AACA,UAAU;AACV,yDAAyD;AACzD,UAAU;AACV;AACA,UAAU;AACV,8CAA8C;AAC9C,UAAU;AACV,0BAA0B,MAAM;AAChC,wBAAwB,MAAM;AAC9B,YAAY;AACZ;AACA,gDAAgD;AAChD,0CAA0C;AAC1C,cAAc;AACd,UAAU;AACV,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,eAAe;AACf,kBAAkB,OAAO;AACzB;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4EAA4E,mDAAiB;AAC7F,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,wEAAwE;AACxE,qHAAqH,8CAA8C;AACnK,mGAAmG;AACnG,wFAAwF;AACxF,mEAAmE;AACnE,qCAAqC;AACrC;AACA,oCAAoC,gIAAgI;AACpK,6GAA6G;AAC7G,yEAAyE;AACzE,gBAAgB;AAChB,kDAAkD;AAClD;AACA,oDAAoD;AACpD,eAAe,MAAM;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACO;AACP,4HAA4H,uBAAuB;AACnJ;AACA,UAAU;AACV,wFAAwF;AACxF,uBAAuB;AACvB,wBAAwB;AACxB,YAAY;AACZ,yBAAyB;AACzB,4BAA4B,sBAAsB,MAAM;AACxD,sEAAsE;AACtE,YAAY;AACZ,2BAA2B;AAC3B,UAAU;AACV;AACA,0DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH;AAChH,uDAAuD;AACvD;AACA,4DAA4D;AAC5D;AACA,4CAA4C,gCAAgC;AAC5E;AACA,cAAc;AACd;AACA;;;;;;;;;;;;;;;ACvyCAAyC;AACzC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C,6CAA6C;AAC7C,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mCAAmC;AACnC,uCAAuC;AACvC,sCAAsC;AACtC,2BAA2B;AAC3B,iCAAiC;AACjC,+BAA+B;AAC/B,+BAA+B;AAC/B,iCAAiC;AACjC,uCAAuC;AACvC,2CAA2C;AAC3C,qCAAqC;AACrC,wCAAwC;AACxC,qCAAqC;AACrC,2CAA2C;AAC3C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;AChmCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,oCAAoC;AACpC,qCAAqC;AACrC,oCAAoC;AACpC,8BAA8B;AAC9B,iCAAiC;AACjC,iCAAiC;AACjC,kCAAkC;AAClC,mCAAmC;AACnC,wCAAwC;AACxC,0CAA0C;AAC1C,sCAAsC;AACtC,wCAAwC;AACxC,sCAAsC;AACtC,wCAAwC;AACxC,sCAAsC;AACtC;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;ACpmCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,oCAAoC;AACpC,qCAAqC;AACrC,oCAAoC;AACpC,8BAA8B;AAC9B,iCAAiC;AACjC,iCAAiC;AACjC,kCAAkC;AAClC,mCAAmC;AACnC,wCAAwC;AACxC,0CAA0C;AAC1C,sCAAsC;AACtC,wCAAwC;AACxC,sCAAsC;AACtC,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChrRP;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNwC;AACwB;AACA;AACb;AACE;AACZ;AACzC;AACA;AACA,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,SAAS,wDAAS;AAC5C,cAAc,8CAAY,KAAK,+CAAK;AACpC,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,aAAa,8DAAe;AACtD,cAAc,8CAAY,SAAS,qDAAW;AAC9C;AACA;AACA,cAAc,gDAAc,EAAE,0CAAM;AACpC;AACA;AACA,cAAc,iDAAe,WAAW,kDAAU,E","sources":["webpack://mixly-lib-keyes-sensor/./src/blocks/block.js","webpack://mixly-lib-keyes-sensor/./src/generators/generator.js","webpack://mixly-lib-keyes-sensor/./src/language/en.js","webpack://mixly-lib-keyes-sensor/./src/language/zh-hans.js","webpack://mixly-lib-keyes-sensor/./src/language/zh-hant.js","webpack://mixly-lib-keyes-sensor/external var \"Blockly\"","webpack://mixly-lib-keyes-sensor/external var \"profile\"","webpack://mixly-lib-keyes-sensor/webpack/bootstrap","webpack://mixly-lib-keyes-sensor/webpack/runtime/compat get default export","webpack://mixly-lib-keyes-sensor/webpack/runtime/define property getters","webpack://mixly-lib-keyes-sensor/webpack/runtime/hasOwnProperty shorthand","webpack://mixly-lib-keyes-sensor/webpack/runtime/make namespace object","webpack://mixly-lib-keyes-sensor/./src/index.js"],"sourcesContent":["import * as Blockly from 'blockly/core';\r\nimport profile from 'profile';\r\n\r\n//////////////////颜色/////////////////////\r\nconst CONTROL_HUE = 120;\r\nconst DIGITAL_HUE = 230;\r\nconst ANALOG_HUE = 360;\r\nconst SPECIAL_HUE = 320;\r\nconst DISPLAY_HUE = 275;\r\nconst COMMUNICATE_HUE = 180;\r\n\r\n\r\n/////////////////模拟输出//////////////////////\r\nexport const ke_a_Write = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.Kids_anologWrite);\r\n        //.appendField(new Blockly.FieldImage(\"../../media/KS0077/ks77_led3.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"num\", Number)\r\n            .appendField(Blockly.Msg.Kids_value)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n\r\n        //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.ke_ON, \"HIGH\"], [Blockly.Msg.ke_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n//////////////////红色LED////////////////\r\nexport const ke_led_r = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            //.appendField(Blockly.Msg.MIXLY_ke_LED1)\r\n            .appendField(Blockly.Msg.ke_red_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_red.png\"), 52, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//////////////////黄色LED////////////////\r\nexport const ke_led_y = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_yellow_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_yellow.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//////////////////白色LED////////////////\r\nexport const ke_led_w = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_white_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_white.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//////////////////绿色LED////////////////\r\nexport const ke_led_g = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_green_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_g.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n//////////////////蓝色LED////////////////\r\nexport const ke_led_b = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_blue_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_b.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const ke_jg = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_jg1)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_jg.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\nexport const ke_dual = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_dual_led)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_led_double.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT2\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const ke_qcd = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_QCD);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n//////////////////RGB1////////////////////\r\nexport const ke_rgb1_1 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_RGB_A)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rgb2.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(\"R:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"LOW\"], [Blockly.Msg.Kids_OFF, \"HIGH\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(\"G:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"LOW\"], [Blockly.Msg.Kids_OFF, \"HIGH\"]]), \"STAT2\");\r\n        this.appendValueInput(\"PIN3\", Number)\r\n            .appendField(\"B:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"LOW\"], [Blockly.Msg.Kids_OFF, \"HIGH\"]]), \"STAT3\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n////////////////////////rgb01///////////////////////////////////\r\nexport const ke_rgb1_2 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_RGB_A)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rgb2.png\"), 43, 32));\r\n        this.appendValueInput(\"R\", Number)\r\n            .appendField(\"R\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"r\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"R(0~255):\");\r\n        this.appendValueInput(\"G\", Number)\r\n            .appendField(\"G\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"g\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"G(0~255):\");\r\n        this.appendValueInput(\"B\", Number)\r\n            .appendField(\"B\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"b\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"B(0~255):\");\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n//////////////////RGB2///////////////////\r\nexport const ke_rgb2_1 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_RGB_B)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rgb2.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(\"R:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(\"G:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT2\");\r\n        this.appendValueInput(\"PIN3\", Number)\r\n            .appendField(\"B:\")\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT3\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n////////////////////////rgb01///////////////////////////////////\r\nexport const ke_rgb2_2 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_RGB_B)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rgb2.png\"), 43, 32));\r\n        this.appendValueInput(\"R\", Number)\r\n            .appendField(\"R\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"r\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"R(0~255):\");\r\n        this.appendValueInput(\"G\", Number)\r\n            .appendField(\"G\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"g\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"G(0~255):\");\r\n        this.appendValueInput(\"B\", Number)\r\n            .appendField(\"B\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"b\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"B(0~255):\");\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n\r\n/////////////////蜂鸣器//////////////////////\r\nexport const ke_w_buzzer1 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUZZER1)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_y.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\nexport const ke_w_buzzer2 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\nexport const ke_w_buzzer3 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.appendValueInput('DURATION')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DURATION);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\n\r\n//////////////////蜂鸣器//////////////////\r\nvar TONE_NOTES = [\r\n    [\"NOTE_C3\", \"131\"], [\"NOTE_D3\", \"147\"], [\"NOTE_E3\", \"165\"], [\"NOTE_F3\", \"175\"], [\"NOTE_G3\", \"196\"], [\"NOTE_A3\", \"220\"], [\"NOTE_B3\", \"247\"],\r\n    [\"NOTE_C4\", \"262\"], [\"NOTE_D4\", \"294\"], [\"NOTE_E4\", \"330\"], [\"NOTE_F4\", \"349\"], [\"NOTE_G4\", \"392\"], [\"NOTE_A4\", \"440\"], [\"NOTE_B4\", \"494\"],\r\n    [\"NOTE_C5\", \"532\"], [\"NOTE_D5\", \"587\"], [\"NOTE_E5\", \"659\"], [\"NOTE_F5\", \"698\"], [\"NOTE_G5\", \"784\"], [\"NOTE_A5\", \"880\"], [\"NOTE_B5\", \"988\"]\r\n];\r\n\r\n\r\nexport const ke_tone01 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown(TONE_NOTES), 'STAT');\r\n        this.setOutput(true, Number);\r\n    }\r\n};\r\n\r\nexport const ke_buzzer = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUZZER2)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.kids_tone);\r\n\r\n        //this.appendValueInput('DURATION')\r\n        //.setCheck(Number)\r\n        //.setAlign(Blockly.ALIGN_RIGHT)\r\n        //.appendField(Blockly.Msg.kids_beat);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_beat)\r\n            .appendField(new Blockly.FieldDropdown([[\"1/8\", \"125\"], [\"3/8\", \"375\"], [\"1/4\", \"250\"], [\"3/4\", \"750\"], [\"1/2\", \"500\"], [\"1\", \"1000\"]]), 'beat1');\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_TONE);\r\n    }\r\n};\r\n\r\n\r\n///////////music////////////////////\r\nexport const ke_music = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_play_tone)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            //.appendField(new Blockly.FieldDropdown([[\"Birthday\", \"Birthday\"],[\"City of Sky\", \"City of Sky\"],[\"Ode to Joy\", \"Ode to Joy\"]]), 'play');\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.kids_Ode_to_joy, \"Ode to Joy\"], [Blockly.Msg.kids_birthday, \"Birthday\"]]), 'play');\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE);\r\n    }\r\n};\r\n\r\n////////////////////关闭蜂鸣器////////////////////////\r\nexport const ke_notone = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_notone)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_buzzer_w.png\"), 39, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        //this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE);\r\n    }\r\n};\r\n\r\n\r\n///////////////////////继电器////////////////////////////\r\nexport const ke_relay = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_RELAY)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_relay.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////////震动马达////////////////////////////\r\nexport const ke_v_motor = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_v_motor)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_v_motor.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////////扬声器模块////////////////////////////\r\nexport const ke_speaker = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SPEAKER)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_speaker.png\"), 57, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY', Number)\r\n            .setCheck(Number)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\n// Speaker - 喇叭+持续时间\r\nexport const ke_speaker2 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SPEAKER)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_speaker.png\"), 57, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput('FREQUENCY')\r\n            .setCheck(Number)\r\n            .appendField(Blockly.Msg.MIXLY_FREQUENCY);\r\n        this.appendValueInput('DURATION')\r\n            .setCheck(Number)\r\n            .appendField(Blockly.Msg.MIXLY_DURATION);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_DELAY_MS);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n    }\r\n};\r\n// Notone - 结束声音\r\nexport const ke_speaker_notone = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_NOTONE_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_NOTONE);\r\n    }\r\n};\r\n\r\n////////////////////////电机///////////////////////////////////\r\nexport const ke_motor = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_MOTOR01);\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INA')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INB')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT2\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n////////////////////////电机001///////////////////////////////////\r\nexport const ke_motor001 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_MOTOR01);\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INA')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"pwmb\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"PWMB:\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n////////////////////////电机2///////////////////////////////////\r\nexport const ke_motor2 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_MOTOR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_fs.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INA')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INB')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT2\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n////////////////////////电机002///////////////////////////////////\r\nexport const ke_motor002 = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_MOTOR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_fs.png\"), 43, 60));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField('INA')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT1\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"pwmb\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"PWMB:\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n///////////////////////////舵机///////////////////////////////////\r\nexport const ke_servo = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SERVO)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_servo.png\"), 70, 32))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"angle\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DEGREE_0_180);\r\n        this.appendValueInput(\"time\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DELAY + '(' + Blockly.Msg.MIXLY_DELAY_MS + ')');\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_MOVE);\r\n    }\r\n};\r\n\r\nexport const ke_servo_r = {\r\n    init: function () {\r\n        this.setColour(CONTROL_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SERVO)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_READ_DEGREES)\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_SERVO_READ);\r\n    }\r\n};\r\n\r\n/////////////////////数字传感器///////////////////////////////\r\n\r\n///////////人体红外传感器////////////////////\r\nexport const ke_ir_g = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_IR_G)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rentihongwai.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////火焰传感器////////////////////\r\n\r\nexport const ke_flame = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_FLAME)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_fire.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////霍尔传感器////////////////////\r\nexport const ke_hall = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_HALL)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_hall.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////敲击传感器////////////////////\r\nexport const ke_crash = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_KNOCK)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_zhengdong.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////按键传感器////////////////////\r\nexport const ke_button = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BUTTON)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_button.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////自锁按键传感器////////////////////\r\nexport const ke_sl_button = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_sl_BUTTON)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_sl_button.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n///////////电容触摸传感器////////////////////\r\nexport const ke_tuoch = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_TUOCH)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_touch.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////碰撞传感器////////////////////\r\nexport const ke_knock = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_CRASH)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_pengzhuang.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////倾斜传感器////////////////////\r\nexport const ke_tilt = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_TILT)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_qingxie.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////振动传感器////////////////////\r\nexport const ke_shake = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SHAKE)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_qiaoji.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n\r\n///////////干簧管传感器////////////////////\r\nexport const ke_reed_s = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_REED_S)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_ghg.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////循迹传感器////////////////////\r\nexport const ke_track = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_TRACK)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_xunji.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////避障传感器////////////////////\r\nexport const ke_avoid = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_AVOID)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_hongwaibz.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////光折断传感器////////////////////\r\nexport const ke_light_b = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_LIGHT_B)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_photo.png\"), 43, 32));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////烟雾数字传感器////////////////////\r\nexport const ke_smoke_D = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SMOKE)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_gas.png\"), 60, 48));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////酒精数字传感器////////////////////\r\nexport const ke_alcohol_D = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_ALCOHOL)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_alcohol.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n///////////////////////////模拟传感器//////////////////////////\r\n///////////模拟温度传感器///////////////\r\nexport const ke_analog_t = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_ANALOG_T)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_mnwd.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////声音传感器///////////////\r\nexport const ke_sound = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SOUND)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_sound.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////光线传感器///////////////\r\nexport const ke_light = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_LIGHT)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_guangmin.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////紫外线传感器///////////////\r\nexport const ke_UV = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_UV)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_UV.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////压电传感器///////////////\r\nexport const ke_Piezo = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_Piezo)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_Piezo.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////电位器///////////////\r\nexport const ke_potentiometer = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_POTENTIOMETER)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_dianweiqi.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////LM35///////////////\r\nexport const ke_lm35 = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_LM35)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_lm35.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////滑动电位器///////////////\r\nexport const ke_slide_potentiometer = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SLIDE_POTENTIOMETER)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_hddwq.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////TEMT6000环境光///////////////\r\nexport const ke_temt6000 = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_TEMT6000)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_temt6000.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////水蒸气传感器///////////////\r\nexport const ke_steam = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_STEAM)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_steam.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////薄膜压力传感器///////////////\r\nexport const ke_film_p = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_FILM_P)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_tptouch.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////摇杆传感器///////////////\r\nvar joystick = [\r\n    [\"x\", \"Lx\"],\r\n    [\"y\", \"Ly\"],\r\n    // [\"z\", \"Lz\"],\r\n];\r\n\r\nexport const ke_joystick = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        //this.appendDummyInput(\"\")\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown(joystick), \"joy\");\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_JOYSTICK)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_joys.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////遥感按钮////////////////////\r\nexport const ke_joystick_btn = {\r\n    init: function () {\r\n        this.setColour(DIGITAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_JOYSTICK_btn)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_joys.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n///////////烟雾传感器///////////////\r\nexport const ke_smoke = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SMOKE)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_gas.png\"), 60, 48));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////酒精传感器///////////////\r\nexport const ke_alcohol = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_ALCOHOL)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_alcohol.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n\r\n///////////火焰模拟传感器///////////////\r\nexport const ke_fire2 = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_FLAME)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_fire.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n///////////电压传感器///////////////\r\nexport const ke_Voltage = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_Voltage)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_Voltage.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n///////////电流传感器///////////////\r\nexport const ke_Current = {\r\n    init: function () {\r\n        this.setColour(ANALOG_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_Current)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_Current.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n///////////18B20温度模块///////////////\r\nexport const ke_18b20 = {\r\n    init: function () {\r\n        var UNIT = [[Blockly.Msg.MIXLY_DS18B20_C, '0'], [Blockly.Msg.MIXLY_DS18B20_F, '1']];\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_ke_18B20)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_18B20.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.Kids_pin)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_18B20_R)\r\n            .appendField(new Blockly.FieldDropdown(UNIT), \"UNIT\");\r\n        this.setOutput(true, Number);\r\n    }\r\n};\r\n\r\n///////////////////////////////DHT11//////////////////////////////////\r\nexport const ke_dht11 = {\r\n    init: function () {\r\n        var WHAT = [[Blockly.Msg.MIXLY_DHT11_T, 'temperature'], [Blockly.Msg.MIXLY_DHT11_H, 'humidity']];\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(new Blockly.FieldDropdown([['DHT11', '11'], ['DHT21', '21'], ['DHT22', '22'], ['DHT33', '33'], ['DHT44', '44']]), 'TYPE')\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_dht11.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown(WHAT), \"WHAT\");\r\n        this.setOutput(true, Number);\r\n        var thisBlock = this;\r\n        this.setTooltip(function () {\r\n            var op = thisBlock.getFieldValue('WHAT');\r\n            var TOOLTIPS = {\r\n                'temperature': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM,\r\n                'humidity': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_HUM\r\n            };\r\n            return TOOLTIPS[op];\r\n        });\r\n    }\r\n};\r\n\r\n//DHT11温湿度传感器\r\nexport const ke_DHT = {\r\n    init: function () {\r\n        var WHAT = [[Blockly.Msg.MIXLY_GETTEMPERATUE, 'temperature'], [Blockly.Msg.MIXLY_GETHUMIDITY, 'humidity']];\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldDropdown([['DHT11', '11'], ['DHT21', '21'], ['DHT22', '22']]), 'TYPE')\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_dht11.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .appendField(new Blockly.FieldDropdown(profile.default.digital), \"PIN\")\r\n            .appendField(new Blockly.FieldDropdown(WHAT), \"WHAT\");\r\n        this.setOutput(true, Number);\r\n        var thisBlock = this;\r\n        this.setTooltip(function () {\r\n            var op = thisBlock.getFieldValue('WHAT');\r\n            var TOOLTIPS = {\r\n                'temperature': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_TEM,\r\n                'humidity': Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_GET_HUM\r\n            };\r\n            return TOOLTIPS[op];\r\n        });\r\n    }\r\n};\r\n\r\n//////////BMP180高度计模块///////////////\r\n// export const ke_bmp180 = {\r\n//     init: function () {\r\n//         this.setColour(SPECIAL_HUE);\r\n//         this.appendDummyInput(\"\")\r\n//             .appendField(Blockly.Msg.MIXLY_ke_BMP180)\r\n//             .appendField(new Blockly.FieldImage(require(\"../media/ke_bmp180.png\"), 50, 40));\r\n//         this.appendValueInput(\"PIN\", Number)\r\n//             .appendField(Blockly.Msg.MIXLY_PIN)\r\n//             .setCheck(Number);\r\n//         this.setInputsInline(true);\r\n//         this.setOutput(true, Number);\r\n//         this.setTooltip('');\r\n//     }\r\n// };\r\n\r\n/////////////////////////////////////////////\r\n////////////////传感器////////////////////////\r\n/////////////////////////////////////////////\r\n\r\n\r\n///////////ADKey///////////////\r\nexport const ke_ADKey = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.kids_ADkey)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_ADKey.png\"), 60, 48));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n///////////////超声波/////////////////////////\r\nexport const ke_sr04 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_SR04)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_sr04.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField('Trig#')\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField('Echo#')\r\n            .setCheck(Number);\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, Number);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_BLOCKGROUP_CHAOSHENGBO);\r\n    }\r\n};\r\n\r\n\r\n\r\n/////////////////////////////BMP280////////////////////////\r\n// var BMP280_TP = [\r\n//     [Blockly.Msg.MIXLY_ke_BMP280_T, \"T\"],\r\n//     [Blockly.Msg.MIXLY_ke_BMP280_A, \"P\"],\r\n//     [Blockly.Msg.MIXLY_ke_BMP180_H, \"A\"],\r\n// ];\r\n/////////////////////////////BMP280////////////////////////\r\n// export const ke_bmp280 = {\r\n//     init: function () {\r\n//         this.setColour(SPECIAL_HUE);\r\n//         this.appendDummyInput(\"\")\r\n//             .appendField(Blockly.Msg.MIXLY_ke_BMP280)\r\n//             .appendField(new Blockly.FieldImage(require(\"../media/ke_bmp180.png\"), 50, 40))\r\n//             .appendField(Blockly.Msg.Kids_iic);\r\n//         this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown(BMP280_TP), \"BMP280_PIN\");\r\n//         this.setInputsInline(true);\r\n//         this.setOutput(true);\r\n//     }\r\n// };\r\n\r\n//BME280读取\r\nexport const ke_BMP280_READ = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_SERIAL_READ)\r\n            .appendField(new Blockly.FieldDropdown([[\"BMP280\", \"bmp\"], [\"BME280\", \"bme\"]]), \"TYPE\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_bmp280.png\"), 50, 40));\r\n        this.appendValueInput(\"address\")\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ADDRESS);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_GET)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.blynk_IOT_IR_TEMP, \"readTemperature()\"], [Blockly.Msg.MIXLY_Humidity, \"readHumidity()\"], [Blockly.Msg.MIXLY_Altitude, \"readPressure()\"], [Blockly.Msg.MIXLY_HEIGHT, \"readAltitude(SEALEVELPRESSURE_HPA)\"]]), \"BME_TYPE\")\r\n        this.setOutput(true, null);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n\r\n//ADXL345传感器-重力感应块-获取数据\r\nvar ADXL345_ZHOU = [\r\n    [Blockly.Msg.MIXLY_ADXL345_X, \"x\"],\r\n    [Blockly.Msg.MIXLY_ADXL345_Y, \"y\"],\r\n    [Blockly.Msg.MIXLY_ADXL345_Z, \"z\"],\r\n    [Blockly.Msg.MIXLY_ADXL345_XA, \"xa\"],\r\n    [Blockly.Msg.MIXLY_ADXL345_YA, \"ya\"]\r\n    //, [Blockly.Msg.MIXLY_ADXL345_ZA, \"za\"]\r\n];\r\n//传感器-重力感应块-获取数据\r\nexport const ke_adxl345 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_Ke_ADXL345)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_345.png\"), 50, 40));\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown(ADXL345_ZHOU), \"ADXL345_PIN\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n    }\r\n};\r\n\r\n\r\n//传感器-MPU6050-获取数据\r\nexport const ke_MPU6050 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_MPU6050)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_mpu6050.png\"), 50, 40));\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_Accel_X, \"normAccel.XAxis\"],\r\n                [Blockly.Msg.MIXLY_Accel_Y, \"normAccel.YAxis\"],\r\n                [Blockly.Msg.MIXLY_Accel_Z, \"normAccel.ZAxis\"],\r\n                [Blockly.Msg.MIXLY_Gyro_X, \"normGyro.XAxis\"],\r\n                [Blockly.Msg.MIXLY_Gyro_Y, \"normGyro.YAxis\"],\r\n                [Blockly.Msg.MIXLY_Gyro_Z, \"normGyro.ZAxis\"],\r\n                [Blockly.Msg.MIXLY_readTempC, \"mpu.readTemperature()\"]\r\n            ]), \"MPU6050_TYPE\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n    }\r\n};\r\n\r\n//传感器-MPU6050-更新数据\r\nexport const ke_MPU6050_update = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_mpu6050.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_MPU6050 + Blockly.Msg.MIXLY_update_data);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n\r\n/////////////////////////////BMP180////////////////////////\r\nvar BMP180_TP = [\r\n    [Blockly.Msg.MIXLY_ke_BMP180_T, \"T\"],\r\n    [Blockly.Msg.MIXLY_ke_BMP180_A, \"P\"],\r\n    [Blockly.Msg.MIXLY_ke_BMP180_H, \"A\"],\r\n];\r\n/////////////////////////////BMP180////////////////////////\r\nexport const ke_bmp180 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_BMP180)\r\n            .appendField(Blockly.Msg.Kids_iic);\r\n        //.appendField(new Blockly.FieldImage(require(\"../media/ke_bmp180.png\"), 50, 40));\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown(BMP180_TP), \"BMP180_PIN\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n    }\r\n};\r\n\r\n/********************************************\r\nTIME - 时钟模块\r\n  - DS3231\r\n  - DS1307\r\n*********************************************/\r\n// DS3231 real time clock  -- 设置时间\r\nexport const ke_ds3231_SetTime = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_ds3231.png\"), 44, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME);\r\n        this.appendValueInput(\"year\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_YEAR);\r\n        this.appendValueInput(\"month\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_MONTH);\r\n        this.appendValueInput(\"day\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_DAY);\r\n        this.appendValueInput(\"hour\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_HOUR);\r\n        this.appendValueInput(\"minute\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_MINUTE);\r\n        this.appendValueInput(\"second\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SECOND);\r\n        this.setOutput(false, Number);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n// DS3231 real time clock  -- 设置当前时间\r\nexport const ke_ds3231_SetTime2 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_ds3231.png\"), 44, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME)\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME2);\r\n        this.setOutput(false, Number);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n// DS3231 real time clock  -- 获取时间\r\nexport const ke_ds3231_GetTime = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_ds3231.png\"), 44, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_GET_TIME)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_ke_YEAR, \"Year\"],\r\n                [Blockly.Msg.MIXLY_ke_MONTH, \"Month\"], [Blockly.Msg.MIXLY_ke_DAY, \"Day\"],\r\n                [Blockly.Msg.MIXLY_ke_HOUR, \"Hour\"], [Blockly.Msg.MIXLY_ke_MINUTE, \"Minute\"],\r\n                [Blockly.Msg.MIXLY_ke_SECOND, \"Second\"], [Blockly.Msg.MIXLY_ke_DAYOFWEEK, \"DayOfWeek\"]\r\n            ]), \"TIME_TYPE\");\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n\r\n// DS1307 real time clock  -- 设置时间\r\nexport const ke_ds1307_SetTime = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS1307)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_1307.png\"), 32, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME);\r\n        this.appendValueInput(\"year\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_YEAR);\r\n        this.appendValueInput(\"month\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_MONTH);\r\n        this.appendValueInput(\"day\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_DAY);\r\n        this.appendValueInput(\"hour\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_HOUR);\r\n        this.appendValueInput(\"minute\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_MINUTE);\r\n        this.appendValueInput(\"second\")\r\n            .setCheck(Number).setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_SECOND);\r\n        this.setOutput(false, Number);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n// DS1307 real time clock  -- 设置当前时间\r\nexport const ke_ds1307_SetTime2 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS1307)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_1307.png\"), 32, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME)\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_SET_TIME2);\r\n        this.setOutput(false, Number);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n//DS1307 real time clock  -- 获取时间\r\nexport const ke_ds1307_GetTime = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS1307)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_1307.png\"), 32, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_DS3231_GET_TIME)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_ke_YEAR, \"Year\"],\r\n                [Blockly.Msg.MIXLY_ke_MONTH, \"Month\"], [Blockly.Msg.MIXLY_ke_DAY, \"Day\"],\r\n                [Blockly.Msg.MIXLY_ke_HOUR, \"Hour\"], [Blockly.Msg.MIXLY_ke_MINUTE, \"Minute\"],\r\n                [Blockly.Msg.MIXLY_ke_SECOND, \"Second\"], [Blockly.Msg.MIXLY_ke_DAYOFWEEK, \"DayOfWeek\"]\r\n            ]), \"TIME_TYPE\");\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\nvar Encoder_NO = [\r\n    [Blockly.Msg.MIXLY_ENCODER + 1, \"1\"],\r\n    [Blockly.Msg.MIXLY_ENCODER + 2, \"2\"],\r\n    [Blockly.Msg.MIXLY_ENCODER + 3, \"3\"],\r\n    [Blockly.Msg.MIXLY_ENCODER + 4, \"4\"]\r\n];\r\n//旋转编码器定义\r\nexport const sensor_encoder_init = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_SETUP)\r\n            .appendField(new Blockly.FieldDropdown(Encoder_NO), \"TYPE\")\r\n            .appendField(Blockly.Msg.MIXLY_MICROBIT_PY_STORAGE_MODE)\r\n            .appendField(new Blockly.FieldDropdown([[\"1\", \"2\"], [\"2\", \"4\"]]), \"mode\");\r\n        this.appendValueInput(\"CLK\")\r\n            .setCheck(null)\r\n            .appendField(\"CLK#\");\r\n        this.appendValueInput(\"DT\")\r\n            .setCheck(null)\r\n            .appendField(\"DT#\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n\r\n// 旋转编码器读取\r\nexport const sensor_encoder_get = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldDropdown(Encoder_NO), \"TYPE\")\r\n            .appendField(Blockly.Msg.MIXLY_MICROBIT_PY_STORAGE_GET)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_GPS_LOCATION, \"getPosition\"],\r\n                [Blockly.Msg.MIXLY_MICROBIT_Direction, \"getDirection\"],\r\n                [Blockly.Msg.MIXLY_INCREMENT, \"getIncrement\"],\r\n                [Blockly.Msg.MIXLY_UPPERBOUND, \"getUpperBound\"],\r\n                [Blockly.Msg.MIXLY_LOWERBOUND, \"getLowerBound\"]\r\n            ]), \"OPERATE_TYPE\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, null);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n\r\n// 旋转编码器设置\r\nexport const sensor_encoder_set = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.setColour(SPECIAL_HUE);this.appendDummyInput()\r\n            .appendField(new Blockly.FieldDropdown(Encoder_NO), \"TYPE\");\r\n        this.appendValueInput(\"DATA\")\r\n            .setCheck(null)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_GPS_LOCATION, \"resetPosition\"],\r\n                [Blockly.Msg.MIXLY_INCREMENT, \"setIncrement\"],\r\n                [Blockly.Msg.MIXLY_UPPERBOUND, \"setUpperBound\"],\r\n                [Blockly.Msg.MIXLY_LOWERBOUND, \"setLowerBound\"]\r\n            ]), \"OPERATE_TYPE\")\r\n            .appendField(Blockly.Msg.MIXLY_STAT);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n// 旋转编码器事件\r\nexport const sensor_encoder_handle = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldDropdown(Encoder_NO), \"TYPE\")\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_ENCODER_CHANGED, \"setChangedHandler\"],\r\n                [Blockly.Msg.MIXLY_ENCODER_LEFT_ROTATION, \"setLeftRotationHandler\"],\r\n                [Blockly.Msg.MIXLY_ENCODER_RIGHT_ROTATION, \"setRightRotationHandler\"],\r\n                [Blockly.Msg.MIXLY_ENCODER_UPPER_OVERFLOW, \"setUpperOverflowHandler\"],\r\n                [Blockly.Msg.MIXLY_ENCODER_LOWER_OVERFLOW, \"setLowerOverflowHandler\"]\r\n            ]), \"OPERATE_TYPE\");\r\n        this.appendStatementInput(\"DO\")\r\n            .setCheck(null)\r\n            .appendField(Blockly.Msg.MIXLY_MSTIMER2_DO);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\nexport const encoder_button = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(\"读取旋转编码器按键值\");\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n/////////////////pca9685////////////////////////////\r\nexport const ke_pca9685 = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(\"pca9685\");\r\n        this.appendValueInput(\"pin\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"pin0~15\");\r\n        this.appendValueInput(\"pwm\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_angle);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n///////////////////////////红外测温传感器/////////////////\r\n//初始化MLX90614红外测温传感器\r\nexport const mlx90614_init = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendValueInput(\"mlx90614_address\")\r\n            .setCheck(null)\r\n            .appendField(Blockly.Msg.MIXLY_SETUP + \" MLX90614\" + Blockly.Msg.MLX90614_TYPE)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_90614.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ADDRESS);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"\");\r\n    }\r\n};\r\n//MLX90614获取数据\r\nexport const mlx90614_get_data = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        var type = [\r\n            [Blockly.Msg.MLX90614_TARGET_OBJECT_TEMP + \"(℃)\", \"readObjectTempC\"],\r\n            [Blockly.Msg.MLX90614_TARGET_OBJECT_TEMP + \"(℉)\", \"readObjectTempF\"],\r\n            [Blockly.Msg.MLX90614_AMBIENT_TEMP + \"(℃)\", \"readAmbientTempC\"],\r\n            [Blockly.Msg.MLX90614_AMBIENT_TEMP + \"(℉)\", \"readAmbientTempF\"]];\r\n        this.appendDummyInput()\r\n            .appendField(\"MLX90614\" + Blockly.Msg.MLX90614_TYPE)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_90614.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.MIXLY_GET)\r\n            .appendField(new Blockly.FieldDropdown(type), \"mlx90614_data\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, null);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TOOLTIP_MLX90614_GET_DATA);\r\n    }\r\n};\r\n///////////////////////////颜色传感器/////////////////\r\n//传感器-颜色识别-获取数据\r\nvar DF_TCS34725_COLOR = [\r\n    [Blockly.Msg.COLOUR_RGB_RED, \"tcs34725.getRedToGamma()\"],\r\n    [Blockly.Msg.COLOUR_RGB_GREEN, \"tcs34725.getGreenToGamma()\"],\r\n    [Blockly.Msg.COLOUR_RGB_BLUE, \"tcs34725.getBlueToGamma()\"],\r\n];\r\n\r\n// export const TCS34725_Get_RGB = {\r\n//     init: function () {\r\n//         this.setColour(SPECIAL_HUE);\r\n//         this.appendDummyInput(\"\")\r\n//             .appendField(new Blockly.FieldImage(require(\"../media/ke_34725.png\"), 50, 40))\r\n//             .appendField(Blockly.Msg.TCS34725_Get_RGB)\r\n//             .appendField(new Blockly.FieldDropdown(DF_TCS34725_COLOR), \"DF_TCS34725_COLOR\");\r\n//         this.setInputsInline(true);\r\n//         this.setOutput(true);\r\n//     }\r\n// };\r\nexport const TCS34725_Get_RGB = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_34725.png\"), 50, 40))\r\n            .appendField(Blockly.Msg.TCS34725_Get_RGB)\r\n            .appendField(new Blockly.FieldDropdown(DF_TCS34725_COLOR), \"DF_TCS34725_COLOR\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n    }\r\n};\r\n///////////////////////////MAX3010X心率传感器/////////////////\r\nvar ke_MAX30102_TYPE = [\r\n    [\"温度(℃)\", \"particleSensor.readTemperature()\"],\r\n    [\"温度(℉))\", \"particleSensor.readTemperatureF()\"],\r\n    [\"红光\", \"particleSensor.getRed()\"],\r\n    [\"红外光\", \"particleSensor.getIR()\"],\r\n    [\"绿光\", \"particleSensor.getGreen()\"],\r\n];\r\n\r\nexport const ke_MAX3010X_Value = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_34725.png\"), 50, 40))\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(new Blockly.FieldDropdown(ke_MAX30102_TYPE), \"MAX3010X_TYPE\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n        this.setTooltip();\r\n    }\r\n};\r\n\r\nexport const ke_MAX3010X_HR = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_34725.png\"), 50, 40))\r\n            .appendField(new Blockly.FieldTextInput('Bmp_value'), 'VAR')\r\n        this.appendStatementInput('DO');\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n        // this.setTooltip(Blockly.Msg.MIXLY_IR_RECIEVE_TOOLTIP);\r\n    },\r\n    getVars: function () {\r\n        return [this.getFieldValue('VAR')];\r\n    },\r\n    renameVar: function (oldName, newName) {\r\n        if (Blockly.Names.equals(oldName, this.getFieldValue('VAR'))) {\r\n            this.setTitleValue(newName, 'VAR');\r\n        }\r\n    }\r\n};\r\n///////////////////////////手势识别传感器/////////////////\r\n//传感器-手势识别-获取数据\r\nexport const ke_Gesture_APDS = {\r\n    init: function () {\r\n        var ke_APDS_PIN1 = [\r\n            [\"A4\", \"A4\"]\r\n        ];\r\n\r\n        var ke_APDS_PIN2 = [\r\n            [\"A5\", \"A5\"]\r\n        ];\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_Gesture_APDS)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_Gesture_APDS.png\"), 32, 32)); //图片\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"SDA#\")\r\n            .appendField(new Blockly.FieldDropdown(ke_APDS_PIN1), \"APDS_PIN1\");\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"SCL#\")\r\n            .appendField(new Blockly.FieldDropdown(ke_APDS_PIN2), \"APDS_PIN2\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true);\r\n    }\r\n};\r\n//初始化PAJ7620手势传感器\r\nexport const make_arduino_paj7620_begin = {\r\n    init: function () {\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldImage(require(\"../media/PAJ7620.png\"), 32, 32)) \r\n            .appendField(\"初始化PAJ7620(I2C)\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setColour(SPECIAL_HUE);\r\n        this.setTooltip(\r\n            \"初始化PAJ7620手势传感器(I2C)\\n\"\r\n            + \"I2C接线:\\n\"\r\n            + \"①Arduino Uno/Ethernet:SDA - A4，SCL - A5\\n\"\r\n            + \"②Arduino Mega2560/Due:SDA - 20，SCL - 21\\n\"\r\n            + \"③Arduino Leonardo:SDA - 2，SCL - 3\"\r\n        );\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};   \r\n//PAJ7620手势传感器 获取数据-返回请求结果\r\nexport const make_arduino_paj7620_ReadReg = {\r\n    init: function () {\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldImage(require(\"../media/PAJ7620.png\"), 32, 32)) \r\n            .appendField(\"PAJ7620 读取手势\");\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldDropdown([[\"向上\", \"GES_UP_FLAG\"], [\"向下\", \"GES_DOWN_FLAG\"], [\"向左\", \"GES_LEFT_FLAG\"], [\"向右\", \"GES_RIGHT_FLAG\"], [\"向前\", \"GES_FORWARD_FLAG\"], [\"向后\", \"GES_BACKWARD_FLAG\"], [\"顺时针\", \"GES_CLOCKWISE_FLAG\"], [\"逆时针\", \"GES_COUNT_CLOCKWISE_FLAG\"], [\"挥手\", \"GES_WAVE_FLAG\"]]), \"data\");\r\n        this.setInputsInline(true);\r\n        this.setOutput(true, null);\r\n        this.setColour(SPECIAL_HUE);\r\n        this.setTooltip(\"PAJ7620手势传感器 获取数据，返回请求结果，返回数据的类型为uint8_t\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n//BMP388初始化  \r\nexport const BMP388_INIT = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_BMP388_init)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_bmp280.png\"), 50, 40));\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n//BMP388读取\r\nexport const BMP388_READ = {\r\n    init: function () {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_BMP388_read)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_bmp280.png\"), 50, 40));\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_GET)\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_TEMP, \"(float)s32TemperatureVal / 100\"],[Blockly.Msg.MIXLY_Altitude, \"(float)s32PressureVal / 100\"], [Blockly.Msg.MIXLY_HEIGHT, \"(float)s32AltitudeVal / 100\"]]), \"unit\")\r\n        this.setOutput(true, null);\r\n        this.setTooltip(\"\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\nexport const TFT_SD_init= {\r\n    init: function() {\r\n        this.setColour(SPECIAL_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_TFT_SD_INIT);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"TFT接线RST -1 CS 8 DC 10 MOSI 11 SCLK 13 SD卡接线 MISO 12 MOSI 11 CLK 13 CS 9\");\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\nexport const TFT_SD_display= {\r\n    init: function() {\r\n        this.appendValueInput(\"SD_TUPIAN\")\r\n            .setCheck(null)\r\n            .appendField(Blockly.Msg.MIXLY_TFT_SD_display_1);\r\n        this.appendValueInput(\"SD_X\")\r\n            .setCheck(null)\r\n            .appendField(Blockly.Msg.MIXLY_TFT_SD_display_2);\r\n        this.appendValueInput(\"SD_Y\")\r\n            .setCheck(null)\r\n            .appendField(Blockly.Msg.MIXLY_TFT_SD_display_3);\r\n        this.appendDummyInput();\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setColour(SPECIAL_HUE);\r\n        this.setTooltip(Blockly.Msg.MIXLY_TFT_SD_display_4);\r\n        this.setHelpUrl(\"\");\r\n    }\r\n};\r\n////////////////////////显示屏///////////////////////\r\n//////////////////RGB灯////////////////////////////\r\nexport const ke_rgb2812 = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_2812RGB)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_rgb2812.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_PIN);\r\n        this.appendValueInput(\"num01\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_Count);\r\n        this.appendValueInput(\"red\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"R：\");\r\n        this.appendValueInput(\"green\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"G：\");\r\n        this.appendValueInput(\"blue\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"B：\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n\r\n//TM1650 4 digital display  -- 初始化\r\nexport const ke_4digitdisplay_init = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32))\r\n            .appendField(Blockly.Msg.MIXLY_SETUP)\r\n        this.appendValueInput(\"PIN1\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            // .appendField(Blockly.YF_TM1637_INIT)\r\n            .appendField(\"CLK\")\r\n            .appendField(Blockly.Msg.MIXLY_PIN);\r\n        this.appendValueInput(\"PIN2\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"DIO\")\r\n            .appendField(Blockly.Msg.MIXLY_PIN);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n// TM1650 4 digital display  -- 开关 清屏\r\nexport const ke_4digitdisplay_power = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32))\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_LCD_STAT_ON, \"displayOn\"],\r\n                [Blockly.Msg.MIXLY_LCD_STAT_OFF, \"displayOff\"],\r\n                [Blockly.Msg.MIXLY_LCD_STAT_CLEAR, \"clear\"]\r\n            ]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n// TM1650 4 digital display  -- 显示字符串\r\nexport const ke_4digitdisplay_displayString = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32))\r\n        this.appendValueInput(\"VALUE\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_YF_4DIGITDISPLAY_DISPLAYSTRING);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n// TM1650 4 digital display  -- 显示数字\r\nexport const ke_4digitdisplay_displayNumber = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32));\r\n        this.appendValueInput(\"VALUE\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_YF_4DIGITDISPLAY_DISPLAYNUMBER);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"支持类型：int、float、double\");\r\n    }\r\n};\r\n// TM1650 4 digital display  -- 小数点显示\r\nexport const ke_4digitdisplay_showDot = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32));\r\n        this.appendValueInput('DOTNUM')\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_NOMBER1);\r\n        //.appendField(new Blockly.FieldDropdown([[\"1\", \"0\"], [\"2\", \"1\"], [\"3\", \"2\"], [\"4\", \"3\"]]), \"NO\")\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_NOMBER2)\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_DOT)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_4DIGITDISPLAY_ON, \"true\"],\r\n                [Blockly.Msg.MIXLY_4DIGITDISPLAY_OFF, \"false\"]\r\n            ]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip(\"数字模式小数点：1~4\");\r\n    }\r\n};\r\n\r\n// TM1650 4 digital display  -- 设置亮度\r\nexport const ke_4digitdisplay_Brightness = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 84, 32));\r\n        this.appendValueInput('brightness')\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(\"亮度等级范围：1~8\");\r\n    }\r\n};\r\n\r\n// TM1650 4 digital display  -- 时钟模式\r\nexport const ke_4digitdisplay_Time = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY + \"\");\r\n        this.appendValueInput('time_hour')\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR);\r\n        this.appendValueInput('time_minute')\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND)\r\n            .appendField(new Blockly.FieldDropdown([\r\n                [Blockly.Msg.MIXLY_ke_TIME_SEC_ON, \"displaySEC_ON\"],\r\n                [Blockly.Msg.MIXLY_ke_TIME_SEC_BLINK, \"displaySEC_BLINK\"],\r\n                [Blockly.Msg.MIXLY_ke_TIME_SEC_OFF, \"displaySEC_OFF\"]\r\n            ]), \"STAT\");\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n/*\r\nexport const ke_display_TM1637_init = {\r\n    init: function () {\r\n      this.setColour(DISPLAY_HUE);\r\n      this.appendDummyInput(\"\")\r\n      .appendField(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_INIT)\r\n      .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40))\r\n      .appendField('CLK')\r\n      .appendField(Blockly.Msg.MIXLY_PIN)\r\n      .appendField(new Blockly.FieldDropdown(profile.default.digital), \"CLK\")\r\n      .appendField('DIO')\r\n      .appendField(Blockly.Msg.MIXLY_PIN)\r\n      .appendField(new Blockly.FieldDropdown(profile.default.digital), \"DIO\");\r\n      this.setPreviousStatement(true, null);\r\n      this.setNextStatement(true, null);\r\n      this.setInputsInline(true);\r\n      this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_TIP);\r\n      this.setHelpUrl('');\r\n//    this.setFieldValue(\"2\", \"CLK\");\r\n //   this.setFieldValue(\"4\", \"DIO\");\r\n}\r\n};\r\n\r\nexport const ke_display_TM1637_displyPrint = {\r\n  init: function () {\r\n    this.setColour(DISPLAY_HUE);\r\n    this.appendValueInput(\"VALUE\")\r\n    .setAlign(Blockly.ALIGN_RIGHT)\r\n    .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40))\r\n    .appendField(Blockly.Msg.MIXLY_4DIGITDISPLAY + \" TM1637\"+Blockly.Msg.OLEDDISPLAY);\r\n    this.setInputsInline(true);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP);\r\n  }\r\n};\r\nvar display_Time_Point = [\r\n[Blockly.Msg.MIXLY_4DIGITDISPLAY_ON, \"true\"],\r\n[Blockly.Msg.MIXLY_4DIGITDISPLAY_OFF, \"false\"]\r\n];\r\n\r\nexport const ke_display_TM1637_displayTime = {\r\n  init: function () {\r\n    this.setColour(DISPLAY_HUE);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40))\r\n    .appendField(Blockly.Msg.MIXLY_4DIGITDISPLAY + \" TM1637\"+Blockly.Msg.MIXLY_SHOW_FACE_TIME);\r\n    this.appendValueInput(\"hour\")\r\n    .setCheck(Number)\r\n    .setAlign(Blockly.ALIGN_RIGHT);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(Blockly.Msg.MIXLY_HOUR);\r\n    this.appendValueInput(\"minute\")\r\n    .setCheck(Number)\r\n    .setAlign(Blockly.ALIGN_RIGHT);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(Blockly.Msg.MIXLY_MINUTE);\r\n     //  .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"displayOn\"], [Blockly.Msg.MIXLY_OFF, \"displayOff\"], [Blockly.Msg.MIXLY_LCD_STAT_CLEAR, \"clear\"]]), \"STAT\");\r\n    this.appendDummyInput(\"\").appendField(Blockly.Msg.MIXLY_DISPLAY_TM1637_Time_Point).appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_ON, \"true\"], [Blockly.Msg.MIXLY_OFF, \"false\"]]), \"STAT\");\r\n\r\n\r\n    this.setInputsInline(true);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_DISPLAYTIME_TOOLTIP);\r\n  }\r\n};\r\n\r\nexport const ke_display_TM1637_Brightness = {\r\n  init: function () {\r\n    this.setColour(DISPLAY_HUE);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40))\r\n    .appendField(Blockly.Msg.MIXLY_4DIGITDISPLAY + \" TM1637\"+Blockly.Msg.MIXLY_MICROBIT_JS_MONITOR_SET_BRIGHTNESS);\r\n\r\n    this.appendValueInput(\"Brightness\")\r\n    .setCheck(Number)\r\n    .setAlign(Blockly.ALIGN_RIGHT);\r\n    this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_4DIGITDISPLAY_BRIGHTNESS_TOOLTIP);\r\n    this.setPreviousStatement(true);\r\n    this.setNextStatement(true);\r\n    this.setInputsInline(true);\r\n    this.setTooltip(Blockly.Msg.MIXLY_TOOPTIP_4DIGITDISPLAY_TM1637_BRIGHTNESS);\r\n  }\r\n};\r\n\r\nexport const ke_display_TM1637_clearDisplay = {\r\n  init: function () {\r\n    this.setColour(DISPLAY_HUE);\r\n     this.appendDummyInput()\r\n     .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40))\r\n    .appendField(Blockly.Msg.MIXLY_4DIGITDISPLAY + \" TM1637\")\r\n\r\n    .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_LCD_STAT_CLEAR, \"clear\"],[Blockly.Msg.MIXLY_LCD_STAT_BLINK, \"blink\"],[Blockly.Msg.MIXLY_ON, \"on\"], [Blockly.Msg.MIXLY_OFF, \"off\"], ]), \"STAT\");\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_CLEARDISPLAY);\r\n  }\r\n};\r\n\r\n/////////////////////TM1637数码管初始化//放弃//////////////////////////////////\r\nexport const ke_tm1637_init = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"#CLK:\");\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"#DIO:\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n        //this.setTooltip(Blockly.Msg.MIXLY_4DIGITDISPLAY_TM1637_TIP);\r\n        //this.setHelpUrl('');\r\n    }\r\n};\r\n\r\n//////////////////TM1637数码自定义显示////////////////////////////\r\nexport const ke_tm1637_dy = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n\r\n        this.appendValueInput(\"num\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_value);\r\n\r\n        this.appendValueInput(\"weishu\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_ws);\r\n        this.appendValueInput(\"wei\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_begin);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////TM1637数码自定义显示是否填充////////////////////////////\r\nexport const ke_tm1637_tc = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n\r\n        this.appendValueInput(\"num\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_value);\r\n\r\n        this.appendValueInput('0and1')\r\n            .setCheck([Number,Boolean])\r\n            .appendField(Blockly.Msg.ke_fill0);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////TM1637数码管亮度////////////////////////////\r\nexport const ke_tm1637_ld = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n\r\n        this.appendValueInput(\"num\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_light);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////TM1637数码管是否隐藏////////////////////////////\r\nexport const ke_tm1637_yc = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n\r\n        this.appendValueInput('BOOL')\r\n            .setCheck([Number,Boolean])\r\n            .appendField(Blockly.Msg.ke_XY);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////TM1637数码管是否显示冒号////////////////////////////\r\nexport const ke_tm1637_mh = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_TM1637)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_shumaguan.png\"), 50, 40));\r\n        this.appendValueInput(\"num1\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_L);\r\n        this.appendValueInput('BOOL')\r\n            .setCheck([Number,Boolean])\r\n            .appendField(Blockly.Msg.ke_MH);\r\n        this.appendValueInput(\"num2\")\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_R);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n*/\r\n/////////////////////8*8点阵/////////////////////\r\n\r\nexport const ke_matrix_init = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_INIT).appendField(new Blockly.FieldImage(require(\"../media/ke_matrix.png\"), 70, 32));\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName');\r\n        this.appendValueInput(\"address\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"address:\");\r\n        this.appendValueInput(\"PIN1\").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(\"SDA#\");\r\n        this.appendValueInput(\"PIN2\").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(\"SCL#\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        //   this.setTooltip(\"display_点阵屏初始化\");\r\n    }\r\n};\r\n\r\n\r\n//执行器_点阵屏显示_画点变量\r\nvar ke_DrawPixel_NUM = [\r\n    [Blockly.Msg.MIXLY_4DIGITDISPLAY_ON, \"1\"],\r\n    [Blockly.Msg.MIXLY_4DIGITDISPLAY_OFF, \"0\"]\r\n];\r\n\r\n//执行器_点阵屏显示_画点显示\r\nexport const ke_Matrix_POS = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName').appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOW);\r\n        this.appendValueInput(\"XVALUE\").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_X);\r\n        this.appendValueInput(\"YVALUE\").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_Y);\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOWPOINT).appendField(new Blockly.FieldDropdown(ke_DrawPixel_NUM), \"DrawPixel_TYPE\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        //this.setTooltip(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOWPOINT_TOOLTIP);\r\n    }\r\n};\r\n//执行器_点阵屏显示_旋转变量\r\nvar ke_Rotation_NUM = [\r\n    [\"0°\", \"0\"],\r\n    [\"-90°\", \"1\"],\r\n    [\"+90°\", \"3\"],\r\n    [\"180°\", \"2\"]\r\n];\r\n\r\n//执行器_点阵屏显示_显示旋转\r\nexport const ke_Matrix_Rotation = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName').appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOW);\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_ROTATE).appendField(new Blockly.FieldDropdown(ke_Rotation_NUM), \"Rotation_TYPE\");\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        //   this.setTooltip(\"\");\r\n    }\r\n};\r\n//执行器_点阵屏显示_字符显示\r\nexport const ke_matrix_text = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName').appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOW);\r\n        this.appendValueInput(\"TEXT\", String).setCheck([Number, String]).setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.ke_string);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n        //this.setTooltip(\"\");\r\n    }\r\n};\r\n//执行器_点阵屏显示_显示图案\r\nexport const ke_matrix1 = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName').appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOW).appendField(new Blockly.FieldImage(require(\"../media/ke_matrix.png\"), 70, 32));\r\n        this.appendValueInput(\"LEDArray\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_PICARRAY);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        //this.setTooltip();\r\n    }\r\n};\r\n//执行器_点阵屏显示_图案数组\r\nexport const ke_matrix2 = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_ARRAYVAR).appendField(new Blockly.FieldTextInput(\"LedArray1\"), \"VAR\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a81\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a82\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a83\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a84\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a85\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a86\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a87\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a88\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a71\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a72\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a73\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a74\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a75\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a76\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a77\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a78\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a61\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a62\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a63\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a64\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a65\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a66\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a67\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a68\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a51\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a52\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a53\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a54\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a55\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a56\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a57\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a58\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a41\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a42\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a43\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a44\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a45\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a46\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a47\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a48\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a31\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a32\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a33\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a34\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a35\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a36\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a37\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a38\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a21\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a22\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a23\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a24\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a25\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a26\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a27\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a28\");\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a11\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a12\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a13\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a14\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a15\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a16\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a17\").appendField(new Blockly.FieldCheckbox(\"FALSE\"), \"a18\");\r\n        this.setOutput(true, Number);\r\n        //this.setTooltip();\r\n    }\r\n};\r\n\r\n\r\n//执行器_点阵屏显示_清除屏幕\r\nexport const ke_matrix_clear = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\").appendField(new Blockly.FieldTextInput('myMatrix'), 'matrixName').appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_SHOW);\r\n        this.appendDummyInput(\"\").setAlign(Blockly.ALIGN_RIGHT).appendField(Blockly.Msg.MIXLY_DISPLAY_MATRIX_CLEAR);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        //this.setTooltip();\r\n    }\r\n};\r\n\r\n///////////////////1602LCD无IIC//////////////////////\r\n/*export const ke_1602lcd_w = {\r\n  init: function() {\r\n      this.setColour(DISPLAY_HUE);\r\n      this.appendDummyInput(\"\")\r\n          .appendField(\"LCD1602\")\r\n          .appendField(new Blockly.FieldImage(require(\"../media/ke_lcd1602.png\"), 70, 32));\r\n    this.appendValueInput(\"TEXT1\", String)\r\n        .setCheck([String,Number])\r\n        .setAlign(Blockly.ALIGN_RIGHT)\r\n        //.appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n        .appendField(Blockly.Msg.MIXLY_LCD_PRINT1);\r\n    this.appendValueInput(\"TEXT2\", String)\r\n        .setCheck([String,Number])\r\n        .setAlign(Blockly.ALIGN_RIGHT)\r\n        .appendField(Blockly.Msg.MIXLY_LCD_PRINT2);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n  }\r\n};\r\n*/\r\n\r\n\r\n///////////////////1602LCD_init//////////////////////\r\nexport const ke_1602lcd_init = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendValueInput(\"address\", Number)\r\n            //.setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_SETUP)\r\n            .appendField(Blockly.Msg.Kids_lcd_p)\r\n            .appendField(new Blockly.FieldDropdown([['1602', '16,2'], ['2004', '20,4']]), 'TYPE')\r\n            .appendField(Blockly.Msg.Kids_shilihua)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(Blockly.Msg.Kids_iic_pin)\r\n            //.appendField(\"address:\");\r\n\r\n            //.setCheck(Number)\r\n            //.setAlign(Blockly.ALIGN_RIGHT)\r\n            //.appendField(\"address:\");\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ADDRESS);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n\r\nexport const ke_1602lcd = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_lcd1602.png\"), 70, 32));\r\n        this.appendValueInput(\"TEXT\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            // .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT1);\r\n        this.appendValueInput(\"TEXT2\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT2);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const ke_1602lcd_print2 = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendValueInput(\"row\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ROW);\r\n        this.appendValueInput(\"column\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_COLUMN);\r\n        this.appendValueInput(\"TEXT\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_PRINT);\r\n        this.setPreviousStatement(true, null);\r\n        this.setInputsInline(true);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n///////////////////1602LCD//////////////////////\r\n/*export const ke_1602lcd = {\r\n  init: function() {\r\n    this.setColour(DISPLAY_HUE);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(Blockly.Msg.MIXLY_ke_1602LCD)\r\n    .appendField(new Blockly.FieldImage(require(\"../media/ke_lcd1602.png\"), 70, 32));\r\n    this.appendValueInput(\"TEXT1\", String)\r\n    .setCheck([String,Number])\r\n    .setAlign(Blockly.ALIGN_RIGHT)\r\n    .appendField(Blockly.Msg.MIXLY_ke_print1);\r\n    this.appendValueInput(\"TEXT2\", String)\r\n    .setCheck([String,Number])\r\n    .setAlign(Blockly.ALIGN_RIGHT)\r\n    .appendField(Blockly.Msg.MIXLY_ke_print2)\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n  }\r\n};*/\r\n\r\nexport const ke_1602lcd_left = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.Kids_lcd_left)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR');\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const ke_1602lcd_right = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.Kids_lcd_right)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR');\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\nexport const ke_1602lcd_clear = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(Blockly.Msg.MIXLY_DF_LCD)\r\n            .appendField(new Blockly.FieldTextInput('mylcd'), 'VAR')\r\n            .appendField(new Blockly.FieldDropdown([[Blockly.Msg.MIXLY_LCD_STAT_ON, \"display\"], [Blockly.Msg.MIXLY_LCD_STAT_OFF, \"noDisplay\"], [Blockly.Msg.MIXLY_LCD_STAT_CURSOR, \"cursor\"], [Blockly.Msg.MIXLY_LCD_STAT_NOCURSOR, \"noCursor\"], [Blockly.Msg.MIXLY_LCD_STAT_BLINK, \"blink\"], [Blockly.Msg.MIXLY_LCD_STAT_NOBLINK, \"noBlink\"], [Blockly.Msg.MIXLY_LCD_STAT_CLEAR, \"clear\"], [Blockly.Msg.MIXLY_LCD_NOBACKLIGHT, \"noBacklight\"], [Blockly.Msg.MIXLY_LCD_BACKLIGHT, \"backlight\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n//128X32 LCD display  -- 初始化\r\n\r\nexport const lcd128_init = {\r\n    init: function () {\r\n        this.appendDummyInput(\"\")\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32))\r\n            .appendField(Blockly.Msg.MIXLY_LCD128_SETUP);\r\n        this.setColour(DISPLAY_HUE);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n//128X32 LCD display 显示第几行第几列\r\nexport const lcd128_cursor = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_LCD128_CURSOR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32));\r\n        this.appendValueInput(\"row\", Number)  //数字输入和上面的图片分开写\r\n            .setCheck(Number)  //少了这个\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_ROW);\r\n        this.appendValueInput(\"col\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_LCD_COLUMN);\r\n        this.setPreviousStatement(true, null);\r\n        this.setInputsInline(true);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n//128X32 LCD display 显示字符\r\nexport const lcd128_string = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_DISPLAY_STRING)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32));\r\n        this.appendValueInput(\"string\", String)\r\n            .setCheck([Number, String])\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\n\r\n//128X32 LCD display 画点坐标\r\nexport const lcd128_pixel = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_LCD128_PIXLE);\r\n        this.appendValueInput(\"row\", Number)\r\n            .setCheck()\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"col\", Number)\r\n            .setCheck()\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n//128X32 LCD display 删除点坐标\r\nexport const lcd128_d_pixel = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput()\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32))\r\n            .appendField(Blockly.Msg.MIXLY_ke_LCD128_D);\r\n        this.appendValueInput(\"row\", Number)\r\n            .setCheck()\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.appendValueInput(\"col\", Number)\r\n            .setCheck()\r\n            .setAlign(Blockly.ALIGN_RIGHT);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n//128X32 LCD display 清屏\r\nexport const lcd128_clear = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_LCD128_CLEAR)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/12832.png\"), 84, 32));\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////LCD1602清屏///////////////////////\r\n/*export const ke_1602lcd_clear = {\r\n  init: function() {\r\n    this.setColour(DISPLAY_HUE);\r\n    this.appendDummyInput(\"\")\r\n    .appendField(\"1602LCD_clear\")\r\n    //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n    this.setInputsInline(true);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n  }\r\n};*/\r\n\r\n\r\n/////////////////2004LCD//////////////////////\r\nexport const ke_2004lcd = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_2004LCD);\r\n        this.appendValueInput(\"TEXT1\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print1);\r\n        this.appendValueInput(\"TEXT2\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print2)\r\n        this.appendValueInput(\"TEXT3\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print3);\r\n        this.appendValueInput(\"TEXT4\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print4)\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n///////////////////OLED_init///////////////////////\r\nexport const ke_OLED_init = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_init)\r\n            .appendField(Blockly.Msg.Kids_iic_pin);\r\n        //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_piexl///////////////////////\r\nexport const ke_OLED_piexl = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_piexl);\r\n        this.appendValueInput(\"val_x\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        //.appendField(new Blockly.FieldImage(require(\"../media/ke_oled.png\"), 70, 32))\r\n        //.appendField(Blockly.Msg.Kids_iic_pin);\r\n        //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_line///////////////////////\r\nexport const ke_OLED_line = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_line)\r\n            .appendField(Blockly.Msg.ke_oled_cong);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_dao);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n///////////////////OLED_rect///////////////////////\r\nexport const ke_OLED_rect = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_rect);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_kai);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_chang);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_kuan);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_fullrect///////////////////////\r\nexport const ke_OLED_fullrect = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_fil_lrect);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_kai);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_chang);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_kuan);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n\r\n///////////////////OLED_roundrect///////////////////////\r\nexport const ke_OLED_roundrect = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_r_rect);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_kai);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_chang);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_kuan);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendValueInput(\"val_round\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_radius);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n///////////////////OLED_fullroundrect///////////////////////\r\nexport const ke_OLED_fullroundrect = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_r_fill_rect);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_kai);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_chang);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_kuan);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendValueInput(\"val_round\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_radius);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n\r\n///////////////////OLED_circle///////////////////////\r\nexport const ke_OLED_circle = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_circle);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendValueInput(\"val_circle\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_circle_radius);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_fullcircle///////////////////////\r\nexport const ke_OLED_fullcircle = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_fill_circle);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendValueInput(\"val_circle\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_circle_radius);\r\n\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_三角形///////////////////////\r\nexport const ke_OLED_triangle = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_triangle)\r\n            .appendField(Blockly.Msg.ke_oled_angle1);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_angle2);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_angle3);\r\n        this.appendValueInput(\"val_x3\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y3\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n\r\n///////////////////OLED_填充三角形///////////////////////\r\nexport const ke_OLED_fulltriangle = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_fill_triangle)\r\n            .appendField(Blockly.Msg.ke_oled_angle1);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_angle2);\r\n        this.appendValueInput(\"val_x2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y2\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_angle3);\r\n        this.appendValueInput(\"val_x3\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y3\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED_string///////////////////////\r\nexport const ke_OLED_string = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_string1);\r\n        this.appendValueInput(\"size\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.Kids_size);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_weizhi);\r\n        this.appendValueInput(\"val_x1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_x);\r\n        this.appendValueInput(\"val_y1\", Number)\r\n            .setCheck(Number);\r\n        this.appendDummyInput(\"\")\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_y);\r\n        this.appendValueInput(\"TEXT1\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.ke_oled_print);\r\n        //.appendField(new Blockly.FieldImage(require(\"../media/ke_oled.png\"), 70, 32))\r\n        //.appendField(Blockly.Msg.Kids_iic_pin);\r\n        //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n////////////////////OLED////////////////////////\r\nexport const ke_oled = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_OLED);\r\n\r\n\r\n        this.appendValueInput(\"size\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.Kids_size);\r\n\r\n        this.appendValueInput(\"TEXT1\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print1);\r\n        this.appendValueInput(\"TEXT2\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print2);\r\n        this.appendValueInput(\"TEXT3\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print3);\r\n        this.appendValueInput(\"TEXT4\", String)\r\n            .setCheck([String, Number])\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(Blockly.Msg.MIXLY_ke_print4);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n///////////////////OLED清屏///////////////////////\r\nexport const ke_oled_clear = {\r\n    init: function () {\r\n        this.setColour(DISPLAY_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.ke_oled_clear)\r\n        //.appendField(new Blockly.FieldDropdown([[Blockly.Msg.Kids_ON, \"HIGH\"], [Blockly.Msg.Kids_OFF, \"LOW\"]]), \"STAT\");\r\n        this.setInputsInline(true);\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n/////////////////////////////通讯/////////////////////////////////////////////\r\n\r\n////////////////红外接收////////////////////////////\r\n//红外接收模块\r\nexport const ke_ir_r = {\r\n    init: function () {\r\n        this.setColour(COMMUNICATE_HUE);\r\n        this.appendValueInput(\"PIN\", Number)\r\n            .appendField(new Blockly.FieldTextInput('ir_rec'), 'VAR')\r\n            .appendField(Blockly.Msg.MIXLY_ke_IR_R)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_irr.png\"), 70, 32))\r\n            .appendField(Blockly.Msg.MIXLY_PIN)\r\n            .setCheck(Number);\r\n        this.appendStatementInput('DO')\r\n            .appendField(Blockly.Msg.MIXLY_ke_read);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(Blockly.Msg.MIXLY_IR_RECIEVE_TOOLTIP);\r\n    },\r\n    getVars: function () {\r\n        return [this.getFieldValue('VAR')];\r\n    },\r\n    renameVar: function (oldName, newName) {\r\n        if (Blockly.Names.equals(oldName, this.getFieldValue('VAR'))) {\r\n            this.setTitleValue(newName, 'VAR');\r\n        }\r\n    }\r\n};\r\n\r\n////////////////////红外发射/////////////////////\r\nexport const ke_ir_s = {\r\n    init: function () {\r\n        this.setColour(COMMUNICATE_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_ke_IR_E)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_irs.png\"), 43, 32));\r\n\r\n        this.appendValueInput(\"num1\", Number)\r\n            .setCheck(Number)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(\"Send\");\r\n        this.setPreviousStatement(true, null);\r\n        this.setNextStatement(true, null);\r\n    }\r\n};\r\n\r\n\r\n//////////////////////RFID////////////////////////////\r\nexport const rc522_i2c_init = {\r\n    init: function () {\r\n        this.setColour(COMMUNICATE_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_rc522_iic_init)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n    }\r\n};\r\n\r\nexport const rc522_i2c_read = {\r\n    init: function () {\r\n        this.setColour(COMMUNICATE_HUE);\r\n        this.appendDummyInput(\"\")\r\n            .appendField(Blockly.Msg.MIXLY_rc522_iic_read)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/rc522_iic.png\"), 60, 40));\r\n        this.setOutput(true, Number);\r\n        this.setInputsInline(true);\r\n        this.setTooltip('');\r\n    }\r\n};\r\n\r\n//////////////////////蓝牙////////////////////////////\r\nexport const ke_bluetooth = {\r\n    init: function () {\r\n        this.setColour(COMMUNICATE_HUE);\r\n        this.appendValueInput(\"PIN1\", Number)\r\n            .appendField(new Blockly.FieldTextInput('val'), 'VAL')\r\n            .appendField(Blockly.Msg.MIXLY_ke_BLUETOOTH)\r\n            .appendField(new Blockly.FieldImage(require(\"../media/ke_bluetooth.png\"), 70, 32))\r\n            .appendField(\"RX:\")\r\n            .setCheck(Number);\r\n        this.appendValueInput(\"PIN2\", Number)\r\n            .appendField(\"TX:\")\r\n            .setCheck(Number);\r\n        this.appendStatementInput('DO')\r\n            .appendField(Blockly.Msg.MIXLY_ke_read);\r\n        this.setPreviousStatement(true);\r\n        this.setNextStatement(true);\r\n        this.setInputsInline(true);\r\n        this.setTooltip(\"bluetooth\");\r\n    },\r\n    getVars: function () {\r\n        return [this.getFieldValue('VAL')];\r\n    },\r\n    renameVar: function (oldName, newName) {\r\n        if (Blockly.Names.equals(oldName, this.getFieldValue('VAL'))) {\r\n            this.setTitleValue(newName, 'VAL');\r\n        }\r\n    }\r\n};","import * as Blockly from 'blockly/core';\r\n\r\n////////////////////模拟输出////////////////////\r\nexport const ke_a_Write = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_val = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n    //generator.setups_['setup_output_'+dropdown_pin] = 'pinMode('+dropdown_pin+', OUTPUT);';\r\n    var code = 'analogWrite(' + dropdown_pin + ',' + dropdown_val + ');\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////红黄绿蓝白LED////////////////////\r\nexport const ke_led_r = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const ke_led_g = ke_led_r;\r\nexport const ke_led_b = ke_led_r;\r\nexport const ke_led_y = ke_led_r;\r\nexport const ke_led_w = ke_led_r;\r\nexport const ke_led4 = ke_led_r;\r\nexport const ke_jg = ke_led_r;\r\nexport const ke_qcd = ke_led_r;\r\n\r\n\r\n////////////////////双色LED////////////////////\r\nexport const ke_dual = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var dropdown_stat1 = this.getFieldValue('STAT1');\r\n    var dropdown_stat2 = this.getFieldValue('STAT2');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + dropdown_stat1 + ');\\ndigitalWrite(' + dropdown_pin2 + ',' + dropdown_stat2 + ');\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////RGB01////////////////////\r\nexport const ke_rgb1_1 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var dropdown_pin3 = generator.valueToCode(this, 'PIN3', generator.ORDER_ATOMIC);\r\n    var dropdown_stat1 = this.getFieldValue('STAT1');\r\n    var dropdown_stat2 = this.getFieldValue('STAT2');\r\n    var dropdown_stat3 = this.getFieldValue('STAT3');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin3] = 'pinMode(' + dropdown_pin3 + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + dropdown_stat1 + ');\\ndigitalWrite(' + dropdown_pin2 + ',' + dropdown_stat2 + ');\\ndigitalWrite(' + dropdown_pin3 + ',' + dropdown_stat3 + ');\\n'\r\n    return code;\r\n};\r\n\r\n\r\n//////////////////////////RGB//////////////////////////////\r\nexport const ke_rgb1_2 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'R', generator.ORDER_ATOMIC);\r\n    var red_pwm = generator.valueToCode(this, 'r', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'G', generator.ORDER_ATOMIC);\r\n    var green_pwm = generator.valueToCode(this, 'g', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var dropdown_pin3 = generator.valueToCode(this, 'B', generator.ORDER_ATOMIC);\r\n    var blue_pwm = generator.valueToCode(this, 'b', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin3] = 'pinMode(' + dropdown_pin3 + ', OUTPUT);';\r\n\r\n    var code = 'analogWrite(' + dropdown_pin1 + ',255-' + red_pwm + ');\\nanalogWrite(' + dropdown_pin2 + ',255-' + green_pwm + ');\\nanalogWrite(' + dropdown_pin3 + ',255-' + blue_pwm + ');\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////RGB2////////////////////\r\nexport const ke_rgb2_1 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var dropdown_pin3 = generator.valueToCode(this, 'PIN3', generator.ORDER_ATOMIC);\r\n    var dropdown_stat1 = this.getFieldValue('STAT1');\r\n    var dropdown_stat2 = this.getFieldValue('STAT2');\r\n    var dropdown_stat3 = this.getFieldValue('STAT3');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin3] = 'pinMode(' + dropdown_pin3 + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + dropdown_stat1 + ');\\ndigitalWrite(' + dropdown_pin2 + ',' + dropdown_stat2 + ');\\ndigitalWrite(' + dropdown_pin3 + ',' + dropdown_stat3 + ');\\n'\r\n    return code;\r\n};\r\n\r\n\r\n//////////////////////////RGB2//////////////////////////////\r\nexport const ke_rgb2_2 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'R', generator.ORDER_ATOMIC);\r\n    var red_pwm = generator.valueToCode(this, 'r', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'G', generator.ORDER_ATOMIC);\r\n    var green_pwm = generator.valueToCode(this, 'g', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var dropdown_pin3 = generator.valueToCode(this, 'B', generator.ORDER_ATOMIC);\r\n    var blue_pwm = generator.valueToCode(this, 'b', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin3] = 'pinMode(' + dropdown_pin3 + ', OUTPUT);';\r\n\r\n    var code = 'analogWrite(' + dropdown_pin1 + ',' + red_pwm + ');\\nanalogWrite(' + dropdown_pin2 + ',' + green_pwm + ');\\nanalogWrite(' + dropdown_pin3 + ',' + blue_pwm + ');\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////蜂鸣器////////////////////\r\nexport const ke_w_buzzer1 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const ke_w_buzzer2 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\nexport const ke_w_buzzer3 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var dur = generator.valueToCode(this, 'DURATION',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \",\" + dur + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\n////////////////////蜂鸣器//////////////////////\r\nexport const ke_tone01 = function (_, generator) {\r\n    var code = this.getFieldValue('STAT');\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\nexport const ke_buzzer = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    generator.setups_['setup_output'] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n\r\n    var dropdown_type = this.getFieldValue('beat1');\r\n\r\n    var code = 'tone(' + dropdown_pin + ',' + fre + ');\\ndelay(' + dropdown_type + ');\\n';\r\n    /*if(window.isNaN(dropdown_pin)){\r\n       code = code+'pinMode('+dropdown_pin+', OUTPUT);\\n';\r\n    }else{\r\n       generator.setups_['setup_output_'+dropdown_pin] = 'pinMode('+dropdown_pin+', OUTPUT);';\r\n    }*/\r\n    //code += \"tone(\"+dropdown_pin+\",\"+fre+\");\\n\";\r\n    return code;\r\n};\r\n\r\nexport const ke_controls_tone2 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var dur = generator.valueToCode(this, 'DURATION',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"\";\r\n    if (window.isNaN(dropdown_pin)) {\r\n        code = code + 'pinMode(' + dropdown_pin + ', OUTPUT);\\n';\r\n    } else {\r\n        generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    }\r\n    code += \"tone(\" + dropdown_pin + \",\" + fre + \",\" + dur + \");\\n\";\r\n    return code;\r\n};\r\n\r\n//////////////////////////music///////////////////////////\r\nexport const ke_music = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_music'] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    generator.definitions_['include_birthday'] = 'void birthday()\\n{\\n  tone(' + dropdown_pin + ',294);\\n  delay(250);\\n  tone(' + dropdown_pin + ',440);\\n  delay(250);\\n  tone(' + dropdown_pin + ',392);\\n  delay(250);\\n  tone(' + dropdown_pin + ',532);\\n  delay(250);\\n  tone(' + dropdown_pin + ',494);\\n  delay(500);\\n  tone(' + dropdown_pin + ',392);\\n  delay(250);\\n  tone(' + dropdown_pin + ',440);\\n  delay(250);\\n  tone(' + dropdown_pin + ',392);\\n  delay(250);\\n  tone(' + dropdown_pin + ',587);\\n  delay(250);\\n  tone(' + dropdown_pin + ',532);\\n  delay(500);\\n  tone(' + dropdown_pin + ',392);\\n  delay(250);\\n  tone(' + dropdown_pin + ',784);\\n  delay(250);\\n  tone(' + dropdown_pin + ',659);\\n  delay(250);\\n  tone(' + dropdown_pin + ',532);\\n  delay(250);\\n  tone(' + dropdown_pin + ',494);\\n  delay(250);\\n  tone(' + dropdown_pin + ',440);\\n  delay(250);\\n  tone(' + dropdown_pin + ',698);\\n  delay(375);\\n  tone(' + dropdown_pin + ',659);\\n  delay(250);\\n  tone(' + dropdown_pin + ',532);\\n  delay(250);\\n  tone(' + dropdown_pin + ',587);\\n  delay(250);\\n  tone(' + dropdown_pin + ',532);\\n  delay(500);\\n}\\n';\r\n    generator.definitions_['include_tone'] = '//tone\\n#define D0 -1\\n#define D1 262\\n#define D2 293\\n#define D3 329\\n#define D4 349\\n#define D5 392\\n#define D6 440\\n#define D7 494\\n#define M1 523\\n#define M2 586\\n#define M3 658\\n#define M4 697\\n#define M5 783\\n#define M6 879\\n#define M7 987\\n#define H1 1045\\n#define H2 1171\\n#define H3 1316\\n#define H4 1393\\n#define H5 1563\\n#define H6 1755\\n#define H7 1971\\n\\n#define WHOLE 1\\n#define HALF 0.5\\n#define QUARTER 0.25\\n#define EIGHTH 0.25\\n#define SIXTEENTH 0.625\\n ';\r\n\r\n    generator.definitions_['include_tune'] = '\\nint tune[]= \\n{\\n  M3,M3,M4,M5,\\n  M5,M4,M3,M2,\\n  M1,M1,M2,M3,\\n  M3,M2,M2,\\n  M3,M3,M4,M5,\\n  M5,M4,M3,M2,\\n  M1,M1,M2,M3,\\n  M2,M1,M1,\\n  M2,M2,M3,M1,\\n  M2,M3,M4,M3,M1,\\n  M2,M3,M4,M3,M2,\\n  M1,M2,D5,D0,\\n  M3,M3,M4,M5,\\n  M5,M4,M3,M4,M2,\\n  M1,M1,M2,M3,\\n  M2,M1,M1\\n};';\r\n    generator.definitions_['include_durt'] = '\\nfloat durt[]= \\n {\\n  1,1,1,1,\\n  1,1,1,1,\\n  1,1,1,1,\\n  1+0.5,0.5,1+1,\\n  1,1,1,1,\\n  1,1,1,1,\\n  1,1,1,1,\\n  1+0.5,0.5,1+1,\\n  1,1,1,1,\\n  1,0.5,0.5,1,1,\\n  1,0.5,0.5,1,1,\\n  1,1,1,1,\\n  1,1,1,1,\\n  1,1,1,0.5,0.5,\\n  1,1,1,1,\\n  1+0.5,0.5,1+1,\\n };';\r\n    generator.definitions_['include_io1'] = '\\n int length;\\n int tonepin=' + dropdown_pin + '; \\n';\r\n    generator.definitions_['include_Ode_to_Joy'] = 'void Ode_to_Joy()\\n{\\n  for(int x=0;x<length;x++)\\n  {\\n    tone(tonepin,tune[x]);\\n    delay(300*durt[x]);   \\n  }\\n}\\n';\r\n\r\n    generator.setups_['setup_output_Ode'] = 'length=sizeof(tune)/sizeof(tune[0]);\\n';\r\n    var dropdown_type = this.getFieldValue('play');\r\n\r\n    var code = '';\r\n    if (dropdown_type == \"Birthday\") code += 'birthday();\\n';\r\n    if (dropdown_type == \"Ode to Joy\") code += 'Ode_to_Joy();\\n';\r\n    //if (dropdown_type == \"City of Sky\") code += 'digitalRead(8)';\r\n    return code;\r\n    //return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\nexport const ke_notone = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output'] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = '';\r\n    code += \"noTone(\" + dropdown_pin + \");\\n\";\r\n    return code;\r\n};\r\n\r\n\r\n\r\n////////////////////继电器////////////////////\r\nexport const ke_relay = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\n\r\n///////////////////震动马达////////////////////\r\nexport const ke_v_motor = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    var code = 'digitalWrite(' + dropdown_pin + ',' + dropdown_stat + ');\\n'\r\n    return code;\r\n};\r\n\r\n///////////////////////扬声器模块////////////////////////////\r\n\r\nexport const ke_speaker = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY', generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\nexport const ke_speaker2 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var fre = generator.valueToCode(this, 'FREQUENCY',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var dur = generator.valueToCode(this, 'DURATION',\r\n        generator.ORDER_ASSIGNMENT) || '0';\r\n    var code = \"tone(\" + dropdown_pin + \",\" + fre + \",\" + dur + \");\\n\";\r\n    generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    return code;\r\n};\r\n\r\n// Notone 结束声音\r\nexport const ke_speaker_notone = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var code = '';\r\n    if (window.isNaN(dropdown_pin)) {\r\n        code = code + 'pinMode(' + dropdown_pin + ', OUTPUT);\\n';\r\n    } else {\r\n        generator.setups_['setup_output_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', OUTPUT);';\r\n    }\r\n    code += \"noTone(\" + dropdown_pin + \");\\n\";\r\n    return code;\r\n};\r\n////////////////////电机////////////////////\r\nexport const ke_motor = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_stat1 = this.getFieldValue('STAT1');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var dropdown_stat2 = this.getFieldValue('STAT2');\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + dropdown_stat1 + ');\\ndigitalWrite(' + dropdown_pin2 + ',' + dropdown_stat2 + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const ke_motor001 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var data_a = this.getFieldValue('STAT1');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var value_pwmb = generator.valueToCode(this, 'pwmb', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + data_a + ');\\nanalogWrite(' + dropdown_pin2 + ',' + value_pwmb + ');\\n'\r\n    return code;\r\n};\r\n\r\n\r\nexport const ke_motor2 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_stat1 = this.getFieldValue('STAT1');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var dropdown_stat2 = this.getFieldValue('STAT2');\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + dropdown_stat1 + ');\\ndigitalWrite(' + dropdown_pin2 + ',' + dropdown_stat2 + ');\\n'\r\n    return code;\r\n};\r\n\r\nexport const ke_motor002 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var data_a = this.getFieldValue('STAT1');\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var value_pwmb = generator.valueToCode(this, 'pwmb', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', OUTPUT);';\r\n\r\n    var code = 'digitalWrite(' + dropdown_pin1 + ',' + data_a + ');\\nanalogWrite(' + dropdown_pin2 + ',' + value_pwmb + ');\\n'\r\n    return code;\r\n};\r\n\r\n\r\n////////////////////舵机////////////////////\r\nexport const ke_servo = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var value_degree = generator.valueToCode(this, 'angle', generator.ORDER_ATOMIC);\r\n    //value_degree = value_degree.replace('(','').replace(')','')\r\n    var delay_time = generator.valueToCode(this, 'time', generator.ORDER_ATOMIC) || '0'\r\n    //delay_time = delay_time.replace('(','').replace(')','');\r\n\r\n    generator.definitions_['include_Servo'] = '#include <Servo.h>';\r\n    generator.definitions_['var_servo' + dropdown_pin] = 'Servo servo_' + dropdown_pin + ';';\r\n    generator.setups_['setup_servo_' + dropdown_pin] = 'servo_' + dropdown_pin + '.attach(' + dropdown_pin + ');';\r\n\r\n    var code = 'servo_' + dropdown_pin + '.write(' + value_degree + ');\\n' + 'delay(' + delay_time + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_servo_r = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['include_Servo'] = '#include <Servo.h>';\r\n    generator.definitions_['var_servo' + dropdown_pin] = 'Servo servo_' + dropdown_pin + ';';\r\n    generator.setups_['setup_servo_' + dropdown_pin] = 'servo_' + dropdown_pin + '.attach(' + dropdown_pin + ');';\r\n\r\n    var code = 'servo_' + dropdown_pin + '.read()';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n//////////////////////////数字传感器////////////////////////////////\r\n\r\nexport const ke_ir_g = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'digitalRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n/////////////////火焰传感器////////////////\r\nexport const ke_flame = ke_ir_g;\r\n\r\n\r\n/////////////////霍尔传感器////////////////\r\nexport const ke_hall = ke_ir_g;\r\n\r\n\r\n/////////////////碰撞传感器////////////////\r\nexport const ke_crash = ke_ir_g;\r\n\r\n\r\n/////////////////按键传感器////////////////\r\nexport const ke_button = ke_ir_g;\r\n\r\n\r\n/////////////////自锁按键传感器////////////////\r\nexport const ke_sl_button = ke_ir_g;\r\n\r\n/////////////////电容触摸传感器////////////////\r\nexport const ke_tuoch = ke_ir_g;\r\n\r\n/////////////////敲击传感器////////////////\r\nexport const ke_knock = ke_ir_g;\r\n\r\n\r\n/////////////////倾斜传感器////////////////\r\nexport const ke_tilt = ke_ir_g;\r\n\r\n\r\n/////////////////振动传感器////////////////\r\nexport const ke_shake = ke_ir_g;\r\n\r\n\r\n/////////////////干簧管传感器////////////////\r\nexport const ke_reed_s = ke_ir_g;\r\n\r\n\r\n/////////////////循迹传感器////////////////\r\nexport const ke_track = ke_ir_g;\r\n\r\n\r\n/////////////////避障传感器////////////////\r\nexport const ke_avoid = ke_ir_g;\r\n\r\n/////////////////光折断传感器////////////////\r\nexport const ke_light_b = ke_ir_g;\r\n\r\n/////////////////烟雾数字传感器/////////////////\r\nexport const ke_smoke_D = ke_ir_g;\r\n\r\n/////////////////////酒精数字传感器///////////////\r\nexport const ke_alcohol_D = ke_ir_g;\r\n\r\n\r\n//////////////////////模拟传感器/////////////////////////\r\nexport const ke_sound = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'analogRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n////////////////////LM35温度////////////////////\r\nexport const ke_lm35 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'analogRead(' + dropdown_pin + ')*0.488';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\nexport const ke_analog_t = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['include_math'] = '#include <math.h>';\r\n\r\n    generator.definitions_['func_temp'] = 'double Thermister(int RawADC) {\\n  double Temp;\\n  Temp = log(((10240000/RawADC) - 10000));\\n  Temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * Temp * Temp ))* Temp );\\n  Temp = Temp - 273.15; // Convert Kelvin to Celcius\\n  return Temp;\\n}\\n';\r\n\r\n    var code = 'Thermister(analogRead(' + dropdown_pin + '))';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n////////////////////光线////////////////////\r\n\r\nexport const ke_light = ke_sound;\r\n\r\n////////////////////紫外线////////////////////\r\n\r\nexport const ke_UV = ke_sound;\r\n\r\n////////////////////压电////////////////////\r\n\r\nexport const ke_Piezo = ke_sound;\r\n\r\n////////////////////水位////////////////////\r\n\r\nexport const ke_water = ke_sound;\r\n\r\n////////////////////土壤////////////////////\r\n\r\nexport const ke_soil = ke_sound;\r\n\r\n////////////////////电位器////////////////////\r\n\r\nexport const ke_potentiometer = ke_sound;\r\n\r\n////////////////////滑动电位器////////////////////\r\n\r\n\r\nexport const ke_slide_potentiometer = ke_sound;\r\n\r\n////////////////////TEMT6000光线////////////////////\r\n\r\nexport const ke_temt6000 = ke_sound;\r\n\r\n////////////////////水蒸气////////////////////\r\n///\r\nexport const ke_steam = ke_sound;\r\n\r\n//////////////////// 压力传感器////////////////////\r\nexport const ke_film_p = ke_sound;\r\n\r\n////////////////////烟雾////////////////////\r\n\r\nexport const ke_smoke = ke_sound;\r\n\r\n////////////////////酒精////////////////////\r\nexport const ke_alcohol = ke_sound;\r\n\r\n////////////////////18B20温度////////////////////\r\n// export const ke_18b20 = ke_sound;\r\n\r\n////////////////////温度湿度////////////////////\r\n// export const ke_dht11 = ke_sound;\r\n\r\n////////////////////高度////////////////////\r\n// export const ke_bmp180 = ke_sound;\r\n\r\n////////////////////火焰////////////////////\r\nexport const ke_fire2 = ke_sound;\r\n\r\n\r\n////////////////////电压////////////////////\r\n\r\nexport const Voltage = ke_sound;\r\n\r\n////////////////////电流////////////////////\r\n\r\nexport const Current = ke_sound;\r\n///////////////////////////////////////////////////\r\n///////////////////其他传感器/////////////////////////\r\n////////////////////////////////////////////////////\r\n\r\n////////////////ADKey///////////////////////\r\nexport const ke_ADKey = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'analogRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n///////////////////////超声波//////////////////////\r\nexport const ke_sr04 = function (_, generator) {\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_output_' + dropdown_pin1] = 'pinMode(' + dropdown_pin1 + ', OUTPUT);';\r\n    generator.setups_['setup_output_' + dropdown_pin2] = 'pinMode(' + dropdown_pin2 + ', INPUT);';\r\n    var funcName = 'checkdistance_' + dropdown_pin1 + '_' + dropdown_pin2;\r\n    var code = 'float' + ' ' + funcName + '() {\\n'\r\n        + '  digitalWrite(' + dropdown_pin1 + ', LOW);\\n' + '  delayMicroseconds(2);\\n'\r\n        + '  digitalWrite(' + dropdown_pin1 + ', HIGH);\\n' + '  delayMicroseconds(10);\\n'\r\n        + '  digitalWrite(' + dropdown_pin1 + ', LOW);\\n'\r\n        + '  float distance = pulseIn(' + dropdown_pin2 + ', HIGH) / 58.00;\\n'\r\n        + '  delay(10);\\n' + '  return distance;\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName] = code;\r\n    return [funcName + '()', generator.ORDER_ATOMIC];\r\n};\r\n\r\n///////////////////18B20////////////////////////////\r\nexport const ke_18b20 = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var unit = this.getFieldValue('UNIT');\r\n    generator.definitions_['include_OneWire'] = '#include <OneWire.h>';\r\n    generator.definitions_['include_DallasTemperature'] = '#include <DallasTemperature.h>';\r\n    generator.definitions_['var_OneWire_oneWire_' + dropdown_pin] = 'OneWire oneWire_' + dropdown_pin + '(' + dropdown_pin + ');';\r\n    generator.definitions_['var_DallasTemperature_sensors_' + dropdown_pin] = 'DallasTemperature sensors_' + dropdown_pin + '(&oneWire_' + dropdown_pin + ');';\r\n    generator.definitions_['var_DeviceAddress_insideThermometer'] = 'DeviceAddress insideThermometer;';\r\n    generator.setups_['setup_sensors_' + dropdown_pin + '_getAddress'] = 'sensors_' + dropdown_pin + '.getAddress(insideThermometer, 0);';\r\n    generator.setups_['setup_sensors_' + dropdown_pin + '_setResolution'] = 'sensors_' + dropdown_pin + '.setResolution(insideThermometer, 9);';\r\n    var funcName = 'ds18b20_' + dropdown_pin + '_getTemp';\r\n    var code = 'float' + ' ' + funcName + '(int w) {\\n'\r\n        + '  sensors_' + dropdown_pin + '.requestTemperatures();\\n'\r\n        + '  if(w==0) {\\nreturn sensors_' + dropdown_pin + '.getTempC(insideThermometer);\\n}\\n'\r\n        + '  else {\\nreturn sensors_' + dropdown_pin + '.getTempF(insideThermometer);\\n}\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName] = code;\r\n    return ['ds18b20_' + dropdown_pin + '_getTemp(' + unit + ')', generator.ORDER_ATOMIC];\r\n}\r\n\r\n//////////////////////////DHT11///////////////////////////\r\nexport const ke_dht11 = function (_, generator) {\r\n    var sensor_type = this.getFieldValue('TYPE');\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var what = this.getFieldValue('WHAT');\r\n    generator.definitions_['include_dht'] = '#include <dht.h>';\r\n    generator.definitions_['var_dht_' + dropdown_pin] = 'dht myDHT_' + dropdown_pin + ';';\r\n    var funcName = 'dht_' + dropdown_pin + '_get' + what;\r\n    var code = 'int' + ' ' + funcName + '() {\\n'\r\n        + '  int chk = myDHT_' + dropdown_pin + '.read' + sensor_type + '(' + dropdown_pin + ');\\n'\r\n        + '  int value = myDHT_' + dropdown_pin + '.' + what + ';\\n'\r\n        + '  return value;\\n'\r\n        + '}\\n';\r\n    generator.definitions_[funcName] = code;\r\n    return [funcName + '()', generator.ORDER_ATOMIC];\r\n}\r\n\r\nexport const ke_DHT = function (_, generator) {\r\n    var sensor_type = this.getFieldValue('TYPE');\r\n    var dropdown_pin = this.getFieldValue('PIN');\r\n    var what = this.getFieldValue('WHAT');\r\n    generator.definitions_['include_DHT'] = '#include <DHT.h>';\r\n    generator.definitions_['var_declare_dht' + dropdown_pin] = 'DHT dht' + dropdown_pin + '(' + dropdown_pin + ', ' + sensor_type + ');'\r\n    generator.setups_['DHT_SETUP' + dropdown_pin] = ' dht' + dropdown_pin + '.begin();';\r\n    var code;\r\n    if (what == \"temperature\")\r\n        code = 'dht' + dropdown_pin + '.readTemperature()'\r\n    else\r\n        code = 'dht' + dropdown_pin + '.readHumidity()'\r\n    return [code, generator.ORDER_ATOMIC];\r\n}\r\n\r\n\r\n/////////////////////////BMP280////////////////////////////\r\nexport const ke_bmp280 = function (_, generator) {\r\n    generator.definitions_['include_BMP280'] = '#include <Adafruit_BMP280.h>';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_spi'] = '#include <SPI.h>';\r\n    generator.definitions_['include_Sensor'] = '#include <Adafruit_Sensor.h>';\r\n\r\n    generator.definitions_['include_SCK'] = '#define BMP_SCK 13';\r\n    generator.definitions_['include_MISO'] = '#define BMP_MISO 12';\r\n    generator.definitions_['include_MOSI'] = '#define BMP_MOSI 11';\r\n    generator.definitions_['include_CS'] = '#define BMP_CS 10';\r\n\r\n    generator.definitions_['include_bme'] = 'Adafruit_BMP280 bme; // I2C';\r\n\r\n    generator.definitions_['readPressure'] = 'int readPressure()\\n{\\n long int  pressure = 0;\\n  int temp = 0;\\n  temp = bme.readTemperature();\\n  pressure = bme.readPressure();\\n  return pressure;\\n}\\n';\r\n\r\n    generator.definitions_['readAltitude'] = 'int readAltitude()\\n{\\nint temp = 0;\\n  temp = bme.readTemperature();\\n  int altitude1 = 0;\\n  altitude1 = (101325-bme.readPressure()) * 0.09;\\n  return altitude1;\\n}\\n';\r\n\r\n    generator.setups_['setup_!bme'] = 'bme.begin();\\n';\r\n\r\n    var dropdown_type = this.getFieldValue('BMP280_PIN');\r\n    var code = '';\r\n\r\n    if (dropdown_type == \"T\") code += 'bme.readTemperature()';\r\n    if (dropdown_type == \"P\") code += 'bme.readPressure();bme.readTemperature()';\r\n    if (dropdown_type == \"A\") code += 'readAltitude()';\r\n\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n//BME280读取\r\nexport const ke_BMP280_READ = function (_, generator) {\r\n    var TYPE = this.getFieldValue('TYPE');\r\n    var address = generator.valueToCode(this, 'address', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_SPI'] = '#include <SPI.h>';\r\n    generator.definitions_['include_Adafruit_Sensor'] = '#include <Adafruit_Sensor.h>';\r\n    if (TYPE == \"bme\") {\r\n        generator.definitions_['include_Adafruit_BME280'] = '#include <Adafruit_BME280.h>';\r\n        generator.definitions_['var_declare_Adafruit_BME280'] = 'Adafruit_BME280 bme;';\r\n\r\n    }\r\n    else {\r\n        generator.definitions_['include_Adafruit_BME280'] = '#include <Adafruit_BMP280.h>';\r\n        generator.definitions_['var_declare_Adafruit_BME280'] = 'Adafruit_BMP280 bmp;';\r\n    }\r\n    generator.setups_['setup_status'] = 'unsigned status;\\n  status = ' + TYPE + '.begin(' + address + ');';\r\n    generator.definitions_['include_SEALEVELPRESSURE_HPA'] = '#define SEALEVELPRESSURE_HPA (1013.25)';\r\n    var code = this.getFieldValue('BME_TYPE');\r\n    return [TYPE + \".\" + code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n//传感器-重力感应块-获取数据\r\nexport const ke_adxl345 = function (_, generator) {\r\n    generator.definitions_['include_ADXL345'] = '#include <ADXL345.h>';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_I2Cdev'] = '#include <I2Cdev.h>';\r\n    generator.definitions_['var_ADXL345'] = 'ADXL345 accel;';\r\n    generator.setups_['setup_ADXL345-A'] = 'Wire.begin();';\r\n    generator.setups_['setup_ADXL345-B'] = 'accel.initialize();';\r\n    var dropdown_type = this.getFieldValue('ADXL345_PIN');\r\n    var code = '';\r\n    if (dropdown_type == \"xa\") code += 'accel.X_angle()';\r\n    if (dropdown_type == \"ya\") code += 'accel.Y_angle()';\r\n    if (dropdown_type == \"x\") code += 'accel.getAccelerationX()';\r\n    if (dropdown_type == \"y\") code += 'accel.getAccelerationY()';\r\n    if (dropdown_type == \"z\") code += 'accel.getAccelerationZ()';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n\r\n//传感器-MPU6050-获取数据\r\nexport const ke_MPU6050 = function (_, generator) {\r\n    generator.definitions_['includeMPU6050'] = '#include <MPU6050.h>';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['var_declare_MPU6050'] = 'MPU6050 mpu;';\r\n    generator.setups_['setup_ngyro'] = 'mpu.begin(MPU6050_SCALE_2000DPS, MPU6050_RANGE_2G);';\r\n    var MPU6050_TYPE = this.getFieldValue('MPU6050_TYPE');\r\n    var code = MPU6050_TYPE;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n//传感器-MPU6050-更新数据\r\nexport const ke_MPU6050_update = function () {\r\n    var code = 'Vector normAccel = mpu.readNormalizeAccel();\\nVector normGyro = mpu.readNormalizeGyro();\\n';\r\n    return code;\r\n};\r\n\r\n\r\n///////////////////////BMP180温度大气压/////////////////////////////\r\nexport const ke_bmp180 = function (_, generator) {\r\n    generator.definitions_['define_bmp180'] = '#define BMP180ADD 0xEE>>1';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['char_OSS'] = 'unsigned char OSS;';\r\n    generator.definitions_['int'] = 'int ac1,ac2,ac3,b1,b2,mb,mc,md;';\r\n    generator.definitions_['unsight_int'] = 'unsigned int ac4,ac5,ac6;';\r\n    generator.definitions_['float'] = 'float temperature;';\r\n    generator.definitions_['double'] = 'double pressure,pressure2,altitude;';\r\n    generator.definitions_['long'] = 'long b5;';\r\n\r\n    //generator.definitions_['calculate'] = 'void calculate()\\n{\\n  temperature = bmp180GetTemperature(bmp180ReadUT());\\ntemperature = temperature*0.1;\\npressure = bmp180GetPressure(bmp180ReadUP());\\npressure2 = pressure/101325;\\npressure2 = pow(pressure2,0.19029496);\\naltitude = 44330*(1-pressure2);\\n}';\r\n\r\n    //generator.definitions_['show'] = 'void show()\\n{\\n  Serial.print(\"Temperature: \");\\nSerial.print(temperature, 1);\\nSerial.println(\" C\");\\nSerial.print(\"Pressure: \");\\nSerial.print(pressure, 0);\\nSerial.println(\" Pa\");\\nSerial.print(\"altitude:\");\\nSerial.print(altitude);\\nSerial.println(\"m\");\\n}';\r\n\r\n    generator.definitions_['BMP180start'] = 'void BMP180start()\\n{\\nac1 = bmp180ReadDate(0xAA);\\nac2 = bmp180ReadDate(0xAC);\\nac3 = bmp180ReadDate(0xAE);\\nac4 = bmp180ReadDate(0xB0);\\nac5 = bmp180ReadDate(0xB2);\\nac6 = bmp180ReadDate(0xB4);\\nb1  = bmp180ReadDate(0xB6);\\nb2  = bmp180ReadDate(0xB8);\\nmb  = bmp180ReadDate(0xBA);\\nmc  = bmp180ReadDate(0xBC);\\nmd  = bmp180ReadDate(0xBE);\\n}';\r\n\r\n    generator.definitions_['bmp180GetTemperature'] = 'short bmp180GetTemperature(unsigned int ut)\\n{\\nlong x1, x2;\\nx1 = (((long)ut - (long)ac6)*(long)ac5) >> 15;\\nx2 = ((long)mc << 11)/(x1 + md);\\nb5 = x1 + x2;\\nreturn ((b5 + 8)>>4);\\n}';\r\n\r\n    generator.definitions_['bmp180GetPressure'] = 'long bmp180GetPressure(unsigned long up)\\n{\\nlong x1, x2, x3, b3, b6, p;\\nunsigned long b4, b7;\\nb6 = b5 - 4000;\\nx1 = (b2 * (b6 * b6)>>12)>>11;\\nx2 = (ac2 * b6)>>11;\\nx3 = x1 + x2;\\nb3 = (((((long)ac1)*4 + x3)<<OSS) + 2)>>2;\\nx1 = (ac3 * b6)>>13;\\nx2 = (b1 * ((b6 * b6)>>12))>>16;\\nx3 = ((x1 + x2) + 2)>>2;\\nb4 = (ac4 * (unsigned long)(x3 + 32768))>>15;\\nb7 = ((unsigned long)(up - b3) * (50000>>OSS));\\nif (b7 < 0x80000000)\\n  p = (b7<<1)/b4;\\nelse\\n  p = (b7/b4)<<1;\\nx1 = (p>>8) * (p>>8);\\nx1 = (x1 * 3038)>>16;\\nx2 = (-7357 * p)>>16;\\np += (x1 + x2 + 3791)>>4;\\nreturn p;\\n}';\r\n\r\n    generator.definitions_['bmp180Read'] = 'int bmp180Read(unsigned char address)\\n{\\nunsigned char data;\\nWire.beginTransmission(BMP180ADD);\\nWire.write(address);\\nWire.endTransmission();\\nWire.requestFrom(BMP180ADD, 1);\\nwhile(!Wire.available());\\nreturn Wire.read();\\n}';\r\n\r\n    generator.definitions_['bmp180ReadDate'] = 'int bmp180ReadDate(unsigned char address)\\n{\\nunsigned char msb, lsb;\\nWire.beginTransmission(BMP180ADD);\\nWire.write(address);\\nWire.endTransmission();\\nWire.requestFrom(BMP180ADD, 2);\\nwhile(Wire.available()<2);\\nmsb = Wire.read();\\nlsb = Wire.read();\\nreturn (int) msb<<8 | lsb;\\n}';\r\n\r\n    generator.definitions_['bmp180ReadUT'] = 'unsigned int bmp180ReadUT()\\n{\\nunsigned int ut;\\nWire.beginTransmission(BMP180ADD);\\nWire.write(0xF4);\\nWire.write(0x2E);\\nWire.endTransmission();\\ndelay(5);\\nut = bmp180ReadDate(0xF6);\\nreturn ut;\\n}';\r\n\r\n    generator.definitions_['bmp180ReadUP'] = 'unsigned long bmp180ReadUP()\\n{\\nunsigned char msb, lsb, xlsb;\\nunsigned long up = 0;\\nWire.beginTransmission(BMP180ADD);\\nWire.write(0xF4);\\nWire.write(0x34 + (OSS<<6));\\nWire.endTransmission();\\ndelay(2 + (3<<OSS));\\nWire.beginTransmission(BMP180ADD);\\nWire.write(0xF6);\\nWire.endTransmission();\\nWire.requestFrom(BMP180ADD, 3);\\nwhile(Wire.available() < 3);\\nmsb = Wire.read();\\nlsb = Wire.read();\\nxlsb = Wire.read();\\nup = (((unsigned long) msb << 16) | ((unsigned long) lsb << 8) | (unsigned long) xlsb) >> (8-OSS);\\nreturn up;\\n}';\r\n\r\n    generator.definitions_['temperature1'] = 'float temperature1()\\n{\\ntemperature = bmp180GetTemperature(bmp180ReadUT());\\ntemperature = temperature*0.1;\\nreturn temperature;\\n}';\r\n\r\n    generator.definitions_['pressure1'] = 'double pressure1()\\n{\\nbmp180GetTemperature(bmp180ReadUT());\\npressure = bmp180GetPressure(bmp180ReadUP());\\nreturn pressure;\\n}\\n'\r\n\r\n    generator.definitions_['altitude1'] = 'double altitude1()\\n{\\nbmp180GetTemperature(bmp180ReadUT());\\npressure = bmp180GetPressure(bmp180ReadUP());\\npressure2 = pressure/101325;\\npressure2 = pow(pressure2,0.19029496);\\naltitude = 44330*(1-pressure2);\\nreturn altitude;\\n}\\n'\r\n\r\n    generator.setups_['wire.begin'] = 'Wire.begin();';\r\n    generator.setups_['OSS'] = 'OSS = 2;';\r\n    generator.setups_['BMP180start'] = 'BMP180start();';\r\n\r\n\r\n    var dropdown_type = this.getFieldValue('BMP180_PIN');\r\n    var code = '';\r\n\r\n    if (dropdown_type == \"T\") code += 'temperature1()';\r\n    if (dropdown_type == \"P\") code += 'pressure1()';\r\n    if (dropdown_type == \"A\") code += 'altitude1()';\r\n    //return code;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n/////////////////////////////DS3231时钟/////////////////////////////\r\nexport const ke_ds3231 = function (_, generator) {\r\n    var RTCName = this.getFieldValue('RTCName');\r\n    var year = generator.valueToCode(this, \"year\", generator.ORDER_ATOMIC);\r\n    var month = generator.valueToCode(this, \"month\", generator.ORDER_ATOMIC);\r\n    var day = generator.valueToCode(this, \"day\", generator.ORDER_ATOMIC);\r\n    var dow = generator.valueToCode(this, \"dow\", generator.ORDER_ATOMIC)\r\n    var hour = generator.valueToCode(this, \"hour\", generator.ORDER_ATOMIC);\r\n    var minute = generator.valueToCode(this, \"minute\", generator.ORDER_ATOMIC);\r\n    var second = generator.valueToCode(this, \"second\", generator.ORDER_ATOMIC);\r\n\r\n\r\n    generator.definitions_['include_DS3231_h'] = '#include <DS3231.h>';\r\n    generator.definitions_['DS3231'] = 'DS3231  ' + RTCName + '(A4, A5);';\r\n\r\n    generator.setups_['begin1'] = '' + RTCName + '.begin();';\r\n    generator.setups_['setDOW'] = '' + RTCName + '.setDOW(' + dow + ');';\r\n    generator.setups_['setTime'] = '' + RTCName + '.setTime(' + hour + ', ' + minute + ', ' + second + ');';\r\n    generator.setups_['setDate'] = '' + RTCName + '.setDate(' + day + ', ' + month + ', ' + year + ');';\r\n\r\n    var code = 'Serial.print(' + RTCName + '.getDOWStr());\\nSerial.print(\" \");\\nSerial.print(' + RTCName + '.getDateStr());\\nSerial.print(\" -- \");\\nSerial.println(' + RTCName + '.getTimeStr());\\ndelay (1000);';\r\n\r\n    return code;\r\n};\r\n\r\n/********************************************\r\nTIME - 时钟模块\r\n  - DS3231\r\n  - DS1307\r\n*********************************************/\r\n// DS3231 real time clock  -- 设置时间\r\nexport const ke_ds3231_SetTime = function (_, generator) {\r\n    generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n    generator.definitions_['include_ds3231'] = '#include \"RtcDS3231.h\"';\r\n    generator.definitions_['var_ds3231'] = 'RtcDS3231<TwoWire> Rtc(Wire);';\r\n    generator.setups_['setup_init_rtc'] = 'Rtc.Begin();\\n';\r\n    var year = generator.valueToCode(this, 'year', generator.ORDER_ATOMIC);\r\n    var month = generator.valueToCode(this, 'month', generator.ORDER_ATOMIC);\r\n    var day = generator.valueToCode(this, 'day', generator.ORDER_ATOMIC);\r\n    var hour = generator.valueToCode(this, 'hour', generator.ORDER_ATOMIC);\r\n    var minute = generator.valueToCode(this, 'minute', generator.ORDER_ATOMIC);\r\n    var second = generator.valueToCode(this, 'second', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_set_time'] = 'Rtc.SetDateTime(RtcDateTime(' + year + ', ' + month + ', '\r\n        + day + ', ' + hour + ', ' + minute + ', ' + second + '));\\n';\r\n    return '';\r\n};\r\n\r\n// DS3231 real time clock  -- 设置当前时间\r\nexport const ke_ds3231_SetTime2 = function (_, generator) {\r\n    generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n    generator.definitions_['include_ds3231'] = '#include \"RtcDS3231.h\"';\r\n    generator.definitions_['var_ds3231'] = 'RtcDS3231<TwoWire> Rtc(Wire);';\r\n    generator.setups_['setup_init_rtc'] = 'Rtc.Begin();\\n';\r\n    generator.setups_['setup_set_time'] = 'Rtc.SetDateTime(RtcDateTime(__DATE__, __TIME__));\\n';\r\n    return '';\r\n};\r\n\r\n// DS3231 real time clock  -- 获取\r\nexport const ke_ds3231_GetTime = function (_, generator) {\r\n    var dropdown_type = this.getFieldValue('TIME_TYPE');\r\n    var code = 'Rtc.GetDateTime().' + dropdown_type + '()';\r\n    // return code;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n\r\n// DS1307 real time clock  -- 设置时间\r\nexport const ke_ds1307_SetTime = function (_, generator) {\r\n    generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n    generator.definitions_['include_ds1307'] = '#include \"RtcDS1307.h\"';\r\n    generator.definitions_['var_ds1307'] = 'RtcDS1307<TwoWire> Rtc(Wire);';\r\n    generator.setups_['setup_init_rtc'] = 'Rtc.Begin();\\n  Rtc.SetIsRunning(true);\\n';\r\n    var year = generator.valueToCode(this, 'year', generator.ORDER_ATOMIC);\r\n    var month = generator.valueToCode(this, 'month', generator.ORDER_ATOMIC);\r\n    var day = generator.valueToCode(this, 'day', generator.ORDER_ATOMIC);\r\n    var hour = generator.valueToCode(this, 'hour', generator.ORDER_ATOMIC);\r\n    var minute = generator.valueToCode(this, 'minute', generator.ORDER_ATOMIC);\r\n    var second = generator.valueToCode(this, 'second', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_set_time'] = 'Rtc.SetDateTime(RtcDateTime(' + year + ', ' + month + ', '\r\n        + day + ', ' + hour + ', ' + minute + ', ' + second + '));\\n';\r\n    return '';\r\n};\r\n\r\n// DS1307 real time clock  -- 设置当前时间\r\nexport const ke_ds1307_SetTime2 = function (_, generator) {\r\n    generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n    generator.definitions_['include_ds1307'] = '#include \"RtcDS1307.h\"';\r\n    generator.definitions_['var_ds1307'] = 'RtcDS1307<TwoWire> Rtc(Wire);';\r\n    generator.setups_['setup_init_rtc'] = 'Rtc.Begin();\\n  Rtc.SetIsRunning(true);\\n';\r\n    generator.setups_['setup_set_time'] = 'Rtc.SetDateTime(RtcDateTime(__DATE__, __TIME__));\\n';\r\n    return '';\r\n};\r\n\r\n// DS1307 real time clock  -- 获取\r\nexport const ke_ds1307_GetTime = function (_, generator) {\r\n    var dropdown_type = this.getFieldValue('TIME_TYPE');\r\n    var code = 'Rtc.GetDateTime().' + dropdown_type + '()';\r\n    // return code;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n// 旋转编码器初始化\r\nexport const sensor_encoder_init = function (_, generator) {\r\n    var dropdownType = this.getFieldValue('TYPE');\r\n    var mode = this.getFieldValue('mode');\r\n    var valueClk = generator.valueToCode(this, 'CLK', generator.ORDER_ATOMIC);\r\n    var valueDt = generator.valueToCode(this, 'DT', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_ESPRotary'] = '#include <ESPRotary.h>';\r\n    generator.definitions_['var_declare_encoder' + dropdownType] = `ESPRotary encoder${dropdownType};`;\r\n    generator.setups_['setup_encoder' + dropdownType] = `encoder${dropdownType}.begin(${valueDt}, ${valueClk});\\n  encoder${dropdownType}.setStepsPerClick(${mode});`;\r\n    generator.loops_begin_['loop_encoder' + dropdownType] = `encoder${dropdownType}.loop();\\n`;\r\n    return '';\r\n};\r\n// 旋转编码器读取\r\nexport const sensor_encoder_get = function (_, generator) {\r\n    var dropdownType = this.getFieldValue('TYPE');\r\n    var dropdownOperateType = this.getFieldValue('OPERATE_TYPE');\r\n    var code = `encoder${dropdownType}.${dropdownOperateType}()`;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n// 旋转编码器设置\r\nexport const sensor_encoder_set = function (_, generator) {\r\n    var dropdownType = this.getFieldValue('TYPE');\r\n    var valueData = generator.valueToCode(this, 'DATA', generator.ORDER_ATOMIC);\r\n    var dropdownOperateType = this.getFieldValue('OPERATE_TYPE');\r\n    var code = `encoder${dropdownType}.${dropdownOperateType}(${valueData});\\n`;\r\n    return code;\r\n};\r\n// 旋转编码器事件\r\nexport const sensor_encoder_handle = function (_, generator) {\r\n    var dropdownType = this.getFieldValue('TYPE');\r\n    var dropdownOperateType = this.getFieldValue('OPERATE_TYPE');\r\n    var statementsDo = generator.statementToCode(this, 'DO');\r\n    var cbFuncName = 'encoder' + dropdownType;\r\n    switch (dropdownOperateType) {\r\n    case 'setChangedHandler':\r\n        cbFuncName += 'OnChanged';\r\n        break;\r\n    case 'setRightRotationHandler':\r\n        cbFuncName += 'OnRightRotation';\r\n        break;\r\n    case 'setLeftRotationHandler':\r\n        cbFuncName += 'OnLeftRotation';\r\n        break;\r\n    case 'setUpperOverflowHandler':\r\n        cbFuncName += 'OnUpperOverflow';\r\n        break;\r\n    case 'setLowerOverflowHandler':\r\n    default:\r\n        cbFuncName += 'OnLowerOverflow';\r\n    }\r\n    generator.definitions_['function_' + cbFuncName] = `void ${cbFuncName}(ESPRotary& encoder${dropdownType}) {\\n`\r\n        + `  ${statementsDo}`\r\n        + `}\\n`;\r\n    generator.setups_['setup_' + cbFuncName] = `encoder${dropdownType}.${dropdownOperateType}(${cbFuncName});`;\r\n    var code = '';\r\n    return code;\r\n};\r\nexport const encoder_button = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    var code = 'digitalRead(' + dropdown_pin + ')';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n/////////////////////遥杆///////////////////////////\r\nexport const ke_joystick = function (_, generator) {\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    generator.setups_['setup_input_' + dropdown_pin] = 'pinMode(' + dropdown_pin + ', INPUT);';\r\n    //var code = 'analogRead('+dropdown_pin+')';\r\n\r\n    var dropdown_type = this.getFieldValue('joy');\r\n    var code = '';\r\n    if (dropdown_type == \"Lx\") code += 'analogRead(' + dropdown_pin + ')';\r\n    if (dropdown_type == \"Ly\") code += 'analogRead(' + dropdown_pin + ')';\r\n    //if (dropdown_type == \"Lz\") code += 'digitalRead('+dropdown_pin+')';\r\n    //if (dropdown_type == \"Rx\") code += 'analogRead('+dropdown_pin+')';\r\n\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n/////////////////遥杆///////////////\r\nexport const ke_joystick_btn = ke_ir_g;\r\n\r\n///////////////////////////pca9685/////////////////\r\nexport const ke_pca9685 = function (_, generator) {\r\n\r\n    var value_pin = generator.valueToCode(this, 'pin', generator.ORDER_ATOMIC);\r\n    var value_pwm = generator.valueToCode(this, 'pwm', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_PWMServoDriver'] = '#include <Adafruit_PWMServoDriver.h>';\r\n\r\n    generator.definitions_['PWMServo'] = 'Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();';\r\n\r\n    generator.definitions_['PWMangle'] = 'void servo_9g_write(uint8_t n,int Angle)\\n{\\n  double pulse = Angle;\\n  pulse = pulse/100+0.5;\\n  setServoPulse(n,pulse); \\n}\\n';\r\n\r\n    generator.definitions_['setServoPulse'] = 'void setServoPulse(uint8_t n, double pulse) \\n {\\n  double pulselength;\\n  pulselength = 1000000;   // 1,000,000 us per second\\n  pulselength /= 50;   // 60 Hz\\n  Serial.print(pulselength); Serial.println(\" us per period\"); \\n  pulselength /= 4096;  // 12 bits of resolution\\n  Serial.print(pulselength); Serial.println(\" us per bit\"); \\n  pulse *= 1000;  // convert to us\\n  pulse /= pulselength;\\n  Serial.println(pulse);\\n  pwm.setPWM(n, 0, pulse);\\n}\\n';\r\n\r\n    //generator.definitions_['pulselen'] = 'uint16_t pulselen ='+value_pwm+';';\r\n\r\n    generator.setups_['setup_begin'] = 'pwm.begin();\\npwm.setPWMFreq(50);\\ndelay(10);\\n';\r\n\r\n    var code = 'servo_9g_write(' + value_pin + ',' + value_pwm + ');\\n';\r\n\r\n    return code;\r\n};\r\n///////////////////////////红外测温传感器/////////////////\r\n//初始化MLX90614红外测温传感器\r\nexport const mlx90614_init = function (_, generator) {\r\n    var value_mlx90614_address = generator.valueToCode(this, 'mlx90614_address', generator.ORDER_ATOMIC);\r\n    var text_mlx90614_name = 'MLX';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_Adafruit_MLX90614'] = '#include <Adafruit_MLX90614.h>';\r\n    generator.definitions_['var_declare_MLX90614_' + text_mlx90614_name] = 'Adafruit_MLX90614 ' + text_mlx90614_name + ' = Adafruit_MLX90614(' + value_mlx90614_address + ');';\r\n    generator.setups_['setup_MLX90614_' + text_mlx90614_name] = '' + text_mlx90614_name + '.begin();';\r\n    var code = '';\r\n    return code;\r\n};\r\n//MLX90614获取数据\r\nexport const mlx90614_get_data = function (_, generator) {\r\n    var text_mlx90614_name = 'MLX';\r\n    var dropdown_mlx90614_data = this.getFieldValue('mlx90614_data');\r\n    var code = '' + text_mlx90614_name + '.' + dropdown_mlx90614_data + '()';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n//////////////////////////颜色传感器//////////////////////////\r\n\r\n//颜色识别传感器库\r\nexport const TCS34725_Get_RGB = function (_, generator) {\r\n    generator.definitions_['include_DFRobot_TCS34725'] = '#include <DFRobot_TCS34725.h>';\r\n    generator.definitions_['var_DFRobot_TCS34725'] = 'DFRobot_TCS34725 tcs34725;\\n';\r\n    // generator.setups_['setup_DFRobot_TCS34725' ] = 'if (tcs34725.begin()) {\\n  Serial.println(\"Found sensor\");\\n} \\nelse { \\nSerial.println(\"No TCS34725 found ... check your connections\");\\nwhile (1);\\n}';\r\n    generator.setups_['setup_DFRobot_TCS34725'] = 'tcs34725.begin();';\r\n    var RGB = this.getFieldValue('DF_TCS34725_COLOR');\r\n    return [RGB, generator.ORDER_ATOMIC];\r\n};\r\n///////////////////////////手势识别传感器/////////////////\r\n//传感器-手势识别-获取数据\r\nexport const ke_Gesture_APDS = function (_, generator) {\r\n    generator.definitions_['include_SparkFun_APDS9960'] = '#include \"SparkFun_APDS9960.h\"';\r\n    generator.definitions_['var_APDS'] = 'SparkFun_APDS9960 apds;';\r\n    generator.setups_['setup_APDS'] = 'apds.init();';\r\n    generator.setups_['setup_APDS1'] = 'apds.enableGestureSensor(true);';\r\n    var code = '';\r\n    code += 'apds.handleGesture()';\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\n//初始化PAJ7620手势传感器\r\nexport const make_arduino_paj7620_begin = function (_, generator) {\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_paj7620'] = '#include \"paj7620.h\"';\r\n    generator.definitions_['define_GES_REACTION_TIME'] = '#define GES_REACTION_TIME    500 ';\r\n    generator.definitions_['define_GES_ENTRY_TIME'] = '#define GES_ENTRY_TIME     800   ';\r\n    generator.definitions_['define_GES_QUIT_TIME'] = '#define GES_QUIT_TIME      1000';\r\n    generator.definitions_['var_gesturesDetection'] = 'int gesturesDetection()\\n'\r\n    + '{\\n'\r\n    + '  uint8_t data = 0, data1 = 0, error;\\n'\r\n    + '  error = paj7620ReadReg(0x43, 1, &data);\\n'\r\n    + '  if (!error)\\n'\r\n    + '  {\\n'\r\n    + '    switch (data)\\n'\r\n    + '    {\\n'\r\n    + '      case GES_RIGHT_FLAG:\\n'\r\n    + '        delay(GES_ENTRY_TIME);\\n'\r\n    + '        paj7620ReadReg(0x43, 1, &data);\\n'\r\n    + '        if (data == GES_FORWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 0;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else if (data == GES_BACKWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 1;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else\\n'\r\n    + '        {\\n'\r\n    + '          return 3;\\n'\r\n    + '        }\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_LEFT_FLAG:\\n'\r\n    + '        delay(GES_ENTRY_TIME);\\n'\r\n    + '        paj7620ReadReg(0x43, 1, &data);\\n'\r\n    + '        if (data == GES_FORWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 0;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else if (data == GES_BACKWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 1;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else\\n'\r\n    + '        {\\n'\r\n    + '          return 2;\\n'\r\n    + '        }\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_UP_FLAG:\\n'\r\n    + '        delay(GES_ENTRY_TIME);\\n'\r\n    + '        paj7620ReadReg(0x43, 1, &data);\\n'\r\n    + '        if (data == GES_FORWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 0;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else if (data == GES_BACKWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 1;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else\\n'\r\n    + '        {\\n'\r\n    + '          return 4;\\n'\r\n    + '        }\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_DOWN_FLAG:\\n'\r\n    + '        delay(GES_ENTRY_TIME);\\n'\r\n    + '        paj7620ReadReg(0x43, 1, &data);\\n'\r\n    + '        if (data == GES_FORWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 0;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else if (data == GES_BACKWARD_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 1;\\n'\r\n    + '          delay(GES_QUIT_TIME);\\n'\r\n    + '        }\\n'\r\n    + '        else\\n'\r\n    + '        {\\n'\r\n    + '          return 5;\\n'\r\n    + '        }\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_FORWARD_FLAG:\\n'\r\n    + '        return 0;\\n'\r\n    + '        delay(GES_QUIT_TIME);\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_BACKWARD_FLAG:\\n'\r\n    + '        return 1;\\n'\r\n    + '        delay(GES_QUIT_TIME);\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_CLOCKWISE_FLAG:\\n'\r\n    + '        return 6;\\n'\r\n    + '        break;\\n'\r\n    + '      case GES_COUNT_CLOCKWISE_FLAG:\\n'\r\n    + '        return 7;\\n'\r\n    + '        break;\\n'\r\n    + '      default:\\n'\r\n    + '        paj7620ReadReg(0x44, 1, &data1);\\n'\r\n    + '        if (data1 == GES_WAVE_FLAG)\\n'\r\n    + '        {\\n'\r\n    + '          return 8;\\n'\r\n    + '        }\\n'\r\n    + '        break;\\n'\r\n    + '    }\\n'\r\n    + '  }\\n'\r\n    + '  return -1;\\n'\r\n    + '}\\n'\r\n    generator.setups_['setup_paj7620'] = 'paj7620Init();';\r\n    var code = 'int gesturesNum = gesturesDetection();\\n';\r\n    return code;\r\n};\r\n//PAJ7620手势传感器读取手势\r\nexport const make_arduino_paj7620_ReadReg = function (_, generator) {\r\n    var data = this.getFieldValue('data');\r\n    var code = 'gesturesNum == '+data;\r\n    return [code, generator.ORDER_ATOMIC];\r\n};\r\nexport const BMP388_INIT = function (_, generator) {\r\n    generator.definitions_['include_bmp388_init'] = '#include <BMP388.h>';\r\n    generator.definitions_['bmp388_var'] = 'int32_t s32PressureVal = 0, s32TemperatureVal = 0, s32AltitudeVal = 0;\\n';\r\n    generator.setups_['getAddress'] = 'bool bRet;\\n'\r\n    + '  PRESS_EN_SENSOR_TYPY enPressureType;\\n'\r\n    + '  pressSensorInit( &enPressureType );\\n'\r\n    + '  if(PRESS_EN_SENSOR_TYPY_BMP388 == enPressureType)\\n'\r\n    + '  {\\n'\r\n    + '    Serial.println(\"Pressure sersor is BMP388\");\\n'\r\n    + '  }\\n'\r\n    + '  else\\n'\r\n    + '  {\\n'\r\n    + '   Serial.println(\"Pressure sersor NULL\");\\n'\r\n    + '  }\\n';\r\n\r\n    return ' pressSensorDataGet(&s32TemperatureVal, &s32PressureVal, &s32AltitudeVal);\\n';\r\n};\r\nexport const BMP388_READ = function (_, generator) {\r\n    const unit = this.getFieldValue('unit');\r\n    return [`${unit}`, generator.ORDER_ATOMIC];\r\n};\r\nexport const TFT_SD_init = function(_, generator) {\r\n    generator.definitions_['include_'+'LIB1'] = '#include <Adafruit_GFX.h>\\n #include <Adafruit_ST7735.h>\\n #include <SD.h>\\n #include <SPI.h>\\n #if defined(__SAM3X8E__)\\n     #undef __FlashStringHelper::F(string_literal)\\n     #define F(string_literal) string_literal\\n #endif\\n #define SD_CS    7  \\n #define TFT_CS  8  \\n #define TFT_DC   10  \\n #define TFT_RST  9  \\n   Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);\\n   #define BUFFPIXEL 20\\n';\r\n    generator.definitions_['var_declare_'+'TFT_SD'] = 'void bmpDraw(char *filename, uint8_t x, uint8_t y) {\\n   File     bmpFile;\\n   int      bmpWidth, bmpHeight;   \\n   uint8_t  bmpDepth;              \\n   uint32_t bmpImageoffset;        \\n   uint32_t rowSize;               \\n   uint8_t  sdbuffer[3*BUFFPIXEL]; \\n   uint8_t  buffidx = sizeof(sdbuffer); \\n   boolean  goodBmp = false;       \\n   boolean  flip    = true;        \\n   int      w, h, row, col;\\n   uint8_t  r, g, b;\\n   uint32_t pos = 0, startTime = millis();\\n   if((x >= tft.width()) || (y >= tft.height())) return;\\n   Serial.println();\\n   Serial.print(\"Loading image\");\\n   Serial.println(filename);\\n   if ((bmpFile = SD.open(filename)) == NULL) {\\n     Serial.print(\"File not found\");\\n     return;\\n   }\\n   if(read16(bmpFile) == 0x4D42) { \\n     Serial.print(\"File size: \"); Serial.println(read32(bmpFile));\\n     (void)read32(bmpFile); \\n     bmpImageoffset = read32(bmpFile); \\n     Serial.print(\"Image Offset: \"); Serial.println(bmpImageoffset, DEC);\\n     Serial.print(\"Header size: \"); Serial.println(read32(bmpFile));\\n     bmpWidth  = read32(bmpFile);\\n     bmpHeight = read32(bmpFile);\\n     if(read16(bmpFile) == 1) { \\n       bmpDepth = read16(bmpFile);\\n       Serial.print(\"Bit Depth: \"); Serial.println(bmpDepth);\\n       if((bmpDepth == 24) && (read32(bmpFile) == 0)) { \\n         goodBmp = true; \\n         rowSize = (bmpWidth * 3 + 3) & ~3;\\n         if(bmpHeight < 0) {\\n           bmpHeight = -bmpHeight;\\n           flip      = false;\\n         }\\n         w = bmpWidth;\\n         h = bmpHeight;\\n         if((x+w-1) >= tft.width())  w = tft.width()  - x;\\n         if((y+h-1) >= tft.height()) h = tft.height() - y;\\n         tft.startWrite();\\n         tft.setAddrWindow(x, y, w, h);\\n         for (row=0; row<h; row++) {\\n           if(flip)\\n             pos = bmpImageoffset + (bmpHeight - 1 - row) * rowSize;\\n           else     \\n             pos = bmpImageoffset + row * rowSize;\\n           if(bmpFile.position() != pos) { \\n             tft.endWrite();\\n             bmpFile.seek(pos);\\n             buffidx = sizeof(sdbuffer); \\n           }\\n           for (col=0; col<w; col++) { \\n             if (buffidx >= sizeof(sdbuffer)) { \\n               bmpFile.read(sdbuffer, sizeof(sdbuffer));\\n               buffidx = 0; \\n               tft.startWrite();\\n             }             r = sdbuffer[buffidx++];\\n             g = sdbuffer[buffidx++];\\n             b = sdbuffer[buffidx++];\\n             tft.pushColor(tft.color565(r,g,b));\\n           } \\n         } \\n         tft.endWrite();\\n         Serial.print(\"Loaded in \");\\n         Serial.print(millis() - startTime);\\n         Serial.println(\" ms\");\\n       }\\n     }\\n   }\\n   bmpFile.close();\\n   if(!goodBmp) Serial.println(\"BMP format not recognized.\");\\n }\\n uint16_t read16(File f) {\\n   uint16_t result;\\n   ((uint8_t *)&result)[0] = f.read(); \\n   ((uint8_t *)&result)[1] = f.read();\\n   return result;\\n }\\n   uint32_t read32(File f) {\\n   uint32_t result;\\n   ((uint8_t *)&result)[0] = f.read(); \\n   ((uint8_t *)&result)[1] = f.read();\\n   ((uint8_t *)&result)[2] = f.read();\\n   ((uint8_t *)&result)[3] = f.read(); \\n   return result;\\n }\\n';\r\n    generator.setups_['SET1'] = '  pinMode(12,INPUT);\\n   Serial.begin(9600); \\n   tft.initR(INITR_GREENTAB);\\n   tft.setRotation(3);\\n   Serial.println(\"OK!\");\\n   tft.fillScreen(ST7735_BLACK);\\n';\r\n    var code = '';\r\n    return code;\r\n};\r\nexport const TFT_SD_display = function(_, generator) {\r\n    var value_SD_TUPIAN = generator.valueToCode(this, 'SD_TUPIAN', generator.ORDER_ATOMIC);\r\n    var value_SD_X = generator.valueToCode(this, 'SD_X', generator.ORDER_ATOMIC);\r\n    var value_SD_Y = generator.valueToCode(this, 'SD_Y', generator.ORDER_ATOMIC);\r\n    var code = '    Serial.print(\"Initializing SD card...\");\\n     if (!SD.begin(SD_CS)) {\\n       Serial.println(\"failed!\");\\n       tft.setTextSize(2);\\n       tft.fillScreen(ST7735_BLACK);\\n       tft.setCursor(0, 0);\\n       tft.setTextColor(ST7735_BLUE);\\n       tft.print(\"SD Card init error!\");\\n       return;\\n     }\\n'\r\n               + 'bmpDraw('\r\n               + value_SD_TUPIAN\r\n               + ','\r\n               + value_SD_X\r\n               + ','\r\n               + value_SD_Y\r\n               + ');';\r\n    return code;\r\n};\r\n////////////////////////////////////////////////////\r\n//////////////////////////显示屏///////////////////\r\n///////////////////////////RGB灯/////////////////\r\nexport const ke_rgb2812 = function (_, generator) {\r\n    var dropdown_rgbpin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var value_led = generator.valueToCode(this, 'num01', generator.ORDER_ATOMIC);\r\n    var value_rvalue = generator.valueToCode(this, 'red', generator.ORDER_ATOMIC);\r\n    var value_gvalue = generator.valueToCode(this, 'green', generator.ORDER_ATOMIC);\r\n    var value_bvalue = generator.valueToCode(this, 'blue', generator.ORDER_ATOMIC);\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_Adafruit_NeoPixel'] = '#include <Adafruit_NeoPixel.h>';\r\n    if (!generator.definitions_['var_rgb_display' + dropdown_rgbpin]) {\r\n        generator.definitions_['var_rgb_display' + dropdown_rgbpin] = 'Adafruit_NeoPixel  rgb_display_' + dropdown_rgbpin + '' + '(8);';\r\n        generator.setups_['setup_rgb_display_begin_' + dropdown_rgbpin] = 'rgb_display_' + dropdown_rgbpin + '.begin();';\r\n        generator.setups_['setup_rgb_display_setpin' + dropdown_rgbpin] = 'rgb_display_' + dropdown_rgbpin + '.setPin(' + dropdown_rgbpin + ');';\r\n    }\r\n\r\n    var code = 'rgb_display_' + dropdown_rgbpin + '.setPixelColor(' + value_led + '-1, ' + value_rvalue + ',' + value_gvalue + ',' + value_bvalue + ');\\n';\r\n    code += 'rgb_display_' + dropdown_rgbpin + '.show();\\n';\r\n    return code;\r\n};\r\n\r\n//TM1650 4 digital display  -- 初始化\r\nexport const ke_4digitdisplay_init = function (_, generator) {\r\n    var CLK = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC || '10');\r\n    var DIO = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC || '11');\r\n    generator.definitions_['include_TM1650'] = '#include \"KETM1650.h\"';\r\n    generator.definitions_['var_display_4display'] = 'KETM1650 tm_4display(' + CLK + ',' + DIO + ');';\r\n    generator.setups_['setup_tm1637_init'] = 'tm_4display.init();\\n';\r\n    return '';\r\n};\r\n\r\n// TM1650 4 digital display  -- 开关 清屏\r\nexport const ke_4digitdisplay_power = function () {\r\n    var stat = this.getFieldValue(\"STAT\");\r\n    return 'tm_4display.' + stat + '();\\n';\r\n}\r\n\r\n// TM1650 4 digital display  -- 显示字符串\r\nexport const ke_4digitdisplay_displayString = function (_, generator) {\r\n    // var value = generator.valueToCode(this, 'VALUE', generator.ORDER_ATOMIC);\r\n    var value = generator.valueToCode(this, 'VALUE', generator.ORDER_ATOMIC) || '\"\"';\r\n    return 'tm_4display.displayString(' + value + ');\\n';\r\n}\r\n\r\n// TM1650 4 digital display  -- 显示数字\r\nexport const ke_4digitdisplay_displayNumber = function (_, generator) {\r\n    // var pos = generator.valueToCode(this, 'POS', generator.ORDER_ATOMIC);\r\n    var value = generator.valueToCode(this, 'VALUE', generator.ORDER_ATOMIC);\r\n    // generator.definitions_['value_buf'] = 'char buf[5];';\r\n    // return 'snprintf_P(buf, sizeof(buf), PSTR(\"%u\"), '+value+');\\n'\r\n    //  + 'tm_4display.displayString(buf);\\n';\r\n    return 'tm_4display.displayString(' + value + ');\\n';\r\n}\r\n\r\n// TM1650 4 digital display  -- 小数点显示\r\nexport const ke_4digitdisplay_showDot = function (_, generator) {\r\n    //var no=this.getFieldValue(\"NO\");\r\n    var dotNum = generator.valueToCode(this, 'DOTNUM', generator.ORDER_ASSIGNMENT) || '2';\r\n    var stat = this.getFieldValue(\"STAT\");\r\n    return 'tm_4display.setDot(' + dotNum + '-1 ,' + stat + ');\\n';\r\n}\r\n\r\n// TM1650 4 digital display  -- 设置亮度\r\nexport const ke_4digitdisplay_Brightness = function (_, generator) {\r\n    var brightness = generator.valueToCode(this, 'brightness', generator.ORDER_ASSIGNMENT) || '8';\r\n    var code = 'tm_4display.setBrightness(' + brightness + ');\\n';\r\n    return code;\r\n};\r\n\r\n// TM1650 4 digital display  -- 时钟模式\r\nexport const ke_4digitdisplay_Time = function (_, generator) {\r\n    var time_hour = generator.valueToCode(this, 'time_hour', generator.ORDER_ASSIGNMENT);\r\n    var time_minute = generator.valueToCode(this, 'time_minute', generator.ORDER_ASSIGNMENT);\r\n    var time_second = this.getFieldValue('STAT');\r\n    generator.definitions_['value_buf'] = 'char buf[5];';\r\n    var code = 'snprintf_P(buf, sizeof(buf), PSTR(\"%02u%02u\"), ' + time_hour + ', ' + time_minute + ');\\n'\r\n        + 'tm_4display.displayString(buf);\\n';\r\n    if (time_second == 'displaySEC_BLINK') {\r\n        code += 'tm_4display.setDot(1,true);\\n' + 'delay(500);\\n' + 'tm_4display.setDot(1,false);\\n' + 'delay(500);\\n';\r\n    } else if (time_second == 'displaySEC_ON') {\r\n        generator.setups_['setup_display_4display_init'] = 'tm_4display.setDot(1,true);\\n';\r\n    }\r\n    return code;\r\n};\r\n\r\n/*\r\nexport const ke_display_TM1637_init = function (_, generator) {\r\n tm1637_CLK = this.getFieldValue('CLK');\r\n tm1637_DIO = this.getFieldValue('DIO');\r\n generator.definitions_['include_SevenSegmentTM1637'] = '#include <SevenSegmentTM1637.h>';\r\n generator.definitions_['var_declare_SevenSegmentTM1637'] = 'SevenSegmentTM1637  display(' + tm1637_CLK + ',' + tm1637_DIO + ');';\r\n generator.setups_['setup_ display.begin()'] = ' display.begin();';\r\n return '';\r\n};\r\n\r\nexport const ke_display_TM1637_displyPrint = function (_, generator) {\r\n    //var Speed = generator.valueToCode(this, 'Speed', generator.ORDER_ATOMIC);\r\n    var VALUE = generator.valueToCode(this, 'VALUE', generator.ORDER_ATOMIC);\r\n    var code = 'display.print(' + VALUE + ');' + '\\n';\r\n    return code;\r\n  };\r\n\r\n  export const ke_display_TM1637_displayTime = function (_, generator) {\r\n    generator.definitions_['include_SevenSegmentExtended'] = '#include <SevenSegmentExtended.h>';\r\n    generator.definitions_['var_declare_SevenSegmentTM1637'] = 'SevenSegmentExtended  display(' + tm1637_CLK + ',' + tm1637_DIO + ');';\r\n    var hour = generator.valueToCode(this, 'hour', generator.ORDER_ATOMIC);\r\n    var minute = generator.valueToCode(this, 'minute', generator.ORDER_ATOMIC);\r\n    var dropdown_stat = this.getFieldValue(\"STAT\");\r\n    var code = 'display.printTime(' + hour + ',' + minute +','+dropdown_stat+');\\n';\r\n    return code;\r\n  };\r\n\r\n  export const ke_display_TM1637_clearDisplay = function (_, generator) {\r\n    var stat=this.getFieldValue(\"STAT\");\r\n    return 'display.'+stat+'();\\n';\r\n  };\r\n\r\n  export const ke_display_TM1637_Brightness = function (_, generator) {\r\n    var BRIGHTNESS = generator.valueToCode(this, 'Brightness', generator.ORDER_ATOMIC);\r\n    var code = 'display.setBacklight(' + BRIGHTNESS + ');\\n';\r\n    return code;\r\n  };\r\n\r\n////////////////////////////TM1637数码管初始化//////////////////////////\r\nexport const ke_tm1637_init = function(){\r\n  var CLK = generator.valueToCode(this, 'PIN1',generator.ORDER_ATOMIC);\r\n  var DIO = generator.valueToCode(this, 'PIN2',generator.ORDER_ATOMIC);\r\n\r\n  generator.definitions_['include_TM1637.h'] = '#include <TM1637.h>';\r\n  generator.definitions_['TM1637'] = 'TM1637 TM('+CLK+', '+DIO+');';\r\n  return '';\r\n};\r\n\r\n///////////////////////////TM1637数码管自定义显示/////////////////\r\nexport const ke_tm1637_dy = function(){\r\n  var num = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n  //var tc = generator.valueToCode(this, 'tc', generator.ORDER_ATOMIC);\r\n  var weishu = generator.valueToCode(this, 'weishu', generator.ORDER_ATOMIC);\r\n  var wei = generator.valueToCode(this, 'wei', generator.ORDER_ATOMIC);\r\n  var code = 'TM.cls();\\nTM.Num('+num+',0,'+weishu+','+wei+');'+'\\n';\r\n  return code;\r\n};\r\n\r\n///////////////////////////TM1637数码管自定义显示是否填充/////////////////\r\nexport const ke_tm1637_tc = function(){\r\n  var num = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n  //var tc = generator.valueToCode(this, 'tc', generator.ORDER_ATOMIC);\r\n  var tc = generator.valueToCode(this, '0and1', generator.ORDER_ATOMIC);\r\n  var code = 'TM.cls();\\nTM.Num('+num+','+tc+');'+'\\n';\r\n  return code;\r\n};\r\n\r\n///////////////////////////TM1637数码管亮度/////////////////\r\nexport const ke_tm1637_ld = function(){\r\n  var num = generator.valueToCode(this, 'num', generator.ORDER_ATOMIC);\r\n  var code = 'TM.BL('+num+');'+'\\n';\r\n  return code;\r\n};\r\n\r\n\r\n///////////////////////////TM1637数码管是否隐藏/////////////////\r\nexport const ke_tm1637_yc = function(){\r\n  var bool = generator.valueToCode(this, 'BOOL', generator.ORDER_ATOMIC);\r\n  var code = 'TM.show('+bool+');'+'\\n';\r\n  return code;\r\n};\r\n\r\n///////////////////////////TM1637数码管是否显示冒号////////////////\r\nexport const ke_tm1637_mh = function(){\r\n  var bool = generator.valueToCode(this, 'BOOL', generator.ORDER_ATOMIC);\r\n  var num1 = generator.valueToCode(this, 'num1', generator.ORDER_ATOMIC);\r\n  var num2 = generator.valueToCode(this, 'num2', generator.ORDER_ATOMIC);\r\n\r\n\r\n  var code = 'TM.DNum('+num1+','+num2+','+bool+');'+'\\n';\r\n  return code;\r\n};\r\n*/\r\n\r\n\r\n////////////////////////1602LCD无IIC///////////////////////////\r\nexport const ke_1602lcd_w = function (_, generator) {\r\n    var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n\r\n\r\n    generator.definitions_['DRE'] = 'int DI = 12,RW = 11,Enable = 2;';\r\n    generator.definitions_['DB'] = 'int DB[] = {3, 4, 5, 6, 7, 8, 9, 10};';\r\n    generator.definitions_['STR'] = 'char *string = \"0\";';\r\n    generator.definitions_['LcdCommandWrite'] = 'void LcdCommandWrite(int value) \\n{\\nint i = 0;\\nfor (i=DB[0]; i <= DI; i++) \\n{\\ndigitalWrite(i,value & 01);\\nvalue >>= 1;\\n}\\ndigitalWrite(Enable,LOW);\\ndelayMicroseconds(1);\\ndigitalWrite(Enable,HIGH);\\ndelayMicroseconds(1); \\ndigitalWrite(Enable,LOW);\\ndelayMicroseconds(1); \\n}\\n';\r\n    generator.definitions_['LcdDataWrite'] = 'void LcdDataWrite(int value) \\n{\\nint i = 0;\\ndigitalWrite(DI, HIGH); \\ndigitalWrite(RW, LOW); \\nfor (i=DB[0]; i <= DB[7]; i++) \\n{\\ndigitalWrite(i,value & 01);\\nvalue >>= 1;\\n}\\ndigitalWrite(Enable,LOW);  \\ndelayMicroseconds(1);\\ndigitalWrite(Enable,HIGH); \\ndelayMicroseconds(1);\\ndigitalWrite(Enable,LOW); \\ndelayMicroseconds(1); \\n}\\n';\r\n    //generator.definitions_['LcdStringWrite'] = 'void LcdStringWrite(char *a)\\n{\\nfor(int i = 0;i < 14; i++)\\n{\\nif(*(a+i) == '\\0')\\n {\\nbreak;\\n}\\nLcdDataWrite(*(a+i));\\n}\\n}\\n';\r\n    generator.definitions_['lsw'] = 'void LcdStringWrite(char *a)\\n{\\nfor(int i = 0;i < strlen(a); i++){\\nLcdDataWrite(*(a+i));\\n}\\n}\\n';\r\n\r\n    generator.setups_['setup_lcd'] = 'int i = 0;\\nfor (i=Enable; i <= DI; i++) \\n{\\n    pinMode(i,OUTPUT);\\n}\\ndelay(100);\\nLcdCommandWrite(0x38);\\ndelay(64);  \\nLcdCommandWrite(0x38); \\ndelay(50);  \\nLcdCommandWrite(0x38); \\ndelay(20);  \\nLcdCommandWrite(0x06); \\ndelay(20);  \\nLcdCommandWrite(0x0E);\\ndelay(20);  \\nLcdCommandWrite(0x01);  \\ndelay(100); \\nLcdCommandWrite(0x80); \\ndelay(20);  \\n';\r\n\r\n    var code = 'LcdCommandWrite(0x01); \\ndelay(10); \\nLcdCommandWrite(0x80+0); \\ndelay(10); \\nstring = ' + str1 + ';\\nLcdStringWrite(string);\\ndelay(10);\\nLcdCommandWrite(0xc0+0); \\n string = ' + str2 + ';\\nLcdStringWrite(string);\\ndelay(10);\\ndelay(300);';\r\n\r\n    return code;\r\n};\r\n\r\n\r\nexport const ke_1602lcd_init = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var TYPE = this.getFieldValue('TYPE');\r\n    var device = generator.valueToCode(this, 'address', generator.ORDER_ATOMIC) || '0x27';\r\n    generator.definitions_['include_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['include_LiquidCrystal_I2C'] = '#include <LiquidCrystal_I2C.h>';\r\n    generator.definitions_['var_LiquidCrystal_I2C_' + varName] = 'LiquidCrystal_I2C ' + varName + '(' + device + ',' + TYPE + ');';\r\n    return '';\r\n};\r\n\r\nexport const ke_1602lcd = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var str1 = generator.valueToCode(this, 'TEXT', generator.ORDER_ATOMIC) || '\"\"';\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || '\"\"';\r\n    //var str3 = generator.valueToCode(this, 'TEXT3', generator.ORDER_ATOMIC) || '\"\"';\r\n    //var str4 = generator.valueToCode(this, 'TEXT4', generator.ORDER_ATOMIC) || '\"\"';\r\n    if (generator.definitions_['var_LiquidCrystal_SoftI2C_' + varName] || generator.definitions_['var_LiquidCrystal_I2C_' + varName]) {\r\n        generator.setups_['setup_lcd_init_' + varName] = varName + '.init();';\r\n        generator.setups_['setup_lcd_backlight_' + varName] = varName + '.backlight();';\r\n    }\r\n    var code = varName + '.setCursor(0, 0);\\n'\r\n    code += varName + '.print(' + str1 + ');\\n';\r\n    code += varName + '.setCursor(0, 1);\\n';\r\n    code += varName + '.print(' + str2 + ');\\n';\r\n    //code+=varName+'.setCursor(0, 2);\\n';\r\n    //code+=varName+'.print('+str3+');\\n';\r\n    //code+=varName+'.setCursor(0, 3);\\n';\r\n    //code+=varName+'.print('+str4+');\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_1602lcd_print2 = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var str = generator.valueToCode(this, 'TEXT', generator.ORDER_ATOMIC) || 'String(\"\")';\r\n    var row = generator.valueToCode(this, 'row', generator.ORDER_ATOMIC) || '1';\r\n    var column = generator.valueToCode(this, 'column', generator.ORDER_ATOMIC) || '1';\r\n    if (generator.definitions_['var_LiquidCrystal_SoftI2C_' + varName] || generator.definitions_['var_LiquidCrystal_I2C_' + varName]) {\r\n        generator.setups_['setup_lcd_init_' + varName] = varName + '.init();';\r\n        generator.setups_['setup_lcd_backlight_' + varName] = varName + '.backlight();';\r\n    }\r\n    var code = varName + '.setCursor(' + column + '-1, ' + row + '-1);\\n'\r\n    code += varName + '.print(' + str + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_1602lcd_left = function () {\r\n    var varName = this.getFieldValue('VAR');\r\n    var code = '' + varName + '.scrollDisplayLeft();\\n'\r\n    return code;\r\n};\r\n\r\nexport const ke_1602lcd_right = function () {\r\n    var varName = this.getFieldValue('VAR');\r\n    var code = '' + varName + '.scrollDisplayRight();\\n'\r\n    return code;\r\n};\r\n\r\n\r\n////////////////////////1602LCD///////////////////////////\r\n/*export const ke_1602lcd = function() {\r\n  var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n  var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n  var dropdown_stat = this.getFieldValue('STAT');\r\n  //var bool = generator.valueToCode(this, 'BOOL', generator.ORDER_ATOMIC);\r\n  generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n  generator.definitions_['define_lcd'] = '#include <LiquidCrystal_I2C.h>';\r\n  generator.definitions_['var_lcd'] = 'LiquidCrystal_I2C lcd(0x27,16,2);';\r\n  generator.setups_['setup_lcd1'] = 'lcd.init();';\r\n  generator.setups_['setup_lcd2'] = 'lcd.backlight();';\r\n  var code = 'lcd.setCursor(0, 0);\\n'\r\n  code+='lcd.print('+str1+');\\n';\r\n  code+='lcd.setCursor(0, 1);\\n';\r\n  code+='lcd.print('+str2+');\\n';\r\n  return code;\r\n};*/\r\n\r\nexport const ke_1602lcd_clear = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var dropdown_stat = this.getFieldValue('STAT');\r\n    if (generator.definitions_['var_LiquidCrystal_SoftI2C_' + varName] || generator.definitions_['var_LiquidCrystal_I2C_' + varName]) {\r\n        generator.setups_['setup_lcd_init_' + varName] = varName + '.init();';\r\n        generator.setups_['setup_lcd_backlight_' + varName] = varName + '.backlight();';\r\n    }\r\n    var code = varName + '.' + dropdown_stat + '();\\n'\r\n    return code;\r\n};\r\n\r\n////////////////////////1602LCD///////////////////////////\r\n/*export const ke_1602lcd_clear = function() {\r\n\r\n  var code = 'lcd.clear();\\n'\r\n\r\n  return code;\r\n};*/\r\n\r\n\r\nexport const lcd128_init = function (_, generator) {\r\n    //generator.includes_.include_lcd128_init = '#include <lcd.h>\\n';  Mixly没有这条语句\r\n    generator.definitions_['1lcd128_init'] = '#include <lcd.h>\\nlcd Lcd;\\n';\r\n    generator.setups_['lcd128_setup'] = 'Lcd.Init();\\n';\r\n    var code = '';\r\n    return code;\r\n};\r\n\r\n\r\n\r\nexport const lcd128_cursor = function (_, generator) {\r\n    var row = generator.valueToCode(this, 'row', generator.ORDER_ATOMIC);\r\n    var col = generator.valueToCode(this, 'col', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'Lcd.Cursor(' + row + ',' + col + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const lcd128_string = function (_, generator) {\r\n    //var lcd128str = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n    //const lcd128str = generator.valueToCode(block, 'string', generator.ORDER_ATOMIC);\r\n    const lcd128str = generator.valueToCode(this, 'string', generator.ORDER_ATOMIC);\r\n    var code = 'Lcd.Display(' + lcd128str + ');\\n';\r\n    return code;\r\n};\r\n\r\nexport const lcd128_pixel = function (_, generator) {\r\n    const row = generator.valueToCode(this, 'row', generator.ORDER_ATOMIC);\r\n    const col = generator.valueToCode(this, 'col', generator.ORDER_ATOMIC);\r\n    var code = `Lcd.DisplayPixel(${row},${col});\\n`;\r\n    return code;\r\n};\r\n\r\nexport const lcd128_d_pixel = function (_, generator) {\r\n    const row = generator.valueToCode(this, 'row', generator.ORDER_ATOMIC);\r\n    const col = generator.valueToCode(this, 'col', generator.ORDER_ATOMIC);\r\n    var code = `Lcd.ClearPixel(${row},${col});\\n`\r\n    return code;\r\n};\r\n\r\n\r\nexport const lcd128_clear = function () {\r\n    var code = 'Lcd.Clear();\\n'\r\n    return code;\r\n};\r\n\r\n\r\n\r\n\r\n////////////////////////2004LCD///////////////////////////\r\nexport const ke_2004lcd = function (_, generator) {\r\n    var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n    var str3 = generator.valueToCode(this, 'TEXT3', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n    var str4 = generator.valueToCode(this, 'TEXT4', generator.ORDER_ATOMIC) || 'String(\"\")'\r\n\r\n    generator.definitions_['define_i2c'] = '#include <Wire.h>';\r\n    generator.definitions_['define_df_lcd'] = '#include <LiquidCrystal_I2C.h>';\r\n    generator.definitions_['var_df_lcd'] = 'LiquidCrystal_I2C df_lcd(0x27,16,4);';\r\n    generator.setups_['setup_df_lcd1'] = 'df_lcd.init();';\r\n    generator.setups_['setup_df_lcd2'] = 'df_lcd.backlight();';\r\n    var code = 'df_lcd.setCursor(0, 0);\\n'\r\n    code += 'df_lcd.print(' + str1 + ');\\n';\r\n    code += 'df_lcd.setCursor(0, 1);\\n';\r\n    code += 'df_lcd.print(' + str2 + ');\\n';\r\n    code += 'df_lcd.setCursor(0, 2);\\n';\r\n    code += 'df_lcd.print(' + str3 + ');\\n';\r\n    code += 'df_lcd.setCursor(0, 3);\\n';\r\n    code += 'df_lcd.print(' + str4 + ');\\n';\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_init///////////////////////////\r\nexport const ke_OLED_init = function (_, generator) {\r\n    generator.definitions_['define_Wire'] = '#include <Wire.h>';\r\n    generator.definitions_['define_GFX'] = '#include <Adafruit_GFX.h>';\r\n    generator.definitions_['define_SSD1306'] = '#include <Adafruit_SSD1306.h>';\r\n\r\n    generator.definitions_['OLED_RESET'] = '#define OLED_RESET 4';\r\n    generator.definitions_['display'] = 'Adafruit_SSD1306 display(OLED_RESET);';\r\n\r\n    generator.setups_['setup_oled1'] = 'display.begin(SSD1306_SWITCHCAPVCC, 0x3C);';\r\n    generator.setups_['setup_oled2'] = 'display.display();';\r\n    generator.setups_['setup_oled3'] = 'delay(2000);';\r\n    generator.setups_['setup_oled4'] = 'display.clearDisplay();';\r\n\r\n    var code = ''\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_pixel///////////////////////////\r\nexport const ke_OLED_piexl = function (_, generator) {\r\n    var valx = generator.valueToCode(this, 'val_x', generator.ORDER_ATOMIC);\r\n    var valy = generator.valueToCode(this, 'val_y', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawPixel(' + valx + ', ' + valy + ', WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_line///////////////////////////\r\nexport const ke_OLED_line = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawLine(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_drawRect///////////////////////////\r\nexport const ke_OLED_rect = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawRect(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_drawfullRect///////////////////////////\r\nexport const ke_OLED_fullrect = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.fillRect(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', 1);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_roundrect///////////////////////////\r\nexport const ke_OLED_roundrect = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n    var val_round = generator.valueToCode(this, 'val_round', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawRoundRect(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', ' + val_round + ',  WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_fullroundrect///////////////////////////\r\nexport const ke_OLED_fullroundrect = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n    var val_round = generator.valueToCode(this, 'val_round', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.fillRoundRect(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', ' + val_round + ',  WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_drawcircle///////////////////////////\r\nexport const ke_OLED_circle = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_circle', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawCircle(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_drawfillcircle///////////////////////////\r\nexport const ke_OLED_fullcircle = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_circle', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.fillCircle(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_triangle///////////////////////////\r\nexport const ke_OLED_triangle = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n    var valx3 = generator.valueToCode(this, 'val_x3', generator.ORDER_ATOMIC);\r\n    var valy3 = generator.valueToCode(this, 'val_y3', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.drawTriangle(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', ' + valx3 + ', ' + valy3 + ',WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_fulltriangle///////////////////////////\r\nexport const ke_OLED_fulltriangle = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var valx2 = generator.valueToCode(this, 'val_x2', generator.ORDER_ATOMIC);\r\n    var valy2 = generator.valueToCode(this, 'val_y2', generator.ORDER_ATOMIC);\r\n    var valx3 = generator.valueToCode(this, 'val_x3', generator.ORDER_ATOMIC);\r\n    var valy3 = generator.valueToCode(this, 'val_y3', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.fillTriangle(' + valx1 + ', ' + valy1 + ', ' + valx2 + ', ' + valy2 + ', ' + valx3 + ', ' + valy3 + ',WHITE);\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n////////////////////////oled_string///////////////////////////\r\nexport const ke_OLED_string = function (_, generator) {\r\n    var valx1 = generator.valueToCode(this, 'val_x1', generator.ORDER_ATOMIC);\r\n    var valy1 = generator.valueToCode(this, 'val_y1', generator.ORDER_ATOMIC);\r\n    var val_size = generator.valueToCode(this, 'size', generator.ORDER_ATOMIC);\r\n    var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC);\r\n\r\n    var code = 'display.setTextSize(' + val_size + ');\\n  display.setTextColor(WHITE);\\n  display.setCursor(' + valx1 + ',' + valy1 + ');\\ndisplay.println(' + str1 + ');\\ndisplay.display();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n\r\n\r\n//////////////////////////OLED//////////////////////////////////////\r\nexport const ke_oled = function (_, generator) {\r\n\r\n    var s = generator.valueToCode(this, 'size', generator.ORDER_ATOMIC);\r\n\r\n    var str1 = generator.valueToCode(this, 'TEXT1', generator.ORDER_ATOMIC);\r\n    var str2 = generator.valueToCode(this, 'TEXT2', generator.ORDER_ATOMIC);\r\n    var str3 = generator.valueToCode(this, 'TEXT3', generator.ORDER_ATOMIC);\r\n    var str4 = generator.valueToCode(this, 'TEXT4', generator.ORDER_ATOMIC);\r\n    var code = 'display.setTextSize(' + s + ');\\ndisplay.setTextColor(WHITE);\\ndisplay.setCursor(0,0);\\ndisplay.println(' + str1 + ');\\ndisplay.println(' + str2 + ');\\ndisplay.println(' + str3 + ');\\ndisplay.println(' + str4 + ');\\ndisplay.display();\\ndelay(250);';\r\n    return code;\r\n};\r\n\r\n\r\n////////////////////////oled_clear///////////////////////////\r\nexport const ke_oled_clear = function () {\r\n\r\n    var code = 'display.clearDisplay();\\n'\r\n\r\n    return code;\r\n};\r\n\r\n\r\n\r\n//////////////////////////////点阵初始化/////////////////////////////\r\nexport const ke_matrix_init = function (_, generator) {\r\n    var SDA = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var SCL = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n    var addr = generator.valueToCode(this, 'address', generator.ORDER_ATOMIC);\r\n\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    generator.definitions_['include_Matrix'] = '#include <Matrix.h>';\r\n    generator.definitions_[matrixName] = 'Matrix ' + matrixName + '(' + SDA + ',' + SCL + ');';\r\n    generator.setups_['setup_' + matrixName] = matrixName + '.begin(' + addr + '); \\n';\r\n    var code = matrixName + '.clear();\\n';\r\n    return code;\r\n};\r\n\r\nexport const ke_Matrix_POS = function (_, generator) {\r\n    var pos_x = generator.valueToCode(this, 'XVALUE', generator.ORDER_ASSIGNMENT);\r\n    var pos_y = generator.valueToCode(this, 'YVALUE', generator.ORDER_ASSIGNMENT);\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    var dropdown_type = this.getFieldValue('DrawPixel_TYPE');\r\n    var code = matrixName + '.drawPixel(' + pos_x + '-1,' + pos_y + '-1,' + dropdown_type + ');\\n'\r\n    code += matrixName + '.write();\\n';\r\n    return code;\r\n};\r\nexport const ke_Matrix_Rotation = function () {\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    var dropdown_type = this.getFieldValue('Rotation_TYPE');\r\n    var code = matrixName + '.setRotation(' + dropdown_type + ');\\n'\r\n    return code;\r\n};\r\nexport const ke_matrix_text = function (_, generator) {\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    var textString = generator.valueToCode(this, 'TEXT', generator.ORDER_ASSIGNMENT);\r\n    var code = matrixName + '.print(' + textString + ');\\nmyMatrix.write();\\n'\r\n    return code;\r\n};\r\n//执行器_点阵屏显示_显示图案\r\nexport const ke_matrix1 = function (_, generator) {\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    var dotMatrixArray = generator.valueToCode(this, 'LEDArray', generator.ORDER_ASSIGNMENT);\r\n    generator.definitions_['LEDArray'] = 'uint8_t  LEDArray[8];';\r\n    //  var code='Matrix_'+SDA+'_'+SCL+'.clear()dotMatrix;\\n';\r\n    var code = '';\r\n    code += 'for(int i=0; i<8; i++)\\n';\r\n    code += '{\\n'\r\n    code += '  LEDArray[i]=' + dotMatrixArray + '[i];\\n';\r\n    code += '  for(int j=7; j>=0; j--)\\n'\r\n    code += '  {\\n'\r\n    code += '    if((LEDArray[i]&0x01)>0)\\n';\r\n    code += '    ' + matrixName + '.drawPixel(j, i,1);\\n';\r\n    code += '    LEDArray[i] = LEDArray[i]>>1;\\n';\r\n    code += '  }  \\n'\r\n    code += '}\\n'\r\n    code += matrixName + '.write();\\n'\r\n    return code;\r\n};\r\n//执行器_点阵屏显示_点阵数组\r\nexport const ke_matrix2 = function (_, generator) {\r\n    var varName = this.getFieldValue('VAR');\r\n    var a = new Array();\r\n    for (let i = 1; i < 9; i++) {\r\n        a[i] = new Array();\r\n        for (let j = 1; j < 9; j++) {\r\n            a[i][j] = (this.getFieldValue('a' + i + j) == \"TRUE\") ? 1 : 0;\r\n        }\r\n    }\r\n    var code = '{';\r\n    for (let i = 1; i < 9; i++) {\r\n        var tmp = \"\"\r\n        for (let j = 1; j < 9; j++) {\r\n            tmp += a[i][j];\r\n        }\r\n        tmp = (parseInt(tmp, 2)).toString(16)\r\n        if (tmp.length == 1) tmp = \"0\" + tmp;\r\n        code += '0x' + tmp + ((i != 8) ? ',' : '');\r\n    }\r\n    code += '};';\r\n    //generator.definitions_[this.id] = \"byte LedArray_\"+clearString(this.id)+\"[]=\"+code;\r\n    generator.definitions_[varName] = \"uint8_t \" + varName + \"[8]=\" + code;\r\n    //return [\"LedArray_\"+clearString(this.id), generator.ORDER_ATOMIC];\r\n    return [varName, generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n////////////////////////清屏/////////////////////////////\r\nexport const ke_matrix_clear = function () {\r\n    var matrixName = this.getFieldValue('matrixName');\r\n    var code = matrixName + '.clear();\\n'\r\n    code += matrixName + '.write();\\n';\r\n    return code;\r\n};\r\n\r\n\r\n////////////////////////////////点阵1////////////////////////////\r\n//执行器_点阵屏显示_显示图案\r\n/*export const ke_matrix1 = function() {\r\n  var matrixName = this.getFieldValue('matrixName');\r\n  var dotMatrixArray = generator.valueToCode(this, 'LEDArray', generator.ORDER_ASSIGNMENT);\r\n  generator.definitions_['LEDArray'] = 'uint8_t  LEDArray[8];';\r\n//  var code='Matrix_'+SDA+'_'+SCL+'.clear()dotMatrix;\\n';\r\n  var code='';\r\n  code+='for(int i=0; i<8; i++)\\n';\r\n  code+='{\\n'       //由于硬件横向引脚排序往左移了一位的问题，需要程序将数组往右移一位。\r\n  code+='if('+dotMatrixArray+'[i] & 0x01)\\n'   //如果数据最后一位是1，1是有效数值\r\n  code+='{\\n'\r\n  code+='LEDArray[i]=('+dotMatrixArray+'[i] >> 1) | 0x80;\\n' //这里先整体往右移了，就是把最后一个数（1）移掉了，就需要或上0x80,相当于把1放到前面去。\r\n  code+='}\\n'\r\n  code+='else\\n'    //如果最后一位是0\r\n  code+='{'\r\n  code+='LEDArray[i]='+dotMatrixArray+'[i]>>1;\\n'   //就直接往右移一位就可以，前面会自动补0\r\n  code+='}';\r\n  //code+='  for(int j=7; j>=0; j--)\\n'\r\n  code+='  for(int j=0; j<=7; j++)\\n'\r\n  code+='  {\\n'\r\n  code+='    if((LEDArray[i]&0x01)>0)\\n';\r\n  code+='    '+ matrixName +'.drawPixel(j, i,1);\\n';\r\n  code+='    LEDArray[i] = LEDArray[i]>>1;\\n';\r\n  code+='  }  \\n'\r\n  code+='}\\n'\r\n  code+= matrixName+'.writeDisplay();\\n'\r\n  return code;\r\n};\r\n//执行器_点阵屏显示_点阵数组\r\nexport const ke_matrix2 = function() {\r\n  var varName = this.getFieldValue('VAR');\r\n  var a = new Array();\r\n  for (var i = 1; i < 9; i++) {\r\n    a[i] = new Array();\r\n    for (var j = 1; j < 9; j++) {\r\n      a[i][j] = (this.getFieldValue('a' + i + j) == \"TRUE\") ? 1 : 0;\r\n    }\r\n  }\r\n  var code = '{';\r\n  for (var i = 1; i < 9; i++) {\r\n    var tmp = \"\"\r\n    for (var j = 1; j < 9; j++) {\r\n      tmp += a[i][j];\r\n\r\n    }\r\n    tmp = (parseInt(tmp, 2)).toString(16)\r\n    if (tmp.length == 1) tmp = \"0\" + tmp;\r\n    code += '0x' + tmp + ((i != 8) ? ',' : '');\r\n  }\r\n  code += '};';\r\n  //generator.definitions_[this.id] = \"byte LedArray_\"+clearString(this.id)+\"[]=\"+code;\r\n  generator.definitions_[varName] = \"uint8_t \" + varName + \"[8]=\" + code;\r\n  //return [\"LedArray_\"+clearString(this.id), generator.ORDER_ATOMIC];\r\n  return [varName, generator.ORDER_ATOMIC];\r\n};*/\r\n\r\n\r\n\r\n\r\n////////////////////////////////通讯///////////////////////////////\r\n\r\n///////////////////////红外接收///////////////////\r\nexport const ke_ir_r = function (_, generator) {\r\n    var variable = generator.variableDB_.getName(this.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\r\n    generator.definitions_['var_declare' + variable] = 'long ' + variable + ';';\r\n    var dropdown_pin = generator.valueToCode(this, 'PIN', generator.ORDER_ATOMIC);\r\n    var branch = generator.statementToCode(this, 'DO');\r\n    var branch2 = generator.statementToCode(this, 'DO2');\r\n    generator.definitions_['include_IRremote'] = '#include <IRremote.h>\\n';\r\n    //generator.definitions_['var_declare'+varName] = 'long '+varName+';\\n';\r\n    generator.definitions_['var_ir_recv' + dropdown_pin] = 'IRrecv irrecv_' + dropdown_pin + '(' + dropdown_pin + ');\\ndecode_results results_' + dropdown_pin + ';\\n';\r\n    generator.setups_['setup_ir_recv_' + dropdown_pin] = 'irrecv_' + dropdown_pin + '.enableIRIn();';\r\n    var code = \"if (irrecv_\" + dropdown_pin + \".decode(&results_\" + dropdown_pin + \")) {\\n\"\r\n    code += '  ' + variable + '=results_' + dropdown_pin + '.value;\\n';\r\n    code += '  String type=\"UNKNOWN\";\\n';\r\n    ////////////////////////////////////////////////////////////////\r\n    code += '  String typelist[14]={\"UNKNOWN\", \"NEC\", \"SONY\", \"RC5\", \"RC6\", \"DISH\", \"SHARP\", \"PANASONIC\", \"JVC\", \"SANYO\", \"MITSUBISHI\", \"SAMSUNG\", \"LG\", \"WHYNTER\"};\\n';\r\n    code += '  if(results_' + dropdown_pin + '.decode_type>=1&&results_' + dropdown_pin + '.decode_type<=13){\\n';\r\n    code += '    type=typelist[results_' + dropdown_pin + '.decode_type];\\n'\r\n    code += '  }\\n';\r\n    code += '  Serial.print(\"IR TYPE:\"+type+\"  \");\\n';\r\n    code += branch;\r\n    code += '  irrecv_' + dropdown_pin + '.resume();\\n'\r\n    code += '} else {\\n';\r\n    code += branch2;\r\n    code += '}\\n';\r\n    return code;\r\n};\r\n\r\n//////////////////////////////////////红外发射/////////////////////////////\r\nexport const ke_ir_s = function (_, generator) {\r\n\r\n    var num1 = generator.valueToCode(this, 'num1', generator.ORDER_ATOMIC);\r\n\r\n    generator.definitions_['define_IRre.h'] = '#include <IRremote.h>';\r\n    generator.definitions_['define_IRsend'] = 'IRsend irsend;';\r\n\r\n    var code = 'irsend.sendRC5(' + num1 + ', 8);\\ndelay(200);\\n';\r\n    return code;\r\n};\r\n\r\n\r\n//////////////////////RFID////////////////////////////\r\nexport const rc522_i2c_init = function (_, generator) {\r\n    generator.definitions_['1include_rc522_iic_init'] = '#include <Wire.h>\\n#include <MFRC522_I2C.h>\\nMFRC522 mfrc522(0x28);\\nString rfid_str = \"\";\\n';\r\n    generator.definitions_['1include_rc522_iic_data'] = 'String return_rfid_data()\\n' +\r\n        '{\\n' +\r\n        '  if ( ! mfrc522.PICC_IsNewCardPresent() || ! mfrc522.PICC_ReadCardSerial() ) {\\n' +\r\n        '    delay(50);\\n' +\r\n        '    return \"0\";\\n' +\r\n        '  }\\n' +\r\n        '  rfid_str = \"\";\\n' +\r\n        '  for (byte i = 0; i < mfrc522.uid.size; i++) {\\n' +\r\n        '    rfid_str = rfid_str + String(mfrc522.uid.uidByte[i],HEX);\\n' +\r\n        '  }\\n' +\r\n        '  return rfid_str;\\n' +\r\n        '}\\n';\r\n\r\n    generator.setups_['1setup_rc522_iic'] = 'Wire.begin();\\nmfrc522.PCD_Init();\\n';\r\n\r\n    return '';\r\n};\r\n\r\n\r\nexport const rc522_i2c_read = function (_, generator) {\r\n    return ['return_rfid_data()', generator.ORDER_ATOMIC];\r\n};\r\n\r\n\r\n/////////////////////////////////////蓝牙////////////////////////////////////\r\nexport const ke_bluetooth = function (_, generator) {\r\n    var val = this.getFieldValue('VAL');\r\n    var branch = generator.statementToCode(this, 'DO');\r\n    var dropdown_pin1 = generator.valueToCode(this, 'PIN1', generator.ORDER_ATOMIC);\r\n    var dropdown_pin2 = generator.valueToCode(this, 'PIN2', generator.ORDER_ATOMIC);\r\n\r\n\r\n    generator.definitions_['include_Soft'] = '#include <SoftwareSerial.h>\\n';\r\n    generator.definitions_['mySerial'] = 'SoftwareSerial mySerial(' + dropdown_pin1 + ', ' + dropdown_pin2 + ');\\n';\r\n    generator.definitions_['char'] = 'char ' + val + ';\\n';\r\n\r\n    generator.setups_['mySerial23'] = 'mySerial.begin(9600);';\r\n\r\n    var code = 'if (mySerial.available())\\n{\\n' + val + ' = mySerial.read();\\n';\r\n    code += branch;\r\n    code += '}\\n';\r\n    return code;\r\n};","export const EnMsg = {};\r\n\r\nEnMsg.ke_red_led = 'red_led';\r\nEnMsg.ke_yellow_led='yellow_led';\r\nEnMsg.ke_blue_led = 'blue_led';\r\nEnMsg.ke_white_led='white_led';\r\nEnMsg.ke_green_led='green_led';\r\nEnMsg.ke_dual_led = 'dual_led';\r\nEnMsg.ke_jg1='laser';\r\nEnMsg.Kids_anologWrite = 'anologWrite';\r\nEnMsg.Kids_value = 'value';\r\n\r\n\r\nEnMsg.Kids_ON = 'HIGH';\r\nEnMsg.Kids_OFF = 'LOW';\r\nEnMsg.Kids_anologWrite = 'anologWrite';\r\n\r\nEnMsg.Kids_iic = 'PIN：SDA# A4, SCL# A5';\r\nEnMsg.Kids_rot = 'button_PIN';\r\nEnMsg.Kids_rot_count = 'count';\r\nEnMsg.Kids_bits = 'string';\r\nEnMsg.Kids_pin = 'PIN';\r\n\r\nEnMsg.Kids_iic_pin = 'PIN #SDA:A4,#SCL:A5';\r\nEnMsg.Kids_lcd_p = 'LCD';\r\nEnMsg.Kids_shilihua = 'Instantiation name';\r\nEnMsg.Kids_size = 'font size';\r\n\r\nEnMsg.Kids_printcount = 'Display digits';\r\nEnMsg.ke_string = 'display character';\r\n\r\nEnMsg.Kids_lcd_left = 'LCD_Scroll to the left';\r\nEnMsg.Kids_lcd_right = 'LCD_Scroll to the right';\r\n\r\nEnMsg.ke_TM1637='4 digit 8-segment LED digital';\r\nEnMsg.ke_ws='digit';\r\nEnMsg.ke_begin='Display position';\r\nEnMsg.ke_fill0='add 0?';\r\nEnMsg.ke_light='Brightness0~7';\r\nEnMsg.ke_XY='Show or hide';\r\nEnMsg.ke_L='left';\r\nEnMsg.ke_R='right';\r\nEnMsg.ke_MH='colon';\r\nEnMsg.ke_value='value';\r\n\r\nEnMsg.ke_oled_init = 'OLED_init';\r\nEnMsg.ke_oled_piexl = 'OLED_point coordinates';\r\nEnMsg.ke_oled_x = 'column';\r\nEnMsg.ke_oled_y = 'row';\r\nEnMsg.ke_oled_cong = 'from';\r\nEnMsg.ke_oled_dao = 'to';\r\nEnMsg.ke_oled_kai = 'initial point';\r\nEnMsg.ke_oled_kuan = 'width';\r\nEnMsg.ke_oled_chang = 'height';\r\nEnMsg.ke_oled_angle1 = 'angle1';\r\nEnMsg.ke_oled_angle2 = 'angle2';\r\nEnMsg.ke_oled_angle3 = 'angle3';\r\n\r\nEnMsg.ke_oled_line = 'OLED_line';\r\nEnMsg.ke_oled_rect = 'OLED_hollow rectangle';\r\nEnMsg.ke_oled_fil_lrect = 'OLED_solid rectangle';\r\nEnMsg.ke_oled_r_rect = 'OLED_hollow rounded rectangle';\r\nEnMsg.ke_oled_r_fill_rect = 'OLED_solid rounded rectangle';\r\nEnMsg.ke_oled_circle = 'OLED_hollow circle  Center coordinates';\r\nEnMsg.ke_oled_circle_radius = 'Circle radius';\r\nEnMsg.ke_oled_radius = 'Corner radius';\r\nEnMsg.ke_oled_fill_circle = 'OLED_solid circle  Center coordinates';\r\nEnMsg.ke_oled_triangle = 'OLED_hollow triangle';\r\nEnMsg.ke_oled_fill_triangle = 'OLED_solid triangle';\r\nEnMsg.ke_oled_string1 = 'OLED_displays a string or number';\r\nEnMsg.ke_oled_weizhi = 'display position';\r\nEnMsg.ke_oled_print = 'display';\r\nEnMsg.ke_oled_clear = 'OLED_clear';\r\n\r\n\r\nEnMsg.MIXLY_ke_LED1='Piranha LED';\r\nEnMsg.MIXLY_ke_LED2='Red Piranha LED';\r\nEnMsg.MIXLY_ke_LED3='Green Piranha LED';\r\nEnMsg.MIXLY_ke_LED4='Yellow Piranha LED';\r\nEnMsg.MIXLY_ke_LED5='Blue Piranha LED';\r\nEnMsg.MIXLY_ke_LED01='Straw cap LED';\r\nEnMsg.MIXLY_ke_LED02='Red Straw cap LED';\r\nEnMsg.MIXLY_ke_LED03='Green Straw cap LED';\r\nEnMsg.MIXLY_ke_LED04='Yellow straw cap LED';\r\nEnMsg.MIXLY_ke_LED05='Blue Straw cap LED';\r\nEnMsg.MIXLY_ke_QCD='Colorful lights';\r\nEnMsg.MIXLY_ke_RGB_A='Common anode RGB';\r\nEnMsg.MIXLY_ke_RGB_B='Common cathode RGB';\r\n\r\nEnMsg.MIXLY_ke_BUZZER1='Active buzzer';\r\nEnMsg.MIXLY_ke_BUZZER2='Passive Buzzer';\r\nEnMsg.MIXLY_ke_RELAY='Relay';\r\nEnMsg.MIXLY_ke_v_motor='Vibration motor';\r\nEnMsg.MIXLY_ke_SPEAKER='Speaker';\r\nEnMsg.MIXLY_NOTONE_PIN = 'noTone PIN#';\r\nEnMsg.MIXLY_ke_MOTOR='Fan';\r\nEnMsg.MIXLY_ke_MOTOR01='geared motor';\r\nEnMsg.MIXLY_ke_SERVO='servo';\r\nEnMsg.MIXLY_ke_TB6612='TB6612motor';\r\nEnMsg.MIXLY_H='front';\r\nEnMsg.MIXLY_L='back';\r\n\r\n\r\n\r\nEnMsg.MIXLY_ke_2812RGB='NeoPixel Led';\r\n\r\nEnMsg.MIXLY_ke_IR_G='PIR Sensor';\r\nEnMsg.MIXLY_ke_FLAME='Flame Sensor';\r\nEnMsg.MIXLY_ke_HALL='Hall Sensor';\r\nEnMsg.MIXLY_ke_CRASH='Crash Sensor';\r\nEnMsg.MIXLY_ke_BUTTON='Button';\r\nEnMsg.MIXLY_ke_sl_BUTTON='Self-locking button';\r\nEnMsg.MIXLY_ke_TUOCH='Capacitive Touch';\r\nEnMsg.MIXLY_ke_KNOCK='Knock Sensor';\r\nEnMsg.MIXLY_ke_TILT='Tilt Sensor';\r\nEnMsg.MIXLY_ke_SHAKE='Vibration Sensor';\r\nEnMsg.MIXLY_ke_REED_S='Reed Switch Sensor';\r\nEnMsg.MIXLY_ke_TRACK='Tracking Sensor';\r\nEnMsg.MIXLY_ke_AVOID='Obstacle Avoidance MSensor';\r\nEnMsg.MIXLY_ke_LIGHT_B='Light Interrupt Sensor';\r\nEnMsg.MIXLY_ke_ROT='Rotation';\r\n\r\n\r\nEnMsg.MIXLY_ke_ANALOG_T='Analog Temperature Sensor';\r\nEnMsg.MIXLY_ke_SOUND='Sound Sensor';\r\nEnMsg.MIXLY_ke_LIGHT='photocell Sensor';\r\nEnMsg.MIXLY_ke_UV='UV Sensor';\r\nEnMsg.MIXLY_ke_Piezo='Piezo Sensor';\r\nEnMsg.MIXLY_ke_WATER='Water Level Sensor';\r\nEnMsg.MIXLY_ke_SOIL='Soil Sensor';\r\nEnMsg.MIXLY_ke_POTENTIOMETER='rotational potentiometer';\r\nEnMsg.MIXLY_ke_LM35='LM35 Temperature Sensor';\r\nEnMsg.MIXLY_ke_SLIDE_POTENTIOMETER='slide potentiometer';\r\nEnMsg.MIXLY_ke_TEMT6000='TEMT6000 Ambient Light';\r\nEnMsg.MIXLY_ke_STEAM='water vapor sensor';\r\nEnMsg.MIXLY_ke_FILM_P='Thin-film Pressure Sensor';\r\nEnMsg.MIXLY_ke_JOYSTICK='Joystick Sensor';\r\nEnMsg.MIXLY_ke_JOYSTICK_btn='Joystick_button';\r\nEnMsg.MIXLY_ke_SMOKE='Smoke Sensor';\r\nEnMsg.MIXLY_ke_ALCOHOL='Alcohol Sensor';\r\nEnMsg.MIXLY_ke_Voltage='Voltage Sensor';\r\nEnMsg.MIXLY_ke_Current='Current Sensor';\r\n\r\n\r\nEnMsg.MIXLY_ke_18B20='18B20 Temperature Sensor';\r\nEnMsg.MIXLY_ke_18B20_R='Getting temperature';\r\nEnMsg.MIXLY_ke_DHT11='temperature and humidity Sensor';\r\nEnMsg.MIXLY_DHT11_H='getTemperature';    /////////////\r\nEnMsg.MIXLY_DHT11_T='getHumidity';     ////////////\r\nEnMsg.MIXLY_ke_BMP180='BMP180 altimeter Sensor';\r\nEnMsg.MIXLY_ke_BMP180_T='temperature';\r\nEnMsg.MIXLY_ke_BMP180_A='atmosphere';\r\nEnMsg.MIXLY_ke_BMP180_H='height above sea level ';\r\n\r\nEnMsg.MIXLY_ke_BMP280='BMP280 altimeter Sensor';\r\nEnMsg.MIXLY_ke_BMP280_T='temperature';\r\nEnMsg.MIXLY_ke_BMP280_A='atmosphere';\r\nEnMsg.MIXLY_ke_BMP280_H='height above sea level';\r\n\r\nEnMsg.MIXLY_ke_SR04='SR04 Ultrasound Module';\r\nEnMsg.MIXLY_ke_3231='DS3231 clock';\r\n\r\n//RTC-DS3231/DS1307\r\nEnMsg.MIXLY_ke_DS3231='DS3231';\r\nEnMsg.MIXLY_ke_DS1307='DS1307';\r\nEnMsg.MIXLY_ke_DS3231_GET_TIME='Get';\r\nEnMsg.MIXLY_ke_DS3231_SET_TIME='SetTime';\r\nEnMsg.MIXLY_ke_DS3231_SET_TIME2='Compiled date and time';\r\nEnMsg.MIXLY_ke_YEAR='Year';\r\nEnMsg.MIXLY_ke_MONTH='Month';\r\nEnMsg.MIXLY_ke_DAY='Day';\r\nEnMsg.MIXLY_ke_HOUR='Hour';\r\nEnMsg.MIXLY_ke_MINUTE='Minute';\r\nEnMsg.MIXLY_ke_SECOND='Second';\r\nEnMsg.MIXLY_ke_DAYOFWEEK='DayOfWeek';\r\n\r\nEnMsg.MIXLY_ke_ADXL345='Acceleration Sensor';\r\nEnMsg.MIXLY_ADXL345_X='X-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_Y='Y-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_Z='Z-axis acceleration'; ///\r\nEnMsg.MIXLY_ADXL345_XA='X-axis angle';  ///\r\nEnMsg.MIXLY_ADXL345_YA='Y-axis angle';  ///\r\nEnMsg.MLX90614_TYPE = 'Infrared temperature sensor';\r\nEnMsg.MLX90614_TARGET_OBJECT_TEMP = 'Target object temperature';\r\nEnMsg.MLX90614_AMBIENT_TEMP = 'Ambient temperature';\r\nEnMsg.TCS34725_Get_RGB='TCS347255 Sensor Get Color';\r\nEnMsg.ke_Gesture_APDS='Gesture sensor';\r\nEnMsg.MIXLY_BMP388_init='BPM388 Barometric Pressure Sensor Init';\r\nEnMsg.MIXLY_BMP388_read='BPM388 Barometric Pressure Sensor Read Value';\r\n\r\n\r\nEnMsg.MIXLY_ke_OLED='OLED_displays a string or number';\r\nEnMsg.MIXLY_ke_1602LCD='IIC1602LCD';\r\nEnMsg.MIXLY_SETUP='setup';  ////////////////\r\nEnMsg.MIXLY_LCD_ADDRESS='address'; /////////\r\nEnMsg.MIXLY_LCD_PRINT1='peint line1';  /////////\r\nEnMsg.MIXLY_LCD_PRINT2='print line2'; ///////////\r\nEnMsg.MIXLY_LCD_ROW='row'; /////\r\nEnMsg.MIXLY_LCD_COLUMN='column'; /////////\r\nEnMsg.MIXLY_LCD_PRINT='print'; ////\r\nEnMsg.MIXLY_LCD_STAT_ON='On';  /////\r\nEnMsg.MIXLY_LCD_STAT_OFF='Off';  /////\r\nEnMsg.MIXLY_LCD_STAT_CURSOR='Cursor';  ////\r\nEnMsg.MIXLY_LCD_STAT_NOCURSOR='noCursor';  ////\r\nEnMsg.MIXLY_LCD_STAT_BLINK='Blink';  ////\r\nEnMsg.MIXLY_LCD_STAT_NOBLINK='noBlink'; ///\r\nEnMsg.MIXLY_LCD_STAT_CLEAR='Clear';  ///\r\nEnMsg.MIXLY_LCD_NOBACKLIGHT='NoBackLight'; ///\r\nEnMsg.MIXLY_LCD_BACKLIGHT='BackLight'; ///\r\nEnMsg.MIXLY_ke_2004LCD='IIC2004LCD';\r\nEnMsg.MIXLY_ke_print1='print line1';\r\nEnMsg.MIXLY_ke_print2='print line2';\r\nEnMsg.MIXLY_ke_print3='print line3';\r\nEnMsg.MIXLY_ke_print4='print line4';\r\n\r\nEnMsg.MIXLY_ke_MATRIX='8*8 dot matrix';\r\n\r\nEnMsg.MIXLY_LCD128_SETUP='128X32 LCD start';  ////////////////\r\nEnMsg.MIXLY_LCD128_CURSOR='128X32 LCD set cursor';\r\nEnMsg.MIXLY_DISPLAY_STRING='128X32 LCD display String';\r\nEnMsg.MIXLY_ke_LCD128_PIXLE='128X32 LCD draw pixel';\r\nEnMsg.MIXLY_ke_LCD128_D='128X32 LCD delete pixel';\r\nEnMsg.MIXLY_LCD128_CLEAR='128X32 LCD Clear';\r\n\r\n\r\n\r\nEnMsg.MIXLY_ke_TM1637='4 digit 8-segment LED digital';\r\nEnMsg.MIXLY_ke_TM1637_C='digit';\r\nEnMsg.MIXLY_ke_TM1637_P='display position';\r\nEnMsg.MIXLY_ke_TM1637_Fill='add 0?';\r\nEnMsg.MIXLY_ke_TM1637_light='brightness 0~7';\r\nEnMsg.MIXLY_ke_TM1637_xy='show or hide';\r\nEnMsg.MIXLY_ke_TM1637_left='left';\r\nEnMsg.MIXLY_ke_TM1637_maohao='colon';\r\nEnMsg.MIXLY_ke_TM1637_right='right';\r\nEnMsg.MIXLY_ke_value='value';\r\n\r\n//4 Display\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY='DigitDisplay';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING='displayString';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER='displayNumber';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1='No.';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2='';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_DOT='Dot';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS='Brightness';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE='(1~8)';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR='Hour';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE='Minute';\r\nEnMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND='Second';\r\n//4 Display time\r\nEnMsg.MIXLY_ke_TIME_SEC_ON ='on';\r\nEnMsg.MIXLY_ke_TIME_SEC_BLINK ='blink';\r\nEnMsg.MIXLY_ke_TIME_SEC_OFF='off';\r\n\r\n\r\nEnMsg.MIXLY_ke_IR_E='Infrared Transmitter Module';\r\nEnMsg.MIXLY_ke_IR_R='Infrared Receiver Module';\r\nEnMsg.MIXLY_ke_W5100='W5100 Ethernet Module';\r\nEnMsg.MIXLY_rc522_iic_init='RFID RC522_I2C Init';\r\nEnMsg.MIXLY_rc522_iic_read='RFID RC522_I2C Read';\r\nEnMsg.MIXLY_ke_BLUETOOTH='Bluetooth 4.0 Module';\r\nEnMsg.MIXLY_ke_read='Received signal';\r\n\r\n\r\n//EnMsg.MIXLY_ke_kzsc = 'Control output';\r\n\r\nEnMsg.MIXLY_ke_Count='count';\r\n\r\nEnMsg.MIXLY_ke_YEAR = 'year';\r\nEnMsg.MIXLY_ke_MONTH = 'month';\r\nEnMsg.MIXLY_ke_DAY = 'day';\r\nEnMsg.MIXLY_ke_HOUR = 'hour';\r\nEnMsg.MIXLY_ke_MINUTE = 'minute';\r\nEnMsg.MIXLY_ke_SECOND = 'second';\r\nEnMsg.MIXLY_ke_WEEK = 'week';\r\n\r\nEnMsg.MIXLY_ke_angle = 'angle';\r\n\r\nEnMsg.kids_Ode_to_joy = \"Ode_to_joy\";\r\nEnMsg.kids_birthday = \"birthday\";\r\n\r\nEnMsg.kids_tone = \"tone\";\r\nEnMsg.kids_beat = \"beat\";\r\nEnMsg.kids_play_tone = \"play_tone\";\r\nEnMsg.kids_notone = \"no_tone\";\r\n\r\nEnMsg.kids_ADkey = \"5 key module\";\r\n\r\nexport const EnCatgories = {};","export const ZhHansMsg = {};\r\n\r\nZhHansMsg.ke_red_led = '红色LED灯';\r\nZhHansMsg.ke_yellow_led='黄色LED灯';\r\nZhHansMsg.ke_white_led='白色LED灯';\r\nZhHansMsg.ke_blue_led = '蓝色LED灯';\r\nZhHansMsg.ke_green_led='绿色LED灯';\r\nZhHansMsg.ke_dual_led = '红绿双色灯';\r\nZhHansMsg.ke_jg1='激光';\r\nZhHansMsg.MIXLY_ke_QCD='七彩led灯';\r\nZhHansMsg.MIXLY_ke_RGB_A='共阳RGB';\r\nZhHansMsg.MIXLY_ke_RGB_B='共阴RGB';\r\nZhHansMsg.Kids_anologWrite = 'PWM输出';\r\nZhHansMsg.Kids_value = '赋值为';\r\n\r\nZhHansMsg.Kids_iic = '管脚：SDA# A4, SCL# A5';\r\nZhHansMsg.Kids_rot = '按钮管脚';\r\nZhHansMsg.Kids_rot_count = '计数变量';\r\nZhHansMsg.Kids_bits = '字符串';\r\nZhHansMsg.Kids_pin = '管脚';\r\n\r\nZhHansMsg.Kids_iic_pin = '管脚SDA:A4,SCL:A5';\r\nZhHansMsg.Kids_lcd_p = '液晶显示屏';\r\nZhHansMsg.Kids_shilihua = '实例化名称';\r\nZhHansMsg.Kids_size = '字体大小';\r\nZhHansMsg.Kids_printcount = '显示数字';\r\n\r\nZhHansMsg.ke_string = '显示字符';\r\n\r\nZhHansMsg.Kids_lcd_left = '液晶显示屏往左滚动';\r\nZhHansMsg.Kids_lcd_right = '液晶显示屏往右滚动';\r\n\r\nZhHansMsg.ke_TM1637='4位8段数码管';\r\nZhHansMsg.ke_ws='位数';\r\nZhHansMsg.ke_begin='显示的位置';\r\nZhHansMsg.ke_fill0='是否补充0';\r\nZhHansMsg.ke_light='亮度0~7';\r\nZhHansMsg.ke_XY='显或隐';\r\nZhHansMsg.ke_L='左边';\r\nZhHansMsg.ke_R='右边';\r\nZhHansMsg.ke_MH='冒号';\r\nZhHansMsg.ke_value='数值';\r\n\r\n\r\nZhHansMsg.ke_oled_init = 'OLED初始化';\r\nZhHansMsg.ke_oled_piexl = 'OLED_画点的坐标';\r\nZhHansMsg.ke_oled_x = '列';\r\nZhHansMsg.ke_oled_y = '行';\r\nZhHansMsg.ke_oled_cong = '从';\r\nZhHansMsg.ke_oled_dao = '到';\r\nZhHansMsg.ke_oled_kai = '起始位';\r\nZhHansMsg.ke_oled_kuan = '宽';\r\nZhHansMsg.ke_oled_chang = '长';\r\nZhHansMsg.ke_oled_angle1 = '角度1为';\r\nZhHansMsg.ke_oled_angle2 = '角度2为';\r\nZhHansMsg.ke_oled_angle3 = '角度3为';\r\n\r\nZhHansMsg.ke_oled_line = 'OLED_画两点连线';\r\nZhHansMsg.ke_oled_rect = 'OLED_画空心矩形';\r\nZhHansMsg.ke_oled_fil_lrect = 'OLED_画实心矩形';\r\nZhHansMsg.ke_oled_r_rect = 'OLED_画倒圆角的空心矩形';\r\nZhHansMsg.ke_oled_r_fill_rect = 'OLED_画倒圆角的实心矩形';\r\nZhHansMsg.ke_oled_circle = 'OLED_画空心圆形  圆心坐标';\r\nZhHansMsg.ke_oled_circle_radius = '圆半径';\r\nZhHansMsg.ke_oled_radius = '圆角半径';\r\nZhHansMsg.ke_oled_fill_circle = 'OLED_画实心的圆形  圆心坐标';\r\nZhHansMsg.ke_oled_triangle = 'OLED_画空心三角形';\r\nZhHansMsg.ke_oled_fill_triangle = 'OLED_画实心三角形';\r\nZhHansMsg.ke_oled_string1 = 'OLED_显示字符串或数字';\r\nZhHansMsg.ke_oled_weizhi = '显示的位置';\r\nZhHansMsg.ke_oled_print = '显示';\r\nZhHansMsg.ke_oled_clear = 'OLED_清屏';\r\n\r\n\r\n\r\n\r\nZhHansMsg.Kids_ON = '高';\r\nZhHansMsg.Kids_OFF = '低';\r\nZhHansMsg.Kids_anologWrite = 'PWM输出';\r\n\r\n\r\n\r\nZhHansMsg.MIXLY_ke_BUZZER1='有源蜂鸣器';\r\nZhHansMsg.MIXLY_ke_BUZZER2='无源蜂鸣器';\r\nZhHansMsg.MIXLY_ke_RELAY='继电器';\r\nZhHansMsg.MIXLY_ke_v_motor='震动马达';\r\nZhHansMsg.MIXLY_ke_SPEAKER='扬声器';\r\nZhHansMsg.MIXLY_NOTONE_PIN = '结束声音 管脚#';\r\nZhHansMsg.MIXLY_ke_MOTOR='小风扇';\r\nZhHansMsg.MIXLY_ke_MOTOR01='减速电机';\r\nZhHansMsg.MIXLY_ke_SERVO='舵机';\r\nZhHansMsg.MIXLY_ke_TB6612='TB6612电机驱动';\r\nZhHansMsg.MIXLY_H='正';\r\nZhHansMsg.MIXLY_L='反';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_2812RGB='NeoPixel全彩LED';\r\n\r\nZhHansMsg.MIXLY_ke_IR_G='人体红外热传感器';\r\nZhHansMsg.MIXLY_ke_FLAME='火焰传感器';\r\nZhHansMsg.MIXLY_ke_HALL='霍尔传感器';\r\nZhHansMsg.MIXLY_ke_CRASH='碰撞传感器';\r\nZhHansMsg.MIXLY_ke_BUTTON='按键';\r\nZhHansMsg.MIXLY_ke_sl_BUTTON='自锁按键';\r\nZhHansMsg.MIXLY_ke_TUOCH='触摸传感器';\r\nZhHansMsg.MIXLY_ke_KNOCK='敲击传感器';\r\nZhHansMsg.MIXLY_ke_TILT='倾斜传感器';\r\nZhHansMsg.MIXLY_ke_SHAKE='震动传感器';\r\nZhHansMsg.MIXLY_ke_REED_S='干簧管传感器';\r\nZhHansMsg.MIXLY_ke_TRACK='循迹传感器';\r\nZhHansMsg.MIXLY_ke_AVOID='避障传感器';\r\nZhHansMsg.MIXLY_ke_LIGHT_B='光折断传感器';\r\nZhHansMsg.MIXLY_ENCODER = '旋转编码器';\r\nZhHansMsg.MIXLY_ke_ANALOG_T='模拟温度传感器';\r\nZhHansMsg.MIXLY_ke_SOUND='声音传感器';\r\nZhHansMsg.MIXLY_ke_LIGHT='光敏传感器';\r\nZhHansMsg.MIXLY_ke_UV='紫外线传感器';\r\nZhHansMsg.MIXLY_ke_Piezo='陶瓷压电传感器';\r\nZhHansMsg.MIXLY_ke_WATER='水位传感器';\r\nZhHansMsg.MIXLY_ke_SOIL='土壤传感器';\r\nZhHansMsg.MIXLY_ke_POTENTIOMETER='旋转电位器';\r\nZhHansMsg.MIXLY_ke_LM35='LM35温度传感器';\r\nZhHansMsg.MIXLY_ke_SLIDE_POTENTIOMETER='滑动电位器';\r\nZhHansMsg.MIXLY_ke_TEMT6000='TEMT6000环境光';\r\nZhHansMsg.MIXLY_ke_STEAM='水蒸气传感器';\r\nZhHansMsg.MIXLY_ke_FILM_P='薄膜压力传感器';\r\nZhHansMsg.MIXLY_ke_JOYSTICK='遥杆传感器';\r\nZhHansMsg.MIXLY_ke_JOYSTICK_btn='遥杆按钮';\r\nZhHansMsg.MIXLY_ke_SMOKE='烟雾传感器';\r\nZhHansMsg.MIXLY_ke_ALCOHOL='酒精传感器';\r\nZhHansMsg.MIXLY_ke_Voltage='电压传感器';\r\nZhHansMsg.MIXLY_ke_Current='电流传感器';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_18B20='18B20温度传感器';\r\nZhHansMsg.MIXLY_ke_18B20_R='获取温度';\r\nZhHansMsg.MIXLY_ke_DHT11='温湿度传感器';\r\nZhHansMsg.MIXLY_DHT11_H='获取湿度';    /////////////\r\nZhHansMsg.MIXLY_DHT11_T='获取温度';     ////////////\r\nZhHansMsg.MIXLY_ke_BMP180='BMP180高度计传感器';\r\n\r\nZhHansMsg.MIXLY_ke_BMP180_T='温度';\r\nZhHansMsg.MIXLY_ke_BMP180_A='大气压';\r\nZhHansMsg.MIXLY_ke_BMP180_H='海拔高度';\r\n\r\nZhHansMsg.MIXLY_ke_BMP280='BMP280高度计传感器';\r\nZhHansMsg.MIXLY_ke_BMP280_T='温度';\r\nZhHansMsg.MIXLY_ke_BMP280_A='大气压';\r\nZhHansMsg.MIXLY_ke_BMP280_H='海拔高度';\r\n\r\nZhHansMsg.MIXLY_ke_SR04='SR04超声波模块';\r\nZhHansMsg.MIXLY_ke_3231='DS3231时钟';\r\n\r\n//RTC-DS3231/DS1307\r\nZhHansMsg.MIXLY_ke_DS3231='DS3231';\r\nZhHansMsg.MIXLY_ke_DS1307='DS1307';\r\nZhHansMsg.MIXLY_ke_DS3231_GET_TIME='获取';\r\nZhHansMsg.MIXLY_ke_DS3231_SET_TIME='设置时间';\r\nZhHansMsg.MIXLY_ke_DS3231_SET_TIME2='编译的日期和时间';\r\nZhHansMsg.MIXLY_ke_YEAR='年';\r\nZhHansMsg.MIXLY_ke_MONTH='月';\r\nZhHansMsg.MIXLY_ke_DAY='日';\r\nZhHansMsg.MIXLY_ke_HOUR='时';\r\nZhHansMsg.MIXLY_ke_MINUTE='分';\r\nZhHansMsg.MIXLY_ke_SECOND='秒';\r\nZhHansMsg.MIXLY_ke_DAYOFWEEK='星期';\r\n\r\nZhHansMsg.MIXLY_Ke_ADXL345='加速度传感器';\r\nZhHansMsg.MIXLY_ADXL345_X='X轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_Y='Y轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_Z='Z轴加速度'; ///\r\nZhHansMsg.MIXLY_ADXL345_XA='X轴角度';  ///\r\nZhHansMsg.MIXLY_ADXL345_YA='Y轴角度';  ///\r\n\r\nZhHansMsg.MLX90614_TYPE = '红外测温传感器';\r\nZhHansMsg.MLX90614_TARGET_OBJECT_TEMP = '目标物体温度';\r\nZhHansMsg.MLX90614_AMBIENT_TEMP = '周围环境温度';\r\nZhHansMsg.TCS34725_Get_RGB = 'TCS34725颜色传感器 获取颜色';\r\nZhHansMsg.ke_Gesture_APDS='手势传感器获取手势';\r\nZhHansMsg.MIXLY_BMP388_init='BPM388气压传感器 初始化';\r\nZhHansMsg.MIXLY_BMP388_read='BPM388气压传感器 读取值';\r\nZhHansMsg.MIXLY_TFT_SD_INIT = 'TFT SD卡初始化';\r\nZhHansMsg.MIXLY_TFT_SD_display_1 = '显示图片 图片名称';\r\nZhHansMsg.MIXLY_TFT_SD_display_2 = 'X坐标';\r\nZhHansMsg.MIXLY_TFT_SD_display_3 = 'Y坐标';\r\nZhHansMsg.MIXLY_TFT_SD_display_4 = '图片格式为bmp格式';\r\nZhHansMsg.MIXLY_ke_YEAR = '年';\r\nZhHansMsg.MIXLY_ke_MONTH = '月';\r\nZhHansMsg.MIXLY_ke_DAY = '天';\r\nZhHansMsg.MIXLY_ke_TEXT = '周';\r\nZhHansMsg.MIXLY_ke_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_SECOND = '秒';\r\nZhHansMsg.MIXLY_ke_GET = '获取时间';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_OLED='OLED_显示字符串或数字';\r\nZhHansMsg.MIXLY_ke_1602LCD='IIC1602LCD';\r\nZhHansMsg.MIXLY_SETUP='初始化';  ////////////////\r\nZhHansMsg.MIXLY_LCD_ADDRESS='设备地址'; /////////\r\nZhHansMsg.MIXLY_LCD_PRINT1='打印第一行';  /////////\r\nZhHansMsg.MIXLY_LCD_PRINT2='打印第二行'; ///////////\r\nZhHansMsg.MIXLY_LCD_ROW='在第'; /////\r\nZhHansMsg.MIXLY_LCD_COLUMN='行第'; /////////\r\nZhHansMsg.MIXLY_LCD_PRINT='列打印'; ////\r\nZhHansMsg.MIXLY_LCD_STAT_ON='开';  /////\r\nZhHansMsg.MIXLY_LCD_STAT_OFF='关';  /////\r\nZhHansMsg.MIXLY_LCD_STAT_CURSOR='有光标';  ////\r\nZhHansMsg.MIXLY_LCD_STAT_NOCURSOR='无光标';  ////\r\nZhHansMsg.MIXLY_LCD_STAT_BLINK='闪烁';  ////\r\nZhHansMsg.MIXLY_LCD_STAT_NOBLINK='不闪烁'; ///\r\nZhHansMsg.MIXLY_LCD_STAT_CLEAR='清屏';  ///\r\nZhHansMsg.MIXLY_LCD_NOBACKLIGHT='关闭背光'; ///\r\nZhHansMsg.MIXLY_LCD_BACKLIGHT='打开背光'; ///\r\n\r\nZhHansMsg.MIXLY_LCD128_SETUP='128X32 LCD 初始化';  ////////////////\r\nZhHansMsg.MIXLY_LCD128_CURSOR='128X32 LCD 设置位置';\r\nZhHansMsg.MIXLY_DISPLAY_STRING='128X32 LCD 显示字符';\r\nZhHansMsg.MIXLY_ke_LCD128_PIXLE='128X32 LCD 画点坐标';\r\nZhHansMsg.MIXLY_ke_LCD128_D='128X32 LCD 删除点坐标';\r\nZhHansMsg.MIXLY_LCD128_CLEAR='128X32 LCD 清屏';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_2004LCD='IIC2004LCD';\r\nZhHansMsg.MIXLY_ke_print1='打印第一行';\r\nZhHansMsg.MIXLY_ke_print2='打印第二行';\r\nZhHansMsg.MIXLY_ke_print3='打印第三行';\r\nZhHansMsg.MIXLY_ke_print4='打印第四行';\r\n\r\n\r\nZhHansMsg.MIXLY_ke_MATRIX='8*8点阵';\r\nZhHansMsg.MIXLY_ke_TM1637='4位8段数码管';\r\nZhHansMsg.MIXLY_ke_TM1637_C='位数';\r\nZhHansMsg.MIXLY_ke_TM1637_P='在第几位开始显示';\r\nZhHansMsg.MIXLY_ke_TM1637_Fill='是否填充0';\r\nZhHansMsg.MIXLY_ke_TM1637_light='亮度0~7';\r\nZhHansMsg.MIXLY_ke_TM1637_xy='显或隐';\r\nZhHansMsg.MIXLY_ke_TM1637_left='左边';\r\nZhHansMsg.MIXLY_ke_TM1637_maohao='冒号';\r\nZhHansMsg.MIXLY_ke_TM1637_right='右边';\r\nZhHansMsg.MIXLY_ke_value='数值';\r\n\r\n//4 Display\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY='四位数码管';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING='显示字符串';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER='显示数字';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1='第';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2='个';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_DOT='小数点';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS='亮度';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE='(1~8)';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR='时';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE='分';\r\nZhHansMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND='秒';\r\n//4 Display time\r\nZhHansMsg.MIXLY_ke_TIME_SEC_ON ='亮';\r\nZhHansMsg.MIXLY_ke_TIME_SEC_BLINK ='闪';\r\nZhHansMsg.MIXLY_ke_TIME_SEC_OFF='灭';\r\n\r\nZhHansMsg.MIXLY_ke_IR_E='红外发射模块';\r\nZhHansMsg.MIXLY_ke_IR_R='红外接收模块';\r\nZhHansMsg.MIXLY_ke_W5100='W5100以太网模块';\r\nZhHansMsg.MIXLY_rc522_iic_init='RFID RC522_I2C 初始化';\r\nZhHansMsg.MIXLY_rc522_iic_read='RFID RC522_I2C 读取值';\r\nZhHansMsg.MIXLY_ke_BLUETOOTH='蓝牙4.0模块';\r\nZhHansMsg.MIXLY_ke_read='接收到信号';\r\n\r\n\r\n//ZhHansMsg.MIXLY_ke_kzsc = '控制输出';\r\n\r\nZhHansMsg.MIXLY_ke_Count='灯号';\r\n\r\nZhHansMsg.MIXLY_ke_YEAR = '年';\r\nZhHansMsg.MIXLY_ke_MONTH = '月';\r\nZhHansMsg.MIXLY_ke_DAY = '日';\r\nZhHansMsg.MIXLY_ke_HOUR = '时';\r\nZhHansMsg.MIXLY_ke_MINUTE = '分';\r\nZhHansMsg.MIXLY_ke_SECOND = '秒';\r\nZhHansMsg.MIXLY_ke_WEEK = '周';\r\n\r\nZhHansMsg.MIXLY_ke_angle = '角度';\r\n\r\nZhHansMsg.kids_Ode_to_joy = \"圣诞歌\";\r\nZhHansMsg.kids_birthday = \"生日快乐\";\r\n\r\nZhHansMsg.kids_tone = \"音调\";\r\nZhHansMsg.kids_beat = \"节拍\";\r\nZhHansMsg.kids_play_tone = \"播放乐曲\";\r\nZhHansMsg.kids_notone = \"关闭蜂鸣器\";\r\n\r\nZhHansMsg.kids_ADkey = \"5位按键模块\";\r\n\r\nexport const ZhHansCatgories = {};","export const ZhHantMsg = {};\r\n\r\nZhHantMsg.ke_red_led = '红色LED灯';\r\nZhHantMsg.ke_yellow_led='黄色LED灯';\r\nZhHantMsg.ke_blue_led = '蓝色LED灯';\r\nZhHantMsg.ke_green_led='绿色LED灯';\r\nZhHantMsg.ke_white_led='白色LED灯';\r\nZhHantMsg.ke_dual_led = '红绿双色灯';\r\nZhHantMsg.ke_jg1='激光';\r\nZhHantMsg.Kids_anologWrite = 'PWM输出';\r\nZhHantMsg.Kids_value = '赋值为';\r\nZhHantMsg.Kids_ON = '高';\r\nZhHantMsg.Kids_OFF = '低';\r\nZhHantMsg.Kids_anologWrite = 'PWM模拟输出';\r\n\r\nZhHantMsg.Kids_iic = '管脚：SDA# A4, SCL# A5';\r\nZhHantMsg.Kids_rot = '按钮管脚';\r\nZhHantMsg.Kids_rot_count = '计数变量';\r\n\r\nZhHantMsg.Kids_bits = '字符串';\r\nZhHantMsg.Kids_pin = '管脚';\r\n\r\nZhHantMsg.Kids_iic_pin = '管脚SDA:A4,SCL:A5';\r\nZhHantMsg.Kids_lcd_p = '液晶显示屏';\r\nZhHantMsg.Kids_shilihua = '实例化名称';\r\nZhHantMsg.Kids_size = '字体大小';\r\nZhHantMsg.Kids_printcount = '显示数字';\r\nZhHantMsg.ke_string = '显示字符';\r\n\r\nZhHantMsg.Kids_lcd_left = '液晶显示屏往左滚动';\r\nZhHantMsg.Kids_lcd_right = '液晶显示屏往右滚动';\r\n\r\nZhHantMsg.ke_TM1637='4位8段数码管';\r\nZhHantMsg.ke_ws='位数';\r\nZhHantMsg.ke_begin='显示的位置';\r\nZhHantMsg.ke_fill0='是否补充0';\r\nZhHantMsg.ke_light='亮度0~7';\r\nZhHantMsg.ke_XY='显或隐';\r\nZhHantMsg.ke_L='左边';\r\nZhHantMsg.ke_R='右边';\r\nZhHantMsg.ke_MH='冒号';\r\nZhHantMsg.ke_value='数值';\r\n\r\nZhHantMsg.ke_oled_init = 'OLED初始化';\r\nZhHantMsg.ke_oled_piexl = 'OLED_画点的坐标';\r\nZhHantMsg.ke_oled_x = '列';\r\nZhHantMsg.ke_oled_y = '行';\r\nZhHantMsg.ke_oled_cong = '从';\r\nZhHantMsg.ke_oled_dao = '到';\r\nZhHantMsg.ke_oled_kai = '起始位';\r\nZhHantMsg.ke_oled_kuan = '宽';\r\nZhHantMsg.ke_oled_chang = '长';\r\nZhHantMsg.ke_oled_angle1 = '角度1为';\r\nZhHantMsg.ke_oled_angle2 = '角度2为';\r\nZhHantMsg.ke_oled_angle3 = '角度3为';\r\n\r\nZhHantMsg.ke_oled_line = 'OLED_画两点连线';\r\nZhHantMsg.ke_oled_rect = 'OLED_画空心矩形';\r\nZhHantMsg.ke_oled_fil_lrect = 'OLED_画实心矩形';\r\nZhHantMsg.ke_oled_r_rect = 'OLED_画倒圆角的空心矩形';\r\nZhHantMsg.ke_oled_r_fill_rect = 'OLED_画倒圆角的实心矩形';\r\nZhHantMsg.ke_oled_circle = 'OLED_画空心圆形  圆心坐标';\r\nZhHantMsg.ke_oled_circle_radius = '圆半径';\r\nZhHantMsg.ke_oled_radius = '圆角半径';\r\nZhHantMsg.ke_oled_fill_circle = 'OLED_画实心的圆形  圆心坐标';\r\nZhHantMsg.ke_oled_triangle = 'OLED_画空心三角形';\r\nZhHantMsg.ke_oled_fill_triangle = 'OLED_画实心三角形';\r\nZhHantMsg.ke_oled_string1 = 'OLED_显示字符串或数字';\r\nZhHantMsg.ke_oled_weizhi = '显示的位置';\r\nZhHantMsg.ke_oled_print = '显示';\r\nZhHantMsg.ke_oled_clear = 'OLED_清屏';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_LED1='食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED2='紅色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED3='綠色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED4='黃色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED5='藍色食人魚LED';\r\nZhHantMsg.MIXLY_ke_LED01='草帽LED';\r\nZhHantMsg.MIXLY_ke_LED02='紅色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED03='綠色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED04='黃色草帽LED';\r\nZhHantMsg.MIXLY_ke_LED05='藍色草帽LED';\r\nZhHantMsg.MIXLY_ke_QCD='七彩led灯';\r\nZhHantMsg.MIXLY_ke_RGB_A='共阳RGB';\r\nZhHantMsg.MIXLY_ke_RGB_B='共阴RGB';\r\n\r\nZhHantMsg.MIXLY_ke_BUZZER1='有源蜂鳴器';\r\nZhHantMsg.MIXLY_ke_BUZZER2='無源蜂鳴器';\r\nZhHantMsg.MIXLY_ke_RELAY='繼電器';\r\nZhHantMsg.MIXLY_ke_v_motor='震动马达';\r\nZhHantMsg.MIXLY_ke_SPEAKER='扬声器';\r\nZhHantMsg.MIXLY_NOTONE_PIN = '结束声音 管脚#';\r\nZhHantMsg.MIXLY_ke_MOTOR='风扇';\r\nZhHantMsg.MIXLY_ke_MOTOR01='减速电机';\r\nZhHantMsg.MIXLY_ke_SERVO='舵機';\r\nZhHantMsg.MIXLY_ke_TB6612='TB6612电机驱动';\r\nZhHantMsg.MIXLY_H='正';\r\nZhHantMsg.MIXLY_L='反';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_2812RGB='NeoPixel全彩LED';\r\n\r\nZhHantMsg.MIXLY_ke_IR_G='人體紅外熱傳感器';\r\nZhHantMsg.MIXLY_ke_FLAME='火焰傳感器';\r\nZhHantMsg.MIXLY_ke_HALL='霍爾傳感器';\r\nZhHantMsg.MIXLY_ke_CRASH='碰撞傳感器';\r\nZhHantMsg.MIXLY_ke_BUTTON='按鍵';\r\nZhHantMsg.MIXLY_ke_sl_BUTTON='自锁按键';\r\nZhHantMsg.MIXLY_ke_TUOCH='電容觸摸傳感器';\r\nZhHantMsg.MIXLY_ke_KNOCK='敲擊傳感器';\r\nZhHantMsg.MIXLY_ke_TILT='傾斜傳感器';\r\nZhHantMsg.MIXLY_ke_SHAKE='振動傳感器';\r\nZhHantMsg.MIXLY_ke_REED_S='幹簧管傳感器';\r\nZhHantMsg.MIXLY_ke_TRACK='循跡傳感器';\r\nZhHantMsg.MIXLY_ke_AVOID='避障傳感器';\r\nZhHantMsg.MIXLY_ke_LIGHT_B='光折斷傳感器';\r\nZhHantMsg.MIXLY_ke_ROT='旋转编码器';\r\n\r\nZhHantMsg.MIXLY_ke_ANALOG_T='模擬溫度傳感器';\r\nZhHantMsg.MIXLY_ke_SOUND='聲音傳感器';\r\nZhHantMsg.MIXLY_ke_LIGHT='光敏傳感器';\r\nZhHantMsg.MIXLY_ke_UV='紫外线传感器';\r\nZhHantMsg.MIXLY_ke_Piezo='陶瓷压电传感器';\r\nZhHantMsg.MIXLY_ke_WATER='水位傳感器';\r\nZhHantMsg.MIXLY_ke_SOIL='土壤傳感器';\r\nZhHantMsg.MIXLY_ke_POTENTIOMETER='旋转電位器';\r\nZhHantMsg.MIXLY_ke_LM35='LM35溫度傳感器';\r\nZhHantMsg.MIXLY_ke_SLIDE_POTENTIOMETER='滑動電位器';\r\nZhHantMsg.MIXLY_ke_TEMT6000='TEMT6000環境光傳感器';\r\nZhHantMsg.MIXLY_ke_STEAM='水蒸氣傳感器';\r\nZhHantMsg.MIXLY_ke_FILM_P='薄膜壓力傳感器';\r\nZhHantMsg.MIXLY_ke_JOYSTICK='遙桿傳感器';\r\nZhHantMsg.MIXLY_ke_JOYSTICK_btn='遥杆按钮';\r\nZhHantMsg.MIXLY_ke_SMOKE='煙霧傳感器';\r\nZhHantMsg.MIXLY_ke_ALCOHOL='酒精傳感器';\r\nZhHantMsg.MIXLY_ke_Voltage='电压传感器';\r\nZhHantMsg.MIXLY_ke_Current='电流传感器';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_18B20='18B20溫度傳感器';\r\nZhHantMsg.MIXLY_ke_18B20_R='获取温度';\r\nZhHantMsg.MIXLY_ke_DHT11='溫濕度傳感器';\r\nZhHantMsg.MIXLY_DHT11_H='获取湿度';    /////////////\r\nZhHantMsg.MIXLY_DHT11_T='获取温度';     ////////////\r\nZhHantMsg.MIXLY_ke_BMP180='BMP180高度計傳感器';\r\nZhHantMsg.MIXLY_ke_BMP180_T='温度';\r\nZhHantMsg.MIXLY_ke_BMP180_A='大气压';\r\nZhHantMsg.MIXLY_ke_BMP180_H='海拔高度';\r\n\r\nZhHantMsg.MIXLY_ke_BMP280='BMP280高度計傳感器';\r\nZhHantMsg.MIXLY_ke_BMP280_T='温度';\r\nZhHantMsg.MIXLY_ke_BMP280_A='大气压';\r\nZhHantMsg.MIXLY_ke_BMP280_H='海拔高度';\r\n\r\nZhHantMsg.MIXLY_ke_SR04='SR04超聲波模塊';\r\nZhHantMsg.MIXLY_ke_3231='3231時鐘';\r\n\r\n//RTC-DS3231/DS1307\r\nZhHantMsg.MIXLY_ke_DS3231='DS3231';\r\nZhHantMsg.MIXLY_ke_DS1307='DS1307';\r\nZhHantMsg.MIXLY_ke_DS3231_GET_TIME='獲取';\r\nZhHantMsg.MIXLY_ke_DS3231_SET_TIME='設置時間';\r\nZhHantMsg.MIXLY_ke_DS3231_SET_TIME2='編譯的日期與時間';\r\nZhHantMsg.MIXLY_ke_YEAR='年';\r\nZhHantMsg.MIXLY_ke_MONTH='月';\r\nZhHantMsg.MIXLY_ke_DAY='日';\r\nZhHantMsg.MIXLY_ke_HOUR='時';\r\nZhHantMsg.MIXLY_ke_MINUTE='分';\r\nZhHantMsg.MIXLY_ke_SECOND='秒';\r\nZhHantMsg.MIXLY_ke_DAYOFWEEK='星期';\r\n\r\nZhHantMsg.MIXLY_ke_ADXL345='加速度傳感器';\r\nZhHantMsg.MIXLY_ADXL345_X='X轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_Y='Y轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_Z='Z轴加速度'; ///\r\nZhHantMsg.MIXLY_ADXL345_XA='X轴角度';  ///\r\nZhHantMsg.MIXLY_ADXL345_YA='Y轴角度';  ///\r\nZhHantMsg.MLX90614_TYPE = '紅外測溫傳感器';\r\nZhHantMsg.MLX90614_TARGET_OBJECT_TEMP = '目標物體溫度';\r\nZhHantMsg.MLX90614_AMBIENT_TEMP = '周圍環境溫度';\r\nZhHantMsg.TCS34725_Get_RGB = 'TCS34725顏色感測器 獲取顏色';\r\nZhHantMsg.ke_Gesture_APDS='手势传感器获取手势';\r\nZhHantMsg.MIXLY_BMP388_init='BPM388氣壓感知器 初始化';\r\nZhHantMsg.MIXLY_BMP388_read='BPM388氣壓感知器 讀取值';\r\n\r\nZhHantMsg.MIXLY_ke_OLED='OLED_显示字符串或数字';\r\nZhHantMsg.MIXLY_ke_1602LCD='IIC1602LCD';\r\nZhHantMsg.MIXLY_SETUP='初始化';  ////////////////\r\nZhHantMsg.MIXLY_LCD_ADDRESS='设备地址'; /////////\r\nZhHantMsg.MIXLY_LCD_PRINT1='打印第一行';  /////////\r\nZhHantMsg.MIXLY_LCD_PRINT2='打印第二行'; ///////////\r\nZhHantMsg.MIXLY_LCD_ROW='在第'; /////\r\nZhHantMsg.MIXLY_LCD_COLUMN='行第'; /////////\r\nZhHantMsg.MIXLY_LCD_PRINT='列打印'; ////\r\nZhHantMsg.MIXLY_LCD_STAT_ON='开';  /////\r\nZhHantMsg.MIXLY_LCD_STAT_OFF='关';  /////\r\nZhHantMsg.MIXLY_LCD_STAT_CURSOR='有光标';  ////\r\nZhHantMsg.MIXLY_LCD_STAT_NOCURSOR='无光标';  ////\r\nZhHantMsg.MIXLY_LCD_STAT_BLINK='闪烁';  ////\r\nZhHantMsg.MIXLY_LCD_STAT_NOBLINK='不闪烁'; ///\r\nZhHantMsg.MIXLY_LCD_STAT_CLEAR='清屏';  ///\r\nZhHantMsg.MIXLY_LCD_NOBACKLIGHT='关闭背光'; ///\r\nZhHantMsg.MIXLY_LCD_BACKLIGHT='打开背光'; ///\r\nZhHantMsg.MIXLY_ke_2004LCD='IIC2004LCD';\r\nZhHantMsg.MIXLY_ke_print1='打印第一行';\r\nZhHantMsg.MIXLY_ke_print2='打印第二行';\r\nZhHantMsg.MIXLY_ke_print3='打印第三行';\r\nZhHantMsg.MIXLY_ke_print4='打印第四行';\r\nZhHantMsg.MIXLY_ke_MATRIX='8*8點陣';\r\n\r\nZhHantMsg.MIXLY_LCD128_SETUP='128X32 LCD 初始化';  ////////////////\r\nZhHantMsg.MIXLY_LCD128_CURSOR='128X32 LCD 设置位置';\r\nZhHantMsg.MIXLY_DISPLAY_STRING='128X32 LCD 显示字符';\r\nZhHantMsg.MIXLY_ke_LCD128_PIXLE='128X32 LCD 画点坐标';\r\nZhHantMsg.MIXLY_ke_LCD128_D='128X32 LCD 删除点坐标';\r\nZhHantMsg.MIXLY_LCD128_CLEAR='128X32 LCD 清屏';\r\n\r\n\r\nZhHantMsg.MIXLY_ke_TM1637='4位8段數碼管';\r\nZhHantMsg.MIXLY_ke_TM1637_C='位数';\r\nZhHantMsg.MIXLY_ke_TM1637_P='在第几位开始显示';\r\nZhHantMsg.MIXLY_ke_TM1637_Fill='是否填充0';\r\nZhHantMsg.MIXLY_ke_TM1637_light='亮度0~7';\r\nZhHantMsg.MIXLY_ke_TM1637_xy='显或隐';\r\nZhHantMsg.MIXLY_ke_TM1637_left='左边';\r\nZhHantMsg.MIXLY_ke_TM1637_maohao='冒号';\r\nZhHantMsg.MIXLY_ke_TM1637_right='右边';\r\nZhHantMsg.MIXLY_ke_value='数值';\r\n\r\n//4 Display\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY='四位數碼管';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYSTRING='顯示字符串';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DISPLAYNUMBER='顯示數字';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER1='第';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_NOMBER2='個';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_DOT='小數點';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS='亮度';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_BRIGHTNESS_RANGE='(1~8)';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_HOUR='時';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_MINUTE='分';\r\nZhHantMsg.MIXLY_ke_4DIGITDISPLAY_TIME_SECOND='秒';\r\n//4 Display time\r\nZhHantMsg.MIXLY_ke_TIME_SEC_ON ='亮';\r\nZhHantMsg.MIXLY_ke_TIME_SEC_BLINK ='閃';\r\nZhHantMsg.MIXLY_ke_TIME_SEC_OFF='滅';\r\n\r\nZhHantMsg.MIXLY_ke_IR_E='紅外發射模塊';\r\nZhHantMsg.MIXLY_ke_IR_R='紅外接收模塊';\r\nZhHantMsg.MIXLY_ke_W5100='W5100以太網模塊';\r\nZhHantMsg.MIXLY_rc522_iic_init='RFID RC522_I2C 初始化';\r\nZhHantMsg.MIXLY_rc522_iic_read='RFID RC522_I2C 读取值';\r\nZhHantMsg.MIXLY_ke_BLUETOOTH='藍牙4.0模塊';\r\nZhHantMsg.MIXLY_ke_read='接收到信号';\r\n\r\nZhHantMsg.MIXLY_ke_Count='灯号';\r\n\r\nZhHantMsg.MIXLY_ke_YEAR = '年';\r\nZhHantMsg.MIXLY_ke_MONTH = '月';\r\nZhHantMsg.MIXLY_ke_DAY = '日';\r\nZhHantMsg.MIXLY_ke_HOUR = '时';\r\nZhHantMsg.MIXLY_ke_MINUTE = '分';\r\nZhHantMsg.MIXLY_ke_SECOND = '秒';\r\nZhHantMsg.MIXLY_ke_WEEK = '周';\r\n\r\nZhHantMsg.MIXLY_ke_angle = '角度';\r\n\r\nZhHantMsg.kids_Ode_to_joy = \"圣诞歌\";\r\nZhHantMsg.kids_birthday = \"生日快乐\";\r\n\r\nZhHantMsg.kids_tone = \"音调\";\r\nZhHantMsg.kids_beat = \"节拍\";\r\nZhHantMsg.kids_play_tone = \"播放乐曲\";\r\nZhHantMsg.kids_notone = \"关闭蜂鸣器\";\r\n\r\nZhHantMsg.kids_ADkey = \"5位按键模块\";\r\n\r\nexport const ZhHantCatgories = {};","module.exports = Blockly;","module.exports = profile;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as Blockly from 'blockly/core';\r\nimport { ZhHansMsg, ZhHansCatgories } from './language/zh-hans';\r\nimport { ZhHantMsg, ZhHantCatgories } from './language/zh-hant';\r\nimport { EnMsg, EnCatgories } from './language/en';\r\nimport * as generators from './generators/generator';\r\nimport * as blocks from './blocks/block';\r\n\r\n// 载入语言文件\r\nObject.assign(Blockly.Lang.ZhHans, ZhHansMsg);\r\nObject.assign(Blockly.Lang.ZhHant, ZhHantMsg);\r\nObject.assign(Blockly.Lang.En, EnMsg);\r\nObject.assign(Blockly.Lang.ZhHans.MSG, ZhHansCatgories);\r\nObject.assign(Blockly.Lang.ZhHant.MSG, ZhHantCatgories);\r\nObject.assign(Blockly.Lang.En.MSG, EnCatgories);\r\n\r\n// 载入图形化模块外观定义文件\r\nObject.assign(Blockly.Blocks, blocks);\r\n\r\n// 载入图形化模块代码生成定义文件\r\nObject.assign(Blockly.Arduino.forBlock, generators);"],"names":[],"sourceRoot":""}